//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Presupuesto_Ingreso {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class PresupuestoIngreso : DataSet {
        
        private total_matriculaDataTable tabletotal_matricula;
        
        public PresupuestoIngreso() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected PresupuestoIngreso(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["total_matricula"] != null)) {
                    this.Tables.Add(new total_matriculaDataTable(ds.Tables["total_matricula"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public total_matriculaDataTable total_matricula {
            get {
                return this.tabletotal_matricula;
            }
        }
        
        public override DataSet Clone() {
            PresupuestoIngreso cln = ((PresupuestoIngreso)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["total_matricula"] != null)) {
                this.Tables.Add(new total_matriculaDataTable(ds.Tables["total_matricula"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletotal_matricula = ((total_matriculaDataTable)(this.Tables["total_matricula"]));
            if ((this.tabletotal_matricula != null)) {
                this.tabletotal_matricula.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "PresupuestoIngreso";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/PresupuestoIngreso.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletotal_matricula = new total_matriculaDataTable();
            this.Tables.Add(this.tabletotal_matricula);
        }
        
        private bool ShouldSerializetotal_matricula() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void total_matriculaRowChangeEventHandler(object sender, total_matriculaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class total_matriculaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnP_MOROSIDAD;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnCARR_CCOD;
            
            private DataColumn columnTOTAL_MATRICULA;
            
            private DataColumn columnTOTAL_COLEGIATURA;
            
            private DataColumn columnMOROSIDAD;
            
            private DataColumn columnESTIMACION;
            
            private DataColumn columnPERIODO;
            
            private DataColumn columnFECHA_INICIO;
            
            private DataColumn columnFECHA_TERMINO;
            
            private DataColumn columnSEDE_TDESC;
            
            internal total_matriculaDataTable() : 
                    base("total_matricula") {
                this.InitClass();
            }
            
            internal total_matriculaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn P_MOROSIDADColumn {
                get {
                    return this.columnP_MOROSIDAD;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            internal DataColumn TOTAL_MATRICULAColumn {
                get {
                    return this.columnTOTAL_MATRICULA;
                }
            }
            
            internal DataColumn TOTAL_COLEGIATURAColumn {
                get {
                    return this.columnTOTAL_COLEGIATURA;
                }
            }
            
            internal DataColumn MOROSIDADColumn {
                get {
                    return this.columnMOROSIDAD;
                }
            }
            
            internal DataColumn ESTIMACIONColumn {
                get {
                    return this.columnESTIMACION;
                }
            }
            
            internal DataColumn PERIODOColumn {
                get {
                    return this.columnPERIODO;
                }
            }
            
            internal DataColumn FECHA_INICIOColumn {
                get {
                    return this.columnFECHA_INICIO;
                }
            }
            
            internal DataColumn FECHA_TERMINOColumn {
                get {
                    return this.columnFECHA_TERMINO;
                }
            }
            
            internal DataColumn SEDE_TDESCColumn {
                get {
                    return this.columnSEDE_TDESC;
                }
            }
            
            public total_matriculaRow this[int index] {
                get {
                    return ((total_matriculaRow)(this.Rows[index]));
                }
            }
            
            public event total_matriculaRowChangeEventHandler total_matriculaRowChanged;
            
            public event total_matriculaRowChangeEventHandler total_matriculaRowChanging;
            
            public event total_matriculaRowChangeEventHandler total_matriculaRowDeleted;
            
            public event total_matriculaRowChangeEventHandler total_matriculaRowDeleting;
            
            public void Addtotal_matriculaRow(total_matriculaRow row) {
                this.Rows.Add(row);
            }
            
            public total_matriculaRow Addtotal_matriculaRow(string P_MOROSIDAD, string CARR_TDESC, string CARR_CCOD, string TOTAL_MATRICULA, string TOTAL_COLEGIATURA, string MOROSIDAD, string ESTIMACION, string PERIODO, string FECHA_INICIO, string FECHA_TERMINO, string SEDE_TDESC) {
                total_matriculaRow rowtotal_matriculaRow = ((total_matriculaRow)(this.NewRow()));
                rowtotal_matriculaRow.ItemArray = new object[] {
                        P_MOROSIDAD,
                        CARR_TDESC,
                        CARR_CCOD,
                        TOTAL_MATRICULA,
                        TOTAL_COLEGIATURA,
                        MOROSIDAD,
                        ESTIMACION,
                        PERIODO,
                        FECHA_INICIO,
                        FECHA_TERMINO,
                        SEDE_TDESC};
                this.Rows.Add(rowtotal_matriculaRow);
                return rowtotal_matriculaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                total_matriculaDataTable cln = ((total_matriculaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new total_matriculaDataTable();
            }
            
            internal void InitVars() {
                this.columnP_MOROSIDAD = this.Columns["P_MOROSIDAD"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
                this.columnTOTAL_MATRICULA = this.Columns["TOTAL_MATRICULA"];
                this.columnTOTAL_COLEGIATURA = this.Columns["TOTAL_COLEGIATURA"];
                this.columnMOROSIDAD = this.Columns["MOROSIDAD"];
                this.columnESTIMACION = this.Columns["ESTIMACION"];
                this.columnPERIODO = this.Columns["PERIODO"];
                this.columnFECHA_INICIO = this.Columns["FECHA_INICIO"];
                this.columnFECHA_TERMINO = this.Columns["FECHA_TERMINO"];
                this.columnSEDE_TDESC = this.Columns["SEDE_TDESC"];
            }
            
            private void InitClass() {
                this.columnP_MOROSIDAD = new DataColumn("P_MOROSIDAD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP_MOROSIDAD);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnTOTAL_MATRICULA = new DataColumn("TOTAL_MATRICULA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATRICULA);
                this.columnTOTAL_COLEGIATURA = new DataColumn("TOTAL_COLEGIATURA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COLEGIATURA);
                this.columnMOROSIDAD = new DataColumn("MOROSIDAD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMOROSIDAD);
                this.columnESTIMACION = new DataColumn("ESTIMACION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESTIMACION);
                this.columnPERIODO = new DataColumn("PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO);
                this.columnFECHA_INICIO = new DataColumn("FECHA_INICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_INICIO);
                this.columnFECHA_TERMINO = new DataColumn("FECHA_TERMINO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_TERMINO);
                this.columnSEDE_TDESC = new DataColumn("SEDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TDESC);
                this.columnP_MOROSIDAD.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
                this.columnTOTAL_MATRICULA.ReadOnly = true;
                this.columnTOTAL_COLEGIATURA.ReadOnly = true;
                this.columnMOROSIDAD.ReadOnly = true;
                this.columnESTIMACION.ReadOnly = true;
                this.columnPERIODO.ReadOnly = true;
                this.columnFECHA_INICIO.ReadOnly = true;
                this.columnFECHA_TERMINO.ReadOnly = true;
                this.columnSEDE_TDESC.ReadOnly = true;
            }
            
            public total_matriculaRow Newtotal_matriculaRow() {
                return ((total_matriculaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new total_matriculaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(total_matriculaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.total_matriculaRowChanged != null)) {
                    this.total_matriculaRowChanged(this, new total_matriculaRowChangeEvent(((total_matriculaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.total_matriculaRowChanging != null)) {
                    this.total_matriculaRowChanging(this, new total_matriculaRowChangeEvent(((total_matriculaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.total_matriculaRowDeleted != null)) {
                    this.total_matriculaRowDeleted(this, new total_matriculaRowChangeEvent(((total_matriculaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.total_matriculaRowDeleting != null)) {
                    this.total_matriculaRowDeleting(this, new total_matriculaRowChangeEvent(((total_matriculaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetotal_matriculaRow(total_matriculaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class total_matriculaRow : DataRow {
            
            private total_matriculaDataTable tabletotal_matricula;
            
            internal total_matriculaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletotal_matricula = ((total_matriculaDataTable)(this.Table));
            }
            
            public string P_MOROSIDAD {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.P_MOROSIDADColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.P_MOROSIDADColumn] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.CARR_TDESCColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.CARR_CCODColumn] = value;
                }
            }
            
            public string TOTAL_MATRICULA {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.TOTAL_MATRICULAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.TOTAL_MATRICULAColumn] = value;
                }
            }
            
            public string TOTAL_COLEGIATURA {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.TOTAL_COLEGIATURAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.TOTAL_COLEGIATURAColumn] = value;
                }
            }
            
            public string MOROSIDAD {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.MOROSIDADColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.MOROSIDADColumn] = value;
                }
            }
            
            public string ESTIMACION {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.ESTIMACIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.ESTIMACIONColumn] = value;
                }
            }
            
            public string PERIODO {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.PERIODOColumn] = value;
                }
            }
            
            public string FECHA_INICIO {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.FECHA_INICIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.FECHA_INICIOColumn] = value;
                }
            }
            
            public string FECHA_TERMINO {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.FECHA_TERMINOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.FECHA_TERMINOColumn] = value;
                }
            }
            
            public string SEDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tabletotal_matricula.SEDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletotal_matricula.SEDE_TDESCColumn] = value;
                }
            }
            
            public bool IsP_MOROSIDADNull() {
                return this.IsNull(this.tabletotal_matricula.P_MOROSIDADColumn);
            }
            
            public void SetP_MOROSIDADNull() {
                this[this.tabletotal_matricula.P_MOROSIDADColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tabletotal_matricula.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tabletotal_matricula.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tabletotal_matricula.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tabletotal_matricula.CARR_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATRICULANull() {
                return this.IsNull(this.tabletotal_matricula.TOTAL_MATRICULAColumn);
            }
            
            public void SetTOTAL_MATRICULANull() {
                this[this.tabletotal_matricula.TOTAL_MATRICULAColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COLEGIATURANull() {
                return this.IsNull(this.tabletotal_matricula.TOTAL_COLEGIATURAColumn);
            }
            
            public void SetTOTAL_COLEGIATURANull() {
                this[this.tabletotal_matricula.TOTAL_COLEGIATURAColumn] = System.Convert.DBNull;
            }
            
            public bool IsMOROSIDADNull() {
                return this.IsNull(this.tabletotal_matricula.MOROSIDADColumn);
            }
            
            public void SetMOROSIDADNull() {
                this[this.tabletotal_matricula.MOROSIDADColumn] = System.Convert.DBNull;
            }
            
            public bool IsESTIMACIONNull() {
                return this.IsNull(this.tabletotal_matricula.ESTIMACIONColumn);
            }
            
            public void SetESTIMACIONNull() {
                this[this.tabletotal_matricula.ESTIMACIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODONull() {
                return this.IsNull(this.tabletotal_matricula.PERIODOColumn);
            }
            
            public void SetPERIODONull() {
                this[this.tabletotal_matricula.PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_INICIONull() {
                return this.IsNull(this.tabletotal_matricula.FECHA_INICIOColumn);
            }
            
            public void SetFECHA_INICIONull() {
                this[this.tabletotal_matricula.FECHA_INICIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_TERMINONull() {
                return this.IsNull(this.tabletotal_matricula.FECHA_TERMINOColumn);
            }
            
            public void SetFECHA_TERMINONull() {
                this[this.tabletotal_matricula.FECHA_TERMINOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_TDESCNull() {
                return this.IsNull(this.tabletotal_matricula.SEDE_TDESCColumn);
            }
            
            public void SetSEDE_TDESCNull() {
                this[this.tabletotal_matricula.SEDE_TDESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class total_matriculaRowChangeEvent : EventArgs {
            
            private total_matriculaRow eventRow;
            
            private DataRowAction eventAction;
            
            public total_matriculaRowChangeEvent(total_matriculaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public total_matriculaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
