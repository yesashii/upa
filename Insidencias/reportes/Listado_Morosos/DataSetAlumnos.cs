//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Listado_Morosos {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSetAlumnos : DataSet {
        
        private T_AlumnosDataTable tableT_Alumnos;
        
        public DataSetAlumnos() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSetAlumnos(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_Alumnos"] != null)) {
                    this.Tables.Add(new T_AlumnosDataTable(ds.Tables["T_Alumnos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_AlumnosDataTable T_Alumnos {
            get {
                return this.tableT_Alumnos;
            }
        }
        
        public override DataSet Clone() {
            DataSetAlumnos cln = ((DataSetAlumnos)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["T_Alumnos"] != null)) {
                this.Tables.Add(new T_AlumnosDataTable(ds.Tables["T_Alumnos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableT_Alumnos = ((T_AlumnosDataTable)(this.Tables["T_Alumnos"]));
            if ((this.tableT_Alumnos != null)) {
                this.tableT_Alumnos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSetAlumnos";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSetAlumnos.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableT_Alumnos = new T_AlumnosDataTable();
            this.Tables.Add(this.tableT_Alumnos);
        }
        
        private bool ShouldSerializeT_Alumnos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void T_AlumnosRowChangeEventHandler(object sender, T_AlumnosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_AlumnosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnFECHA_CORTE;
            
            private DataColumn columnSEDE_TDESC;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnRUT;
            
            private DataColumn columnNOMBRE;
            
            internal T_AlumnosDataTable() : 
                    base("T_Alumnos") {
                this.InitClass();
            }
            
            internal T_AlumnosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn FECHA_CORTEColumn {
                get {
                    return this.columnFECHA_CORTE;
                }
            }
            
            internal DataColumn SEDE_TDESCColumn {
                get {
                    return this.columnSEDE_TDESC;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn NOMBREColumn {
                get {
                    return this.columnNOMBRE;
                }
            }
            
            public T_AlumnosRow this[int index] {
                get {
                    return ((T_AlumnosRow)(this.Rows[index]));
                }
            }
            
            public event T_AlumnosRowChangeEventHandler T_AlumnosRowChanged;
            
            public event T_AlumnosRowChangeEventHandler T_AlumnosRowChanging;
            
            public event T_AlumnosRowChangeEventHandler T_AlumnosRowDeleted;
            
            public event T_AlumnosRowChangeEventHandler T_AlumnosRowDeleting;
            
            public void AddT_AlumnosRow(T_AlumnosRow row) {
                this.Rows.Add(row);
            }
            
            public T_AlumnosRow AddT_AlumnosRow(string FECHA_CORTE, string SEDE_TDESC, string CARRERA, string RUT, string NOMBRE) {
                T_AlumnosRow rowT_AlumnosRow = ((T_AlumnosRow)(this.NewRow()));
                rowT_AlumnosRow.ItemArray = new object[] {
                        FECHA_CORTE,
                        SEDE_TDESC,
                        CARRERA,
                        RUT,
                        NOMBRE};
                this.Rows.Add(rowT_AlumnosRow);
                return rowT_AlumnosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_AlumnosDataTable cln = ((T_AlumnosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_AlumnosDataTable();
            }
            
            internal void InitVars() {
                this.columnFECHA_CORTE = this.Columns["FECHA_CORTE"];
                this.columnSEDE_TDESC = this.Columns["SEDE_TDESC"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnRUT = this.Columns["RUT"];
                this.columnNOMBRE = this.Columns["NOMBRE"];
            }
            
            private void InitClass() {
                this.columnFECHA_CORTE = new DataColumn("FECHA_CORTE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_CORTE);
                this.columnSEDE_TDESC = new DataColumn("SEDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TDESC);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnNOMBRE = new DataColumn("NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE);
                this.columnFECHA_CORTE.ReadOnly = true;
                this.columnSEDE_TDESC.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnRUT.ReadOnly = true;
                this.columnNOMBRE.ReadOnly = true;
            }
            
            public T_AlumnosRow NewT_AlumnosRow() {
                return ((T_AlumnosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_AlumnosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_AlumnosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_AlumnosRowChanged != null)) {
                    this.T_AlumnosRowChanged(this, new T_AlumnosRowChangeEvent(((T_AlumnosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_AlumnosRowChanging != null)) {
                    this.T_AlumnosRowChanging(this, new T_AlumnosRowChangeEvent(((T_AlumnosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_AlumnosRowDeleted != null)) {
                    this.T_AlumnosRowDeleted(this, new T_AlumnosRowChangeEvent(((T_AlumnosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_AlumnosRowDeleting != null)) {
                    this.T_AlumnosRowDeleting(this, new T_AlumnosRowChangeEvent(((T_AlumnosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_AlumnosRow(T_AlumnosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_AlumnosRow : DataRow {
            
            private T_AlumnosDataTable tableT_Alumnos;
            
            internal T_AlumnosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Alumnos = ((T_AlumnosDataTable)(this.Table));
            }
            
            public string FECHA_CORTE {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumnos.FECHA_CORTEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumnos.FECHA_CORTEColumn] = value;
                }
            }
            
            public string SEDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumnos.SEDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumnos.SEDE_TDESCColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumnos.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumnos.CARRERAColumn] = value;
                }
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumnos.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumnos.RUTColumn] = value;
                }
            }
            
            public string NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumnos.NOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumnos.NOMBREColumn] = value;
                }
            }
            
            public bool IsFECHA_CORTENull() {
                return this.IsNull(this.tableT_Alumnos.FECHA_CORTEColumn);
            }
            
            public void SetFECHA_CORTENull() {
                this[this.tableT_Alumnos.FECHA_CORTEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_TDESCNull() {
                return this.IsNull(this.tableT_Alumnos.SEDE_TDESCColumn);
            }
            
            public void SetSEDE_TDESCNull() {
                this[this.tableT_Alumnos.SEDE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.tableT_Alumnos.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.tableT_Alumnos.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.tableT_Alumnos.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.tableT_Alumnos.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRENull() {
                return this.IsNull(this.tableT_Alumnos.NOMBREColumn);
            }
            
            public void SetNOMBRENull() {
                this[this.tableT_Alumnos.NOMBREColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_AlumnosRowChangeEvent : EventArgs {
            
            private T_AlumnosRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_AlumnosRowChangeEvent(T_AlumnosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_AlumnosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
