//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace lista_alumnos {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSetDatos : DataSet {
        
        private T_DatosDataTable tableT_Datos;
        
        public DataSetDatos() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSetDatos(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_Datos"] != null)) {
                    this.Tables.Add(new T_DatosDataTable(ds.Tables["T_Datos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DatosDataTable T_Datos {
            get {
                return this.tableT_Datos;
            }
        }
        
        public override DataSet Clone() {
            DataSetDatos cln = ((DataSetDatos)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["T_Datos"] != null)) {
                this.Tables.Add(new T_DatosDataTable(ds.Tables["T_Datos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableT_Datos = ((T_DatosDataTable)(this.Tables["T_Datos"]));
            if ((this.tableT_Datos != null)) {
                this.tableT_Datos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSetDatos";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSetDatos.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableT_Datos = new T_DatosDataTable();
            this.Tables.Add(this.tableT_Datos);
        }
        
        private bool ShouldSerializeT_Datos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void T_DatosRowChangeEventHandler(object sender, T_DatosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_DatosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnPROFE;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnASIG_CCOD;
            
            private DataColumn columnASIG_TDESC;
            
            private DataColumn columnASIG_NHORAS;
            
            private DataColumn columnSECC_CCOD;
            
            private DataColumn columnMATR_NCORR;
            
            private DataColumn columnALUM_NMATRICULA;
            
            private DataColumn columnPERS_TAPE_PATERNO;
            
            private DataColumn columnPERS_TAPE_MATERNO;
            
            private DataColumn columnPERS_TNOMBRE;
            
            private DataColumn columnCARR_CCOD;
            
            private DataColumn columnCARR_TDESC1;
            
            private DataColumn columnESPE_TDESC;
            
            internal T_DatosDataTable() : 
                    base("T_Datos") {
                this.InitClass();
            }
            
            internal T_DatosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn PROFEColumn {
                get {
                    return this.columnPROFE;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn ASIG_CCODColumn {
                get {
                    return this.columnASIG_CCOD;
                }
            }
            
            internal DataColumn ASIG_TDESCColumn {
                get {
                    return this.columnASIG_TDESC;
                }
            }
            
            internal DataColumn ASIG_NHORASColumn {
                get {
                    return this.columnASIG_NHORAS;
                }
            }
            
            internal DataColumn SECC_CCODColumn {
                get {
                    return this.columnSECC_CCOD;
                }
            }
            
            internal DataColumn MATR_NCORRColumn {
                get {
                    return this.columnMATR_NCORR;
                }
            }
            
            internal DataColumn ALUM_NMATRICULAColumn {
                get {
                    return this.columnALUM_NMATRICULA;
                }
            }
            
            internal DataColumn PERS_TAPE_PATERNOColumn {
                get {
                    return this.columnPERS_TAPE_PATERNO;
                }
            }
            
            internal DataColumn PERS_TAPE_MATERNOColumn {
                get {
                    return this.columnPERS_TAPE_MATERNO;
                }
            }
            
            internal DataColumn PERS_TNOMBREColumn {
                get {
                    return this.columnPERS_TNOMBRE;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            internal DataColumn CARR_TDESC1Column {
                get {
                    return this.columnCARR_TDESC1;
                }
            }
            
            internal DataColumn ESPE_TDESCColumn {
                get {
                    return this.columnESPE_TDESC;
                }
            }
            
            public T_DatosRow this[int index] {
                get {
                    return ((T_DatosRow)(this.Rows[index]));
                }
            }
            
            public event T_DatosRowChangeEventHandler T_DatosRowChanged;
            
            public event T_DatosRowChangeEventHandler T_DatosRowChanging;
            
            public event T_DatosRowChangeEventHandler T_DatosRowDeleted;
            
            public event T_DatosRowChangeEventHandler T_DatosRowDeleting;
            
            public void AddT_DatosRow(T_DatosRow row) {
                this.Rows.Add(row);
            }
            
            public T_DatosRow AddT_DatosRow(string PROFE, string CARR_TDESC, string ASIG_CCOD, string ASIG_TDESC, string ASIG_NHORAS, string SECC_CCOD, string MATR_NCORR, string ALUM_NMATRICULA, string PERS_TAPE_PATERNO, string PERS_TAPE_MATERNO, string PERS_TNOMBRE, string CARR_CCOD, string CARR_TDESC1, string ESPE_TDESC) {
                T_DatosRow rowT_DatosRow = ((T_DatosRow)(this.NewRow()));
                rowT_DatosRow.ItemArray = new object[] {
                        PROFE,
                        CARR_TDESC,
                        ASIG_CCOD,
                        ASIG_TDESC,
                        ASIG_NHORAS,
                        SECC_CCOD,
                        MATR_NCORR,
                        ALUM_NMATRICULA,
                        PERS_TAPE_PATERNO,
                        PERS_TAPE_MATERNO,
                        PERS_TNOMBRE,
                        CARR_CCOD,
                        CARR_TDESC1,
                        ESPE_TDESC};
                this.Rows.Add(rowT_DatosRow);
                return rowT_DatosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_DatosDataTable cln = ((T_DatosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_DatosDataTable();
            }
            
            internal void InitVars() {
                this.columnPROFE = this.Columns["PROFE"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnASIG_CCOD = this.Columns["ASIG_CCOD"];
                this.columnASIG_TDESC = this.Columns["ASIG_TDESC"];
                this.columnASIG_NHORAS = this.Columns["ASIG_NHORAS"];
                this.columnSECC_CCOD = this.Columns["SECC_CCOD"];
                this.columnMATR_NCORR = this.Columns["MATR_NCORR"];
                this.columnALUM_NMATRICULA = this.Columns["ALUM_NMATRICULA"];
                this.columnPERS_TAPE_PATERNO = this.Columns["PERS_TAPE_PATERNO"];
                this.columnPERS_TAPE_MATERNO = this.Columns["PERS_TAPE_MATERNO"];
                this.columnPERS_TNOMBRE = this.Columns["PERS_TNOMBRE"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
                this.columnCARR_TDESC1 = this.Columns["CARR_TDESC1"];
                this.columnESPE_TDESC = this.Columns["ESPE_TDESC"];
            }
            
            private void InitClass() {
                this.columnPROFE = new DataColumn("PROFE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROFE);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnASIG_CCOD = new DataColumn("ASIG_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_CCOD);
                this.columnASIG_TDESC = new DataColumn("ASIG_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_TDESC);
                this.columnASIG_NHORAS = new DataColumn("ASIG_NHORAS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_NHORAS);
                this.columnSECC_CCOD = new DataColumn("SECC_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSECC_CCOD);
                this.columnMATR_NCORR = new DataColumn("MATR_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMATR_NCORR);
                this.columnALUM_NMATRICULA = new DataColumn("ALUM_NMATRICULA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnALUM_NMATRICULA);
                this.columnPERS_TAPE_PATERNO = new DataColumn("PERS_TAPE_PATERNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TAPE_PATERNO);
                this.columnPERS_TAPE_MATERNO = new DataColumn("PERS_TAPE_MATERNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TAPE_MATERNO);
                this.columnPERS_TNOMBRE = new DataColumn("PERS_TNOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TNOMBRE);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnCARR_TDESC1 = new DataColumn("CARR_TDESC1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC1);
                this.columnESPE_TDESC = new DataColumn("ESPE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_TDESC);
                this.columnPROFE.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnASIG_CCOD.ReadOnly = true;
                this.columnASIG_TDESC.ReadOnly = true;
                this.columnASIG_NHORAS.ReadOnly = true;
                this.columnSECC_CCOD.ReadOnly = true;
                this.columnMATR_NCORR.ReadOnly = true;
                this.columnALUM_NMATRICULA.ReadOnly = true;
                this.columnPERS_TAPE_PATERNO.ReadOnly = true;
                this.columnPERS_TAPE_MATERNO.ReadOnly = true;
                this.columnPERS_TNOMBRE.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
                this.columnCARR_TDESC1.ReadOnly = true;
                this.columnESPE_TDESC.ReadOnly = true;
            }
            
            public T_DatosRow NewT_DatosRow() {
                return ((T_DatosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_DatosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_DatosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DatosRowChanged != null)) {
                    this.T_DatosRowChanged(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DatosRowChanging != null)) {
                    this.T_DatosRowChanging(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DatosRowDeleted != null)) {
                    this.T_DatosRowDeleted(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DatosRowDeleting != null)) {
                    this.T_DatosRowDeleting(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_DatosRow(T_DatosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_DatosRow : DataRow {
            
            private T_DatosDataTable tableT_Datos;
            
            internal T_DatosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Datos = ((T_DatosDataTable)(this.Table));
            }
            
            public string PROFE {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.PROFEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.PROFEColumn] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.CARR_TDESCColumn] = value;
                }
            }
            
            public string ASIG_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.ASIG_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.ASIG_CCODColumn] = value;
                }
            }
            
            public string ASIG_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.ASIG_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.ASIG_TDESCColumn] = value;
                }
            }
            
            public string ASIG_NHORAS {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.ASIG_NHORASColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.ASIG_NHORASColumn] = value;
                }
            }
            
            public string SECC_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.SECC_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.SECC_CCODColumn] = value;
                }
            }
            
            public string MATR_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.MATR_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.MATR_NCORRColumn] = value;
                }
            }
            
            public string ALUM_NMATRICULA {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.ALUM_NMATRICULAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.ALUM_NMATRICULAColumn] = value;
                }
            }
            
            public string PERS_TAPE_PATERNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.PERS_TAPE_PATERNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.PERS_TAPE_PATERNOColumn] = value;
                }
            }
            
            public string PERS_TAPE_MATERNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.PERS_TAPE_MATERNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.PERS_TAPE_MATERNOColumn] = value;
                }
            }
            
            public string PERS_TNOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.PERS_TNOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.PERS_TNOMBREColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.CARR_CCODColumn] = value;
                }
            }
            
            public string CARR_TDESC1 {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.CARR_TDESC1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.CARR_TDESC1Column] = value;
                }
            }
            
            public string ESPE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.ESPE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.ESPE_TDESCColumn] = value;
                }
            }
            
            public bool IsPROFENull() {
                return this.IsNull(this.tableT_Datos.PROFEColumn);
            }
            
            public void SetPROFENull() {
                this[this.tableT_Datos.PROFEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableT_Datos.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableT_Datos.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_CCODNull() {
                return this.IsNull(this.tableT_Datos.ASIG_CCODColumn);
            }
            
            public void SetASIG_CCODNull() {
                this[this.tableT_Datos.ASIG_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_TDESCNull() {
                return this.IsNull(this.tableT_Datos.ASIG_TDESCColumn);
            }
            
            public void SetASIG_TDESCNull() {
                this[this.tableT_Datos.ASIG_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_NHORASNull() {
                return this.IsNull(this.tableT_Datos.ASIG_NHORASColumn);
            }
            
            public void SetASIG_NHORASNull() {
                this[this.tableT_Datos.ASIG_NHORASColumn] = System.Convert.DBNull;
            }
            
            public bool IsSECC_CCODNull() {
                return this.IsNull(this.tableT_Datos.SECC_CCODColumn);
            }
            
            public void SetSECC_CCODNull() {
                this[this.tableT_Datos.SECC_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsMATR_NCORRNull() {
                return this.IsNull(this.tableT_Datos.MATR_NCORRColumn);
            }
            
            public void SetMATR_NCORRNull() {
                this[this.tableT_Datos.MATR_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsALUM_NMATRICULANull() {
                return this.IsNull(this.tableT_Datos.ALUM_NMATRICULAColumn);
            }
            
            public void SetALUM_NMATRICULANull() {
                this[this.tableT_Datos.ALUM_NMATRICULAColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_TAPE_PATERNONull() {
                return this.IsNull(this.tableT_Datos.PERS_TAPE_PATERNOColumn);
            }
            
            public void SetPERS_TAPE_PATERNONull() {
                this[this.tableT_Datos.PERS_TAPE_PATERNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_TAPE_MATERNONull() {
                return this.IsNull(this.tableT_Datos.PERS_TAPE_MATERNOColumn);
            }
            
            public void SetPERS_TAPE_MATERNONull() {
                this[this.tableT_Datos.PERS_TAPE_MATERNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_TNOMBRENull() {
                return this.IsNull(this.tableT_Datos.PERS_TNOMBREColumn);
            }
            
            public void SetPERS_TNOMBRENull() {
                this[this.tableT_Datos.PERS_TNOMBREColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tableT_Datos.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tableT_Datos.CARR_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESC1Null() {
                return this.IsNull(this.tableT_Datos.CARR_TDESC1Column);
            }
            
            public void SetCARR_TDESC1Null() {
                this[this.tableT_Datos.CARR_TDESC1Column] = System.Convert.DBNull;
            }
            
            public bool IsESPE_TDESCNull() {
                return this.IsNull(this.tableT_Datos.ESPE_TDESCColumn);
            }
            
            public void SetESPE_TDESCNull() {
                this[this.tableT_Datos.ESPE_TDESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_DatosRowChangeEvent : EventArgs {
            
            private T_DatosRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_DatosRowChangeEvent(T_DatosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_DatosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
