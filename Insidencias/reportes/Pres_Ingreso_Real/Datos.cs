//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Pres_Ingreso_Real {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class Datos : DataSet {
        
        private ProsupuestadoRealDataTable tableProsupuestadoReal;
        
        public Datos() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected Datos(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProsupuestadoReal"] != null)) {
                    this.Tables.Add(new ProsupuestadoRealDataTable(ds.Tables["ProsupuestadoReal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProsupuestadoRealDataTable ProsupuestadoReal {
            get {
                return this.tableProsupuestadoReal;
            }
        }
        
        public override DataSet Clone() {
            Datos cln = ((Datos)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ProsupuestadoReal"] != null)) {
                this.Tables.Add(new ProsupuestadoRealDataTable(ds.Tables["ProsupuestadoReal"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableProsupuestadoReal = ((ProsupuestadoRealDataTable)(this.Tables["ProsupuestadoReal"]));
            if ((this.tableProsupuestadoReal != null)) {
                this.tableProsupuestadoReal.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "Datos";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/Datos.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableProsupuestadoReal = new ProsupuestadoRealDataTable();
            this.Tables.Add(this.tableProsupuestadoReal);
        }
        
        private bool ShouldSerializeProsupuestadoReal() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ProsupuestadoRealRowChangeEventHandler(object sender, ProsupuestadoRealRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProsupuestadoRealDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnCARR_CCOD;
            
            private DataColumn columnTOTAL_MATR_COMPROMETIDA;
            
            private DataColumn columnTOTAL_COL_COMPROMETIDA;
            
            private DataColumn columnTOTAL_MATR_REAL;
            
            private DataColumn columnTOTAL_COL_REAL;
            
            private DataColumn columnSALDO;
            
            private DataColumn columnSEDE_TDESC;
            
            private DataColumn columnperiodo;
            
            private DataColumn columnfecha_inicio;
            
            private DataColumn columnfecha_termino;
            
            internal ProsupuestadoRealDataTable() : 
                    base("ProsupuestadoReal") {
                this.InitClass();
            }
            
            internal ProsupuestadoRealDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            internal DataColumn TOTAL_MATR_COMPROMETIDAColumn {
                get {
                    return this.columnTOTAL_MATR_COMPROMETIDA;
                }
            }
            
            internal DataColumn TOTAL_COL_COMPROMETIDAColumn {
                get {
                    return this.columnTOTAL_COL_COMPROMETIDA;
                }
            }
            
            internal DataColumn TOTAL_MATR_REALColumn {
                get {
                    return this.columnTOTAL_MATR_REAL;
                }
            }
            
            internal DataColumn TOTAL_COL_REALColumn {
                get {
                    return this.columnTOTAL_COL_REAL;
                }
            }
            
            internal DataColumn SALDOColumn {
                get {
                    return this.columnSALDO;
                }
            }
            
            internal DataColumn SEDE_TDESCColumn {
                get {
                    return this.columnSEDE_TDESC;
                }
            }
            
            internal DataColumn periodoColumn {
                get {
                    return this.columnperiodo;
                }
            }
            
            internal DataColumn fecha_inicioColumn {
                get {
                    return this.columnfecha_inicio;
                }
            }
            
            internal DataColumn fecha_terminoColumn {
                get {
                    return this.columnfecha_termino;
                }
            }
            
            public ProsupuestadoRealRow this[int index] {
                get {
                    return ((ProsupuestadoRealRow)(this.Rows[index]));
                }
            }
            
            public event ProsupuestadoRealRowChangeEventHandler ProsupuestadoRealRowChanged;
            
            public event ProsupuestadoRealRowChangeEventHandler ProsupuestadoRealRowChanging;
            
            public event ProsupuestadoRealRowChangeEventHandler ProsupuestadoRealRowDeleted;
            
            public event ProsupuestadoRealRowChangeEventHandler ProsupuestadoRealRowDeleting;
            
            public void AddProsupuestadoRealRow(ProsupuestadoRealRow row) {
                this.Rows.Add(row);
            }
            
            public ProsupuestadoRealRow AddProsupuestadoRealRow(string CARR_TDESC, string CARR_CCOD, string TOTAL_MATR_COMPROMETIDA, string TOTAL_COL_COMPROMETIDA, string TOTAL_MATR_REAL, string TOTAL_COL_REAL, string SALDO, string SEDE_TDESC, string periodo, string fecha_inicio, string fecha_termino) {
                ProsupuestadoRealRow rowProsupuestadoRealRow = ((ProsupuestadoRealRow)(this.NewRow()));
                rowProsupuestadoRealRow.ItemArray = new object[] {
                        CARR_TDESC,
                        CARR_CCOD,
                        TOTAL_MATR_COMPROMETIDA,
                        TOTAL_COL_COMPROMETIDA,
                        TOTAL_MATR_REAL,
                        TOTAL_COL_REAL,
                        SALDO,
                        SEDE_TDESC,
                        periodo,
                        fecha_inicio,
                        fecha_termino};
                this.Rows.Add(rowProsupuestadoRealRow);
                return rowProsupuestadoRealRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ProsupuestadoRealDataTable cln = ((ProsupuestadoRealDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ProsupuestadoRealDataTable();
            }
            
            internal void InitVars() {
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
                this.columnTOTAL_MATR_COMPROMETIDA = this.Columns["TOTAL_MATR_COMPROMETIDA"];
                this.columnTOTAL_COL_COMPROMETIDA = this.Columns["TOTAL_COL_COMPROMETIDA"];
                this.columnTOTAL_MATR_REAL = this.Columns["TOTAL_MATR_REAL"];
                this.columnTOTAL_COL_REAL = this.Columns["TOTAL_COL_REAL"];
                this.columnSALDO = this.Columns["SALDO"];
                this.columnSEDE_TDESC = this.Columns["SEDE_TDESC"];
                this.columnperiodo = this.Columns["periodo"];
                this.columnfecha_inicio = this.Columns["fecha_inicio"];
                this.columnfecha_termino = this.Columns["fecha_termino"];
            }
            
            private void InitClass() {
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnTOTAL_MATR_COMPROMETIDA = new DataColumn("TOTAL_MATR_COMPROMETIDA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_COMPROMETIDA);
                this.columnTOTAL_COL_COMPROMETIDA = new DataColumn("TOTAL_COL_COMPROMETIDA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_COMPROMETIDA);
                this.columnTOTAL_MATR_REAL = new DataColumn("TOTAL_MATR_REAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_REAL);
                this.columnTOTAL_COL_REAL = new DataColumn("TOTAL_COL_REAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_REAL);
                this.columnSALDO = new DataColumn("SALDO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSALDO);
                this.columnSEDE_TDESC = new DataColumn("SEDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TDESC);
                this.columnperiodo = new DataColumn("periodo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnperiodo);
                this.columnfecha_inicio = new DataColumn("fecha_inicio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfecha_inicio);
                this.columnfecha_termino = new DataColumn("fecha_termino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfecha_termino);
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
                this.columnTOTAL_MATR_COMPROMETIDA.ReadOnly = true;
                this.columnTOTAL_COL_COMPROMETIDA.ReadOnly = true;
                this.columnTOTAL_MATR_REAL.ReadOnly = true;
                this.columnTOTAL_COL_REAL.ReadOnly = true;
                this.columnSALDO.ReadOnly = true;
            }
            
            public ProsupuestadoRealRow NewProsupuestadoRealRow() {
                return ((ProsupuestadoRealRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProsupuestadoRealRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ProsupuestadoRealRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProsupuestadoRealRowChanged != null)) {
                    this.ProsupuestadoRealRowChanged(this, new ProsupuestadoRealRowChangeEvent(((ProsupuestadoRealRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProsupuestadoRealRowChanging != null)) {
                    this.ProsupuestadoRealRowChanging(this, new ProsupuestadoRealRowChangeEvent(((ProsupuestadoRealRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProsupuestadoRealRowDeleted != null)) {
                    this.ProsupuestadoRealRowDeleted(this, new ProsupuestadoRealRowChangeEvent(((ProsupuestadoRealRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProsupuestadoRealRowDeleting != null)) {
                    this.ProsupuestadoRealRowDeleting(this, new ProsupuestadoRealRowChangeEvent(((ProsupuestadoRealRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveProsupuestadoRealRow(ProsupuestadoRealRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProsupuestadoRealRow : DataRow {
            
            private ProsupuestadoRealDataTable tableProsupuestadoReal;
            
            internal ProsupuestadoRealRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProsupuestadoReal = ((ProsupuestadoRealDataTable)(this.Table));
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.CARR_TDESCColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.CARR_CCODColumn] = value;
                }
            }
            
            public string TOTAL_MATR_COMPROMETIDA {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.TOTAL_MATR_COMPROMETIDAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.TOTAL_MATR_COMPROMETIDAColumn] = value;
                }
            }
            
            public string TOTAL_COL_COMPROMETIDA {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.TOTAL_COL_COMPROMETIDAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.TOTAL_COL_COMPROMETIDAColumn] = value;
                }
            }
            
            public string TOTAL_MATR_REAL {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.TOTAL_MATR_REALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.TOTAL_MATR_REALColumn] = value;
                }
            }
            
            public string TOTAL_COL_REAL {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.TOTAL_COL_REALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.TOTAL_COL_REALColumn] = value;
                }
            }
            
            public string SALDO {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.SALDOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.SALDOColumn] = value;
                }
            }
            
            public string SEDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.SEDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.SEDE_TDESCColumn] = value;
                }
            }
            
            public string periodo {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.periodoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.periodoColumn] = value;
                }
            }
            
            public string fecha_inicio {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.fecha_inicioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.fecha_inicioColumn] = value;
                }
            }
            
            public string fecha_termino {
                get {
                    try {
                        return ((string)(this[this.tableProsupuestadoReal.fecha_terminoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProsupuestadoReal.fecha_terminoColumn] = value;
                }
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableProsupuestadoReal.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableProsupuestadoReal.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tableProsupuestadoReal.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tableProsupuestadoReal.CARR_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_COMPROMETIDANull() {
                return this.IsNull(this.tableProsupuestadoReal.TOTAL_MATR_COMPROMETIDAColumn);
            }
            
            public void SetTOTAL_MATR_COMPROMETIDANull() {
                this[this.tableProsupuestadoReal.TOTAL_MATR_COMPROMETIDAColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_COMPROMETIDANull() {
                return this.IsNull(this.tableProsupuestadoReal.TOTAL_COL_COMPROMETIDAColumn);
            }
            
            public void SetTOTAL_COL_COMPROMETIDANull() {
                this[this.tableProsupuestadoReal.TOTAL_COL_COMPROMETIDAColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_REALNull() {
                return this.IsNull(this.tableProsupuestadoReal.TOTAL_MATR_REALColumn);
            }
            
            public void SetTOTAL_MATR_REALNull() {
                this[this.tableProsupuestadoReal.TOTAL_MATR_REALColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_REALNull() {
                return this.IsNull(this.tableProsupuestadoReal.TOTAL_COL_REALColumn);
            }
            
            public void SetTOTAL_COL_REALNull() {
                this[this.tableProsupuestadoReal.TOTAL_COL_REALColumn] = System.Convert.DBNull;
            }
            
            public bool IsSALDONull() {
                return this.IsNull(this.tableProsupuestadoReal.SALDOColumn);
            }
            
            public void SetSALDONull() {
                this[this.tableProsupuestadoReal.SALDOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_TDESCNull() {
                return this.IsNull(this.tableProsupuestadoReal.SEDE_TDESCColumn);
            }
            
            public void SetSEDE_TDESCNull() {
                this[this.tableProsupuestadoReal.SEDE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsperiodoNull() {
                return this.IsNull(this.tableProsupuestadoReal.periodoColumn);
            }
            
            public void SetperiodoNull() {
                this[this.tableProsupuestadoReal.periodoColumn] = System.Convert.DBNull;
            }
            
            public bool Isfecha_inicioNull() {
                return this.IsNull(this.tableProsupuestadoReal.fecha_inicioColumn);
            }
            
            public void Setfecha_inicioNull() {
                this[this.tableProsupuestadoReal.fecha_inicioColumn] = System.Convert.DBNull;
            }
            
            public bool Isfecha_terminoNull() {
                return this.IsNull(this.tableProsupuestadoReal.fecha_terminoColumn);
            }
            
            public void Setfecha_terminoNull() {
                this[this.tableProsupuestadoReal.fecha_terminoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProsupuestadoRealRowChangeEvent : EventArgs {
            
            private ProsupuestadoRealRow eventRow;
            
            private DataRowAction eventAction;
            
            public ProsupuestadoRealRowChangeEvent(ProsupuestadoRealRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ProsupuestadoRealRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
