//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace envios_notaria_pagare {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class datosPagare : DataSet {
        
        private envioPagareDataTable tableenvioPagare;
        
        public datosPagare() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected datosPagare(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["envioPagare"] != null)) {
                    this.Tables.Add(new envioPagareDataTable(ds.Tables["envioPagare"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public envioPagareDataTable envioPagare {
            get {
                return this.tableenvioPagare;
            }
        }
        
        public override DataSet Clone() {
            datosPagare cln = ((datosPagare)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["envioPagare"] != null)) {
                this.Tables.Add(new envioPagareDataTable(ds.Tables["envioPagare"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableenvioPagare = ((envioPagareDataTable)(this.Tables["envioPagare"]));
            if ((this.tableenvioPagare != null)) {
                this.tableenvioPagare.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "datosPagare";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/datosPagare.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableenvioPagare = new envioPagareDataTable();
            this.Tables.Add(this.tableenvioPagare);
        }
        
        private bool ShouldSerializeenvioPagare() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void envioPagareRowChangeEventHandler(object sender, envioPagareRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class envioPagareDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnFOLIO;
            
            private DataColumn columnEMPRESA;
            
            private DataColumn columnFECHA_EN;
            
            private DataColumn columnFECHA_ENVIO;
            
            private DataColumn columnVALOR_PAGAR;
            
            private DataColumn columnESTADO_PAGARE;
            
            private DataColumn columnRUT_ALUMNO;
            
            private DataColumn columnRUT_APODERADO;
            
            private DataColumn columnNOMBRE_APODERADO;
            
            private DataColumn columnpaga_ncorr;
            
            internal envioPagareDataTable() : 
                    base("envioPagare") {
                this.InitClass();
            }
            
            internal envioPagareDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn FOLIOColumn {
                get {
                    return this.columnFOLIO;
                }
            }
            
            internal DataColumn EMPRESAColumn {
                get {
                    return this.columnEMPRESA;
                }
            }
            
            internal DataColumn FECHA_ENColumn {
                get {
                    return this.columnFECHA_EN;
                }
            }
            
            internal DataColumn FECHA_ENVIOColumn {
                get {
                    return this.columnFECHA_ENVIO;
                }
            }
            
            internal DataColumn VALOR_PAGARColumn {
                get {
                    return this.columnVALOR_PAGAR;
                }
            }
            
            internal DataColumn ESTADO_PAGAREColumn {
                get {
                    return this.columnESTADO_PAGARE;
                }
            }
            
            internal DataColumn RUT_ALUMNOColumn {
                get {
                    return this.columnRUT_ALUMNO;
                }
            }
            
            internal DataColumn RUT_APODERADOColumn {
                get {
                    return this.columnRUT_APODERADO;
                }
            }
            
            internal DataColumn NOMBRE_APODERADOColumn {
                get {
                    return this.columnNOMBRE_APODERADO;
                }
            }
            
            internal DataColumn paga_ncorrColumn {
                get {
                    return this.columnpaga_ncorr;
                }
            }
            
            public envioPagareRow this[int index] {
                get {
                    return ((envioPagareRow)(this.Rows[index]));
                }
            }
            
            public event envioPagareRowChangeEventHandler envioPagareRowChanged;
            
            public event envioPagareRowChangeEventHandler envioPagareRowChanging;
            
            public event envioPagareRowChangeEventHandler envioPagareRowDeleted;
            
            public event envioPagareRowChangeEventHandler envioPagareRowDeleting;
            
            public void AddenvioPagareRow(envioPagareRow row) {
                this.Rows.Add(row);
            }
            
            public envioPagareRow AddenvioPagareRow(string FOLIO, string EMPRESA, string FECHA_EN, string FECHA_ENVIO, string VALOR_PAGAR, string ESTADO_PAGARE, string RUT_ALUMNO, string RUT_APODERADO, string NOMBRE_APODERADO, string paga_ncorr) {
                envioPagareRow rowenvioPagareRow = ((envioPagareRow)(this.NewRow()));
                rowenvioPagareRow.ItemArray = new object[] {
                        FOLIO,
                        EMPRESA,
                        FECHA_EN,
                        FECHA_ENVIO,
                        VALOR_PAGAR,
                        ESTADO_PAGARE,
                        RUT_ALUMNO,
                        RUT_APODERADO,
                        NOMBRE_APODERADO,
                        paga_ncorr};
                this.Rows.Add(rowenvioPagareRow);
                return rowenvioPagareRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                envioPagareDataTable cln = ((envioPagareDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new envioPagareDataTable();
            }
            
            internal void InitVars() {
                this.columnFOLIO = this.Columns["FOLIO"];
                this.columnEMPRESA = this.Columns["EMPRESA"];
                this.columnFECHA_EN = this.Columns["FECHA_EN"];
                this.columnFECHA_ENVIO = this.Columns["FECHA_ENVIO"];
                this.columnVALOR_PAGAR = this.Columns["VALOR_PAGAR"];
                this.columnESTADO_PAGARE = this.Columns["ESTADO_PAGARE"];
                this.columnRUT_ALUMNO = this.Columns["RUT_ALUMNO"];
                this.columnRUT_APODERADO = this.Columns["RUT_APODERADO"];
                this.columnNOMBRE_APODERADO = this.Columns["NOMBRE_APODERADO"];
                this.columnpaga_ncorr = this.Columns["paga_ncorr"];
            }
            
            private void InitClass() {
                this.columnFOLIO = new DataColumn("FOLIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFOLIO);
                this.columnEMPRESA = new DataColumn("EMPRESA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEMPRESA);
                this.columnFECHA_EN = new DataColumn("FECHA_EN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_EN);
                this.columnFECHA_ENVIO = new DataColumn("FECHA_ENVIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_ENVIO);
                this.columnVALOR_PAGAR = new DataColumn("VALOR_PAGAR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVALOR_PAGAR);
                this.columnESTADO_PAGARE = new DataColumn("ESTADO_PAGARE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESTADO_PAGARE);
                this.columnRUT_ALUMNO = new DataColumn("RUT_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_ALUMNO);
                this.columnRUT_APODERADO = new DataColumn("RUT_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_APODERADO);
                this.columnNOMBRE_APODERADO = new DataColumn("NOMBRE_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_APODERADO);
                this.columnpaga_ncorr = new DataColumn("paga_ncorr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpaga_ncorr);
                this.columnFOLIO.ReadOnly = true;
                this.columnEMPRESA.ReadOnly = true;
                this.columnFECHA_EN.ReadOnly = true;
                this.columnFECHA_ENVIO.ReadOnly = true;
                this.columnVALOR_PAGAR.ReadOnly = true;
                this.columnESTADO_PAGARE.ReadOnly = true;
                this.columnRUT_ALUMNO.ReadOnly = true;
                this.columnRUT_APODERADO.ReadOnly = true;
                this.columnNOMBRE_APODERADO.ReadOnly = true;
            }
            
            public envioPagareRow NewenvioPagareRow() {
                return ((envioPagareRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new envioPagareRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(envioPagareRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.envioPagareRowChanged != null)) {
                    this.envioPagareRowChanged(this, new envioPagareRowChangeEvent(((envioPagareRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.envioPagareRowChanging != null)) {
                    this.envioPagareRowChanging(this, new envioPagareRowChangeEvent(((envioPagareRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.envioPagareRowDeleted != null)) {
                    this.envioPagareRowDeleted(this, new envioPagareRowChangeEvent(((envioPagareRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.envioPagareRowDeleting != null)) {
                    this.envioPagareRowDeleting(this, new envioPagareRowChangeEvent(((envioPagareRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveenvioPagareRow(envioPagareRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class envioPagareRow : DataRow {
            
            private envioPagareDataTable tableenvioPagare;
            
            internal envioPagareRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableenvioPagare = ((envioPagareDataTable)(this.Table));
            }
            
            public string FOLIO {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.FOLIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.FOLIOColumn] = value;
                }
            }
            
            public string EMPRESA {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.EMPRESAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.EMPRESAColumn] = value;
                }
            }
            
            public string FECHA_EN {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.FECHA_ENColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.FECHA_ENColumn] = value;
                }
            }
            
            public string FECHA_ENVIO {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.FECHA_ENVIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.FECHA_ENVIOColumn] = value;
                }
            }
            
            public string VALOR_PAGAR {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.VALOR_PAGARColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.VALOR_PAGARColumn] = value;
                }
            }
            
            public string ESTADO_PAGARE {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.ESTADO_PAGAREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.ESTADO_PAGAREColumn] = value;
                }
            }
            
            public string RUT_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.RUT_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.RUT_ALUMNOColumn] = value;
                }
            }
            
            public string RUT_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.RUT_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.RUT_APODERADOColumn] = value;
                }
            }
            
            public string NOMBRE_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.NOMBRE_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.NOMBRE_APODERADOColumn] = value;
                }
            }
            
            public string paga_ncorr {
                get {
                    try {
                        return ((string)(this[this.tableenvioPagare.paga_ncorrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableenvioPagare.paga_ncorrColumn] = value;
                }
            }
            
            public bool IsFOLIONull() {
                return this.IsNull(this.tableenvioPagare.FOLIOColumn);
            }
            
            public void SetFOLIONull() {
                this[this.tableenvioPagare.FOLIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEMPRESANull() {
                return this.IsNull(this.tableenvioPagare.EMPRESAColumn);
            }
            
            public void SetEMPRESANull() {
                this[this.tableenvioPagare.EMPRESAColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_ENNull() {
                return this.IsNull(this.tableenvioPagare.FECHA_ENColumn);
            }
            
            public void SetFECHA_ENNull() {
                this[this.tableenvioPagare.FECHA_ENColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_ENVIONull() {
                return this.IsNull(this.tableenvioPagare.FECHA_ENVIOColumn);
            }
            
            public void SetFECHA_ENVIONull() {
                this[this.tableenvioPagare.FECHA_ENVIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsVALOR_PAGARNull() {
                return this.IsNull(this.tableenvioPagare.VALOR_PAGARColumn);
            }
            
            public void SetVALOR_PAGARNull() {
                this[this.tableenvioPagare.VALOR_PAGARColumn] = System.Convert.DBNull;
            }
            
            public bool IsESTADO_PAGARENull() {
                return this.IsNull(this.tableenvioPagare.ESTADO_PAGAREColumn);
            }
            
            public void SetESTADO_PAGARENull() {
                this[this.tableenvioPagare.ESTADO_PAGAREColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_ALUMNONull() {
                return this.IsNull(this.tableenvioPagare.RUT_ALUMNOColumn);
            }
            
            public void SetRUT_ALUMNONull() {
                this[this.tableenvioPagare.RUT_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_APODERADONull() {
                return this.IsNull(this.tableenvioPagare.RUT_APODERADOColumn);
            }
            
            public void SetRUT_APODERADONull() {
                this[this.tableenvioPagare.RUT_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_APODERADONull() {
                return this.IsNull(this.tableenvioPagare.NOMBRE_APODERADOColumn);
            }
            
            public void SetNOMBRE_APODERADONull() {
                this[this.tableenvioPagare.NOMBRE_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool Ispaga_ncorrNull() {
                return this.IsNull(this.tableenvioPagare.paga_ncorrColumn);
            }
            
            public void Setpaga_ncorrNull() {
                this[this.tableenvioPagare.paga_ncorrColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class envioPagareRowChangeEvent : EventArgs {
            
            private envioPagareRow eventRow;
            
            private DataRowAction eventAction;
            
            public envioPagareRowChangeEvent(envioPagareRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public envioPagareRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
