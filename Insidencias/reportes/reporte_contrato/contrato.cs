//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace reporte_contrato {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class contrato : DataSet {
        
        private _TableDataTable table_Table;
        
        public contrato() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected contrato(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        public override DataSet Clone() {
            contrato cln = ((contrato)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "contrato";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/contrato.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNOMBRE_INSTITUCION;
            
            private DataColumn columnRUT_INSTITUCION;
            
            private DataColumn columnRUT_POSTULANTE;
            
            private DataColumn columnEDAD;
            
            private DataColumn columnNOMBRE_ALUMNO;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnRUT_CODEUDOR;
            
            private DataColumn columnNOMBRE_CODEUDOR;
            
            private DataColumn columnDIRECCION;
            
            private DataColumn columnCIUDAD;
            
            private DataColumn columnCOMUNA;
            
            private DataColumn columnTIPO_DOCUMENTO;
            
            private DataColumn columnDOCUMENTO;
            
            private DataColumn columnNOMBRE_BANCO;
            
            private DataColumn columnVALOR_DOCTO;
            
            private DataColumn columnFECHA_VENCIMIENTO;
            
            private DataColumn columnTOTAL_M;
            
            private DataColumn columnTOTAL_A;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NOMBRE_INSTITUCIONColumn {
                get {
                    return this.columnNOMBRE_INSTITUCION;
                }
            }
            
            internal DataColumn RUT_INSTITUCIONColumn {
                get {
                    return this.columnRUT_INSTITUCION;
                }
            }
            
            internal DataColumn RUT_POSTULANTEColumn {
                get {
                    return this.columnRUT_POSTULANTE;
                }
            }
            
            internal DataColumn EDADColumn {
                get {
                    return this.columnEDAD;
                }
            }
            
            internal DataColumn NOMBRE_ALUMNOColumn {
                get {
                    return this.columnNOMBRE_ALUMNO;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn RUT_CODEUDORColumn {
                get {
                    return this.columnRUT_CODEUDOR;
                }
            }
            
            internal DataColumn NOMBRE_CODEUDORColumn {
                get {
                    return this.columnNOMBRE_CODEUDOR;
                }
            }
            
            internal DataColumn DIRECCIONColumn {
                get {
                    return this.columnDIRECCION;
                }
            }
            
            internal DataColumn CIUDADColumn {
                get {
                    return this.columnCIUDAD;
                }
            }
            
            internal DataColumn COMUNAColumn {
                get {
                    return this.columnCOMUNA;
                }
            }
            
            internal DataColumn TIPO_DOCUMENTOColumn {
                get {
                    return this.columnTIPO_DOCUMENTO;
                }
            }
            
            internal DataColumn DOCUMENTOColumn {
                get {
                    return this.columnDOCUMENTO;
                }
            }
            
            internal DataColumn NOMBRE_BANCOColumn {
                get {
                    return this.columnNOMBRE_BANCO;
                }
            }
            
            internal DataColumn VALOR_DOCTOColumn {
                get {
                    return this.columnVALOR_DOCTO;
                }
            }
            
            internal DataColumn FECHA_VENCIMIENTOColumn {
                get {
                    return this.columnFECHA_VENCIMIENTO;
                }
            }
            
            internal DataColumn TOTAL_MColumn {
                get {
                    return this.columnTOTAL_M;
                }
            }
            
            internal DataColumn TOTAL_AColumn {
                get {
                    return this.columnTOTAL_A;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(
                        string NOMBRE_INSTITUCION, 
                        string RUT_INSTITUCION, 
                        string RUT_POSTULANTE, 
                        string EDAD, 
                        string NOMBRE_ALUMNO, 
                        string CARRERA, 
                        string RUT_CODEUDOR, 
                        string NOMBRE_CODEUDOR, 
                        string DIRECCION, 
                        string CIUDAD, 
                        string COMUNA, 
                        string TIPO_DOCUMENTO, 
                        string DOCUMENTO, 
                        string NOMBRE_BANCO, 
                        string VALOR_DOCTO, 
                        string FECHA_VENCIMIENTO, 
                        string TOTAL_M, 
                        string TOTAL_A) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        NOMBRE_INSTITUCION,
                        RUT_INSTITUCION,
                        RUT_POSTULANTE,
                        EDAD,
                        NOMBRE_ALUMNO,
                        CARRERA,
                        RUT_CODEUDOR,
                        NOMBRE_CODEUDOR,
                        DIRECCION,
                        CIUDAD,
                        COMUNA,
                        TIPO_DOCUMENTO,
                        DOCUMENTO,
                        NOMBRE_BANCO,
                        VALOR_DOCTO,
                        FECHA_VENCIMIENTO,
                        TOTAL_M,
                        TOTAL_A};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnNOMBRE_INSTITUCION = this.Columns["NOMBRE_INSTITUCION"];
                this.columnRUT_INSTITUCION = this.Columns["RUT_INSTITUCION"];
                this.columnRUT_POSTULANTE = this.Columns["RUT_POSTULANTE"];
                this.columnEDAD = this.Columns["EDAD"];
                this.columnNOMBRE_ALUMNO = this.Columns["NOMBRE_ALUMNO"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnRUT_CODEUDOR = this.Columns["RUT_CODEUDOR"];
                this.columnNOMBRE_CODEUDOR = this.Columns["NOMBRE_CODEUDOR"];
                this.columnDIRECCION = this.Columns["DIRECCION"];
                this.columnCIUDAD = this.Columns["CIUDAD"];
                this.columnCOMUNA = this.Columns["COMUNA"];
                this.columnTIPO_DOCUMENTO = this.Columns["TIPO_DOCUMENTO"];
                this.columnDOCUMENTO = this.Columns["DOCUMENTO"];
                this.columnNOMBRE_BANCO = this.Columns["NOMBRE_BANCO"];
                this.columnVALOR_DOCTO = this.Columns["VALOR_DOCTO"];
                this.columnFECHA_VENCIMIENTO = this.Columns["FECHA_VENCIMIENTO"];
                this.columnTOTAL_M = this.Columns["TOTAL_M"];
                this.columnTOTAL_A = this.Columns["TOTAL_A"];
            }
            
            private void InitClass() {
                this.columnNOMBRE_INSTITUCION = new DataColumn("NOMBRE_INSTITUCION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_INSTITUCION);
                this.columnRUT_INSTITUCION = new DataColumn("RUT_INSTITUCION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_INSTITUCION);
                this.columnRUT_POSTULANTE = new DataColumn("RUT_POSTULANTE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_POSTULANTE);
                this.columnEDAD = new DataColumn("EDAD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEDAD);
                this.columnNOMBRE_ALUMNO = new DataColumn("NOMBRE_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_ALUMNO);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnRUT_CODEUDOR = new DataColumn("RUT_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_CODEUDOR);
                this.columnNOMBRE_CODEUDOR = new DataColumn("NOMBRE_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_CODEUDOR);
                this.columnDIRECCION = new DataColumn("DIRECCION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECCION);
                this.columnCIUDAD = new DataColumn("CIUDAD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD);
                this.columnCOMUNA = new DataColumn("COMUNA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMUNA);
                this.columnTIPO_DOCUMENTO = new DataColumn("TIPO_DOCUMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPO_DOCUMENTO);
                this.columnDOCUMENTO = new DataColumn("DOCUMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDOCUMENTO);
                this.columnNOMBRE_BANCO = new DataColumn("NOMBRE_BANCO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_BANCO);
                this.columnVALOR_DOCTO = new DataColumn("VALOR_DOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVALOR_DOCTO);
                this.columnFECHA_VENCIMIENTO = new DataColumn("FECHA_VENCIMIENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_VENCIMIENTO);
                this.columnTOTAL_M = new DataColumn("TOTAL_M", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_M);
                this.columnTOTAL_A = new DataColumn("TOTAL_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_A);
                this.columnNOMBRE_INSTITUCION.ReadOnly = true;
                this.columnRUT_INSTITUCION.ReadOnly = true;
                this.columnRUT_POSTULANTE.ReadOnly = true;
                this.columnEDAD.ReadOnly = true;
                this.columnNOMBRE_ALUMNO.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnRUT_CODEUDOR.ReadOnly = true;
                this.columnNOMBRE_CODEUDOR.ReadOnly = true;
                this.columnDIRECCION.ReadOnly = true;
                this.columnCIUDAD.ReadOnly = true;
                this.columnCOMUNA.ReadOnly = true;
                this.columnTIPO_DOCUMENTO.ReadOnly = true;
                this.columnDOCUMENTO.ReadOnly = true;
                this.columnNOMBRE_BANCO.ReadOnly = true;
                this.columnVALOR_DOCTO.ReadOnly = true;
                this.columnFECHA_VENCIMIENTO.ReadOnly = true;
                this.columnTOTAL_M.ReadOnly = true;
                this.columnTOTAL_A.ReadOnly = true;
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public string NOMBRE_INSTITUCION {
                get {
                    try {
                        return ((string)(this[this.table_Table.NOMBRE_INSTITUCIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NOMBRE_INSTITUCIONColumn] = value;
                }
            }
            
            public string RUT_INSTITUCION {
                get {
                    try {
                        return ((string)(this[this.table_Table.RUT_INSTITUCIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RUT_INSTITUCIONColumn] = value;
                }
            }
            
            public string RUT_POSTULANTE {
                get {
                    try {
                        return ((string)(this[this.table_Table.RUT_POSTULANTEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RUT_POSTULANTEColumn] = value;
                }
            }
            
            public string EDAD {
                get {
                    try {
                        return ((string)(this[this.table_Table.EDADColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EDADColumn] = value;
                }
            }
            
            public string NOMBRE_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.table_Table.NOMBRE_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NOMBRE_ALUMNOColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.table_Table.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CARRERAColumn] = value;
                }
            }
            
            public string RUT_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.table_Table.RUT_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RUT_CODEUDORColumn] = value;
                }
            }
            
            public string NOMBRE_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.table_Table.NOMBRE_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NOMBRE_CODEUDORColumn] = value;
                }
            }
            
            public string DIRECCION {
                get {
                    try {
                        return ((string)(this[this.table_Table.DIRECCIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DIRECCIONColumn] = value;
                }
            }
            
            public string CIUDAD {
                get {
                    try {
                        return ((string)(this[this.table_Table.CIUDADColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CIUDADColumn] = value;
                }
            }
            
            public string COMUNA {
                get {
                    try {
                        return ((string)(this[this.table_Table.COMUNAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.COMUNAColumn] = value;
                }
            }
            
            public string TIPO_DOCUMENTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.TIPO_DOCUMENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TIPO_DOCUMENTOColumn] = value;
                }
            }
            
            public string DOCUMENTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.DOCUMENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DOCUMENTOColumn] = value;
                }
            }
            
            public string NOMBRE_BANCO {
                get {
                    try {
                        return ((string)(this[this.table_Table.NOMBRE_BANCOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NOMBRE_BANCOColumn] = value;
                }
            }
            
            public string VALOR_DOCTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.VALOR_DOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VALOR_DOCTOColumn] = value;
                }
            }
            
            public string FECHA_VENCIMIENTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.FECHA_VENCIMIENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FECHA_VENCIMIENTOColumn] = value;
                }
            }
            
            public string TOTAL_M {
                get {
                    try {
                        return ((string)(this[this.table_Table.TOTAL_MColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TOTAL_MColumn] = value;
                }
            }
            
            public string TOTAL_A {
                get {
                    try {
                        return ((string)(this[this.table_Table.TOTAL_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TOTAL_AColumn] = value;
                }
            }
            
            public bool IsNOMBRE_INSTITUCIONNull() {
                return this.IsNull(this.table_Table.NOMBRE_INSTITUCIONColumn);
            }
            
            public void SetNOMBRE_INSTITUCIONNull() {
                this[this.table_Table.NOMBRE_INSTITUCIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_INSTITUCIONNull() {
                return this.IsNull(this.table_Table.RUT_INSTITUCIONColumn);
            }
            
            public void SetRUT_INSTITUCIONNull() {
                this[this.table_Table.RUT_INSTITUCIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_POSTULANTENull() {
                return this.IsNull(this.table_Table.RUT_POSTULANTEColumn);
            }
            
            public void SetRUT_POSTULANTENull() {
                this[this.table_Table.RUT_POSTULANTEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEDADNull() {
                return this.IsNull(this.table_Table.EDADColumn);
            }
            
            public void SetEDADNull() {
                this[this.table_Table.EDADColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_ALUMNONull() {
                return this.IsNull(this.table_Table.NOMBRE_ALUMNOColumn);
            }
            
            public void SetNOMBRE_ALUMNONull() {
                this[this.table_Table.NOMBRE_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.table_Table.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.table_Table.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_CODEUDORNull() {
                return this.IsNull(this.table_Table.RUT_CODEUDORColumn);
            }
            
            public void SetRUT_CODEUDORNull() {
                this[this.table_Table.RUT_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_CODEUDORNull() {
                return this.IsNull(this.table_Table.NOMBRE_CODEUDORColumn);
            }
            
            public void SetNOMBRE_CODEUDORNull() {
                this[this.table_Table.NOMBRE_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECCIONNull() {
                return this.IsNull(this.table_Table.DIRECCIONColumn);
            }
            
            public void SetDIRECCIONNull() {
                this[this.table_Table.DIRECCIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDADNull() {
                return this.IsNull(this.table_Table.CIUDADColumn);
            }
            
            public void SetCIUDADNull() {
                this[this.table_Table.CIUDADColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMUNANull() {
                return this.IsNull(this.table_Table.COMUNAColumn);
            }
            
            public void SetCOMUNANull() {
                this[this.table_Table.COMUNAColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPO_DOCUMENTONull() {
                return this.IsNull(this.table_Table.TIPO_DOCUMENTOColumn);
            }
            
            public void SetTIPO_DOCUMENTONull() {
                this[this.table_Table.TIPO_DOCUMENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDOCUMENTONull() {
                return this.IsNull(this.table_Table.DOCUMENTOColumn);
            }
            
            public void SetDOCUMENTONull() {
                this[this.table_Table.DOCUMENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_BANCONull() {
                return this.IsNull(this.table_Table.NOMBRE_BANCOColumn);
            }
            
            public void SetNOMBRE_BANCONull() {
                this[this.table_Table.NOMBRE_BANCOColumn] = System.Convert.DBNull;
            }
            
            public bool IsVALOR_DOCTONull() {
                return this.IsNull(this.table_Table.VALOR_DOCTOColumn);
            }
            
            public void SetVALOR_DOCTONull() {
                this[this.table_Table.VALOR_DOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_VENCIMIENTONull() {
                return this.IsNull(this.table_Table.FECHA_VENCIMIENTOColumn);
            }
            
            public void SetFECHA_VENCIMIENTONull() {
                this[this.table_Table.FECHA_VENCIMIENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MNull() {
                return this.IsNull(this.table_Table.TOTAL_MColumn);
            }
            
            public void SetTOTAL_MNull() {
                this[this.table_Table.TOTAL_MColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_ANull() {
                return this.IsNull(this.table_Table.TOTAL_AColumn);
            }
            
            public void SetTOTAL_ANull() {
                this[this.table_Table.TOTAL_AColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
