//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace EgresoTitulacion {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ds : DataSet {
        
        private ENCABEZADODataTable tableENCABEZADO;
        
        public ds() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected ds(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ENCABEZADO"] != null)) {
                    this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENCABEZADODataTable ENCABEZADO {
            get {
                return this.tableENCABEZADO;
            }
        }
        
        public override DataSet Clone() {
            ds cln = ((ds)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ENCABEZADO"] != null)) {
                this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Tables["ENCABEZADO"]));
            if ((this.tableENCABEZADO != null)) {
                this.tableENCABEZADO.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "ds";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/ds.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableENCABEZADO = new ENCABEZADODataTable();
            this.Tables.Add(this.tableENCABEZADO);
        }
        
        private bool ShouldSerializeENCABEZADO() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ENCABEZADORowChangeEventHandler(object sender, ENCABEZADORowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADODataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnLINEA1;
            
            private DataColumn columnLINEA2;
            
            private DataColumn columnLINEA3;
            
            private DataColumn columnLINEA4;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnACTI_FEMISION;
            
            private DataColumn columnESPE_TDESC;
            
            private DataColumn columnCODIGO;
            
            private DataColumn columnACTI_NCORR;
            
            private DataColumn columnESPE_CCOD;
            
            private DataColumn columnCARR_CCOD;
            
            internal ENCABEZADODataTable() : 
                    base("ENCABEZADO") {
                this.InitClass();
            }
            
            internal ENCABEZADODataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn LINEA1Column {
                get {
                    return this.columnLINEA1;
                }
            }
            
            internal DataColumn LINEA2Column {
                get {
                    return this.columnLINEA2;
                }
            }
            
            internal DataColumn LINEA3Column {
                get {
                    return this.columnLINEA3;
                }
            }
            
            internal DataColumn LINEA4Column {
                get {
                    return this.columnLINEA4;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn ACTI_FEMISIONColumn {
                get {
                    return this.columnACTI_FEMISION;
                }
            }
            
            internal DataColumn ESPE_TDESCColumn {
                get {
                    return this.columnESPE_TDESC;
                }
            }
            
            internal DataColumn CODIGOColumn {
                get {
                    return this.columnCODIGO;
                }
            }
            
            internal DataColumn ACTI_NCORRColumn {
                get {
                    return this.columnACTI_NCORR;
                }
            }
            
            internal DataColumn ESPE_CCODColumn {
                get {
                    return this.columnESPE_CCOD;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            public ENCABEZADORow this[int index] {
                get {
                    return ((ENCABEZADORow)(this.Rows[index]));
                }
            }
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanged;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanging;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleted;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleting;
            
            public void AddENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Add(row);
            }
            
            public ENCABEZADORow AddENCABEZADORow(string LINEA1, string LINEA2, string LINEA3, string LINEA4, string CARR_TDESC, System.DateTime ACTI_FEMISION, string ESPE_TDESC, string CODIGO, System.Decimal ACTI_NCORR, string ESPE_CCOD, string CARR_CCOD) {
                ENCABEZADORow rowENCABEZADORow = ((ENCABEZADORow)(this.NewRow()));
                rowENCABEZADORow.ItemArray = new object[] {
                        LINEA1,
                        LINEA2,
                        LINEA3,
                        LINEA4,
                        CARR_TDESC,
                        ACTI_FEMISION,
                        ESPE_TDESC,
                        CODIGO,
                        ACTI_NCORR,
                        ESPE_CCOD,
                        CARR_CCOD};
                this.Rows.Add(rowENCABEZADORow);
                return rowENCABEZADORow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ENCABEZADODataTable cln = ((ENCABEZADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ENCABEZADODataTable();
            }
            
            internal void InitVars() {
                this.columnLINEA1 = this.Columns["LINEA1"];
                this.columnLINEA2 = this.Columns["LINEA2"];
                this.columnLINEA3 = this.Columns["LINEA3"];
                this.columnLINEA4 = this.Columns["LINEA4"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnACTI_FEMISION = this.Columns["ACTI_FEMISION"];
                this.columnESPE_TDESC = this.Columns["ESPE_TDESC"];
                this.columnCODIGO = this.Columns["CODIGO"];
                this.columnACTI_NCORR = this.Columns["ACTI_NCORR"];
                this.columnESPE_CCOD = this.Columns["ESPE_CCOD"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
            }
            
            private void InitClass() {
                this.columnLINEA1 = new DataColumn("LINEA1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA1);
                this.columnLINEA2 = new DataColumn("LINEA2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA2);
                this.columnLINEA3 = new DataColumn("LINEA3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA3);
                this.columnLINEA4 = new DataColumn("LINEA4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA4);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnACTI_FEMISION = new DataColumn("ACTI_FEMISION", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACTI_FEMISION);
                this.columnESPE_TDESC = new DataColumn("ESPE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_TDESC);
                this.columnCODIGO = new DataColumn("CODIGO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODIGO);
                this.columnACTI_NCORR = new DataColumn("ACTI_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACTI_NCORR);
                this.columnESPE_CCOD = new DataColumn("ESPE_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_CCOD);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnLINEA1.ReadOnly = true;
                this.columnLINEA2.ReadOnly = true;
                this.columnLINEA3.ReadOnly = true;
                this.columnLINEA4.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnACTI_FEMISION.ReadOnly = true;
                this.columnESPE_TDESC.ReadOnly = true;
                this.columnCODIGO.ReadOnly = true;
                this.columnACTI_NCORR.ReadOnly = true;
                this.columnESPE_CCOD.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
            }
            
            public ENCABEZADORow NewENCABEZADORow() {
                return ((ENCABEZADORow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ENCABEZADORow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ENCABEZADORow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENCABEZADORowChanged != null)) {
                    this.ENCABEZADORowChanged(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENCABEZADORowChanging != null)) {
                    this.ENCABEZADORowChanging(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENCABEZADORowDeleted != null)) {
                    this.ENCABEZADORowDeleted(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENCABEZADORowDeleting != null)) {
                    this.ENCABEZADORowDeleting(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORow : DataRow {
            
            private ENCABEZADODataTable tableENCABEZADO;
            
            internal ENCABEZADORow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Table));
            }
            
            public string LINEA1 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA1Column] = value;
                }
            }
            
            public string LINEA2 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA2Column] = value;
                }
            }
            
            public string LINEA3 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA3Column] = value;
                }
            }
            
            public string LINEA4 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA4Column] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CARR_TDESCColumn] = value;
                }
            }
            
            public System.DateTime ACTI_FEMISION {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableENCABEZADO.ACTI_FEMISIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ACTI_FEMISIONColumn] = value;
                }
            }
            
            public string ESPE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ESPE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ESPE_TDESCColumn] = value;
                }
            }
            
            public string CODIGO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CODIGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CODIGOColumn] = value;
                }
            }
            
            public System.Decimal ACTI_NCORR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableENCABEZADO.ACTI_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ACTI_NCORRColumn] = value;
                }
            }
            
            public string ESPE_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ESPE_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ESPE_CCODColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CARR_CCODColumn] = value;
                }
            }
            
            public bool IsLINEA1Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA1Column);
            }
            
            public void SetLINEA1Null() {
                this[this.tableENCABEZADO.LINEA1Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA2Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA2Column);
            }
            
            public void SetLINEA2Null() {
                this[this.tableENCABEZADO.LINEA2Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA3Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA3Column);
            }
            
            public void SetLINEA3Null() {
                this[this.tableENCABEZADO.LINEA3Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA4Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA4Column);
            }
            
            public void SetLINEA4Null() {
                this[this.tableENCABEZADO.LINEA4Column] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableENCABEZADO.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsACTI_FEMISIONNull() {
                return this.IsNull(this.tableENCABEZADO.ACTI_FEMISIONColumn);
            }
            
            public void SetACTI_FEMISIONNull() {
                this[this.tableENCABEZADO.ACTI_FEMISIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.ESPE_TDESCColumn);
            }
            
            public void SetESPE_TDESCNull() {
                this[this.tableENCABEZADO.ESPE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCODIGONull() {
                return this.IsNull(this.tableENCABEZADO.CODIGOColumn);
            }
            
            public void SetCODIGONull() {
                this[this.tableENCABEZADO.CODIGOColumn] = System.Convert.DBNull;
            }
            
            public bool IsACTI_NCORRNull() {
                return this.IsNull(this.tableENCABEZADO.ACTI_NCORRColumn);
            }
            
            public void SetACTI_NCORRNull() {
                this[this.tableENCABEZADO.ACTI_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.ESPE_CCODColumn);
            }
            
            public void SetESPE_CCODNull() {
                this[this.tableENCABEZADO.ESPE_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tableENCABEZADO.CARR_CCODColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORowChangeEvent : EventArgs {
            
            private ENCABEZADORow eventRow;
            
            private DataRowAction eventAction;
            
            public ENCABEZADORowChangeEvent(ENCABEZADORow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ENCABEZADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
