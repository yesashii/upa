//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace EgresoTitulacion {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet2 : DataSet {
        
        private GRUPOSDataTable tableGRUPOS;
        
        private ENCABEZADODataTable tableENCABEZADO;
        
        private TITULADOSDataTable tableTITULADOS;
        
        private ENC_REQ_CALIFICADOSDataTable tableENC_REQ_CALIFICADOS;
        
        public DataSet2() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet2(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GRUPOS"] != null)) {
                    this.Tables.Add(new GRUPOSDataTable(ds.Tables["GRUPOS"]));
                }
                if ((ds.Tables["ENCABEZADO"] != null)) {
                    this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
                }
                if ((ds.Tables["TITULADOS"] != null)) {
                    this.Tables.Add(new TITULADOSDataTable(ds.Tables["TITULADOS"]));
                }
                if ((ds.Tables["ENC_REQ_CALIFICADOS"] != null)) {
                    this.Tables.Add(new ENC_REQ_CALIFICADOSDataTable(ds.Tables["ENC_REQ_CALIFICADOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GRUPOSDataTable GRUPOS {
            get {
                return this.tableGRUPOS;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENCABEZADODataTable ENCABEZADO {
            get {
                return this.tableENCABEZADO;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TITULADOSDataTable TITULADOS {
            get {
                return this.tableTITULADOS;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENC_REQ_CALIFICADOSDataTable ENC_REQ_CALIFICADOS {
            get {
                return this.tableENC_REQ_CALIFICADOS;
            }
        }
        
        public override DataSet Clone() {
            DataSet2 cln = ((DataSet2)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["GRUPOS"] != null)) {
                this.Tables.Add(new GRUPOSDataTable(ds.Tables["GRUPOS"]));
            }
            if ((ds.Tables["ENCABEZADO"] != null)) {
                this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
            }
            if ((ds.Tables["TITULADOS"] != null)) {
                this.Tables.Add(new TITULADOSDataTable(ds.Tables["TITULADOS"]));
            }
            if ((ds.Tables["ENC_REQ_CALIFICADOS"] != null)) {
                this.Tables.Add(new ENC_REQ_CALIFICADOSDataTable(ds.Tables["ENC_REQ_CALIFICADOS"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableGRUPOS = ((GRUPOSDataTable)(this.Tables["GRUPOS"]));
            if ((this.tableGRUPOS != null)) {
                this.tableGRUPOS.InitVars();
            }
            this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Tables["ENCABEZADO"]));
            if ((this.tableENCABEZADO != null)) {
                this.tableENCABEZADO.InitVars();
            }
            this.tableTITULADOS = ((TITULADOSDataTable)(this.Tables["TITULADOS"]));
            if ((this.tableTITULADOS != null)) {
                this.tableTITULADOS.InitVars();
            }
            this.tableENC_REQ_CALIFICADOS = ((ENC_REQ_CALIFICADOSDataTable)(this.Tables["ENC_REQ_CALIFICADOS"]));
            if ((this.tableENC_REQ_CALIFICADOS != null)) {
                this.tableENC_REQ_CALIFICADOS.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet2";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet2.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableGRUPOS = new GRUPOSDataTable();
            this.Tables.Add(this.tableGRUPOS);
            this.tableENCABEZADO = new ENCABEZADODataTable();
            this.Tables.Add(this.tableENCABEZADO);
            this.tableTITULADOS = new TITULADOSDataTable();
            this.Tables.Add(this.tableTITULADOS);
            this.tableENC_REQ_CALIFICADOS = new ENC_REQ_CALIFICADOSDataTable();
            this.Tables.Add(this.tableENC_REQ_CALIFICADOS);
        }
        
        private bool ShouldSerializeGRUPOS() {
            return false;
        }
        
        private bool ShouldSerializeENCABEZADO() {
            return false;
        }
        
        private bool ShouldSerializeTITULADOS() {
            return false;
        }
        
        private bool ShouldSerializeENC_REQ_CALIFICADOS() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void GRUPOSRowChangeEventHandler(object sender, GRUPOSRowChangeEvent e);
        
        public delegate void ENCABEZADORowChangeEventHandler(object sender, ENCABEZADORowChangeEvent e);
        
        public delegate void TITULADOSRowChangeEventHandler(object sender, TITULADOSRowChangeEvent e);
        
        public delegate void ENC_REQ_CALIFICADOSRowChangeEventHandler(object sender, ENC_REQ_CALIFICADOSRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GRUPOSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnGRUPO;
            
            internal GRUPOSDataTable() : 
                    base("GRUPOS") {
                this.InitClass();
            }
            
            internal GRUPOSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn GRUPOColumn {
                get {
                    return this.columnGRUPO;
                }
            }
            
            public GRUPOSRow this[int index] {
                get {
                    return ((GRUPOSRow)(this.Rows[index]));
                }
            }
            
            public event GRUPOSRowChangeEventHandler GRUPOSRowChanged;
            
            public event GRUPOSRowChangeEventHandler GRUPOSRowChanging;
            
            public event GRUPOSRowChangeEventHandler GRUPOSRowDeleted;
            
            public event GRUPOSRowChangeEventHandler GRUPOSRowDeleting;
            
            public void AddGRUPOSRow(GRUPOSRow row) {
                this.Rows.Add(row);
            }
            
            public GRUPOSRow AddGRUPOSRow(System.Decimal GRUPO) {
                GRUPOSRow rowGRUPOSRow = ((GRUPOSRow)(this.NewRow()));
                rowGRUPOSRow.ItemArray = new object[] {
                        GRUPO};
                this.Rows.Add(rowGRUPOSRow);
                return rowGRUPOSRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GRUPOSDataTable cln = ((GRUPOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GRUPOSDataTable();
            }
            
            internal void InitVars() {
                this.columnGRUPO = this.Columns["GRUPO"];
            }
            
            private void InitClass() {
                this.columnGRUPO = new DataColumn("GRUPO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGRUPO);
                this.columnGRUPO.ReadOnly = true;
            }
            
            public GRUPOSRow NewGRUPOSRow() {
                return ((GRUPOSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GRUPOSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GRUPOSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GRUPOSRowChanged != null)) {
                    this.GRUPOSRowChanged(this, new GRUPOSRowChangeEvent(((GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GRUPOSRowChanging != null)) {
                    this.GRUPOSRowChanging(this, new GRUPOSRowChangeEvent(((GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GRUPOSRowDeleted != null)) {
                    this.GRUPOSRowDeleted(this, new GRUPOSRowChangeEvent(((GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GRUPOSRowDeleting != null)) {
                    this.GRUPOSRowDeleting(this, new GRUPOSRowChangeEvent(((GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGRUPOSRow(GRUPOSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GRUPOSRow : DataRow {
            
            private GRUPOSDataTable tableGRUPOS;
            
            internal GRUPOSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGRUPOS = ((GRUPOSDataTable)(this.Table));
            }
            
            public System.Decimal GRUPO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableGRUPOS.GRUPOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRUPOS.GRUPOColumn] = value;
                }
            }
            
            public bool IsGRUPONull() {
                return this.IsNull(this.tableGRUPOS.GRUPOColumn);
            }
            
            public void SetGRUPONull() {
                this[this.tableGRUPOS.GRUPOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GRUPOSRowChangeEvent : EventArgs {
            
            private GRUPOSRow eventRow;
            
            private DataRowAction eventAction;
            
            public GRUPOSRowChangeEvent(GRUPOSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GRUPOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADODataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnLINEA1;
            
            private DataColumn columnLINEA2;
            
            private DataColumn columnLINEA3;
            
            private DataColumn columnLINEA4;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnACTI_FEMISION;
            
            private DataColumn columnESPE_TDESC;
            
            private DataColumn columnCODIGO;
            
            private DataColumn columnACTI_NCORR;
            
            private DataColumn columnESPE_CCOD;
            
            private DataColumn columnCARR_CCOD;
            
            private DataColumn columnESPE_TTITULO;
            
            internal ENCABEZADODataTable() : 
                    base("ENCABEZADO") {
                this.InitClass();
            }
            
            internal ENCABEZADODataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn LINEA1Column {
                get {
                    return this.columnLINEA1;
                }
            }
            
            internal DataColumn LINEA2Column {
                get {
                    return this.columnLINEA2;
                }
            }
            
            internal DataColumn LINEA3Column {
                get {
                    return this.columnLINEA3;
                }
            }
            
            internal DataColumn LINEA4Column {
                get {
                    return this.columnLINEA4;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn ACTI_FEMISIONColumn {
                get {
                    return this.columnACTI_FEMISION;
                }
            }
            
            internal DataColumn ESPE_TDESCColumn {
                get {
                    return this.columnESPE_TDESC;
                }
            }
            
            internal DataColumn CODIGOColumn {
                get {
                    return this.columnCODIGO;
                }
            }
            
            internal DataColumn ACTI_NCORRColumn {
                get {
                    return this.columnACTI_NCORR;
                }
            }
            
            internal DataColumn ESPE_CCODColumn {
                get {
                    return this.columnESPE_CCOD;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            internal DataColumn ESPE_TTITULOColumn {
                get {
                    return this.columnESPE_TTITULO;
                }
            }
            
            public ENCABEZADORow this[int index] {
                get {
                    return ((ENCABEZADORow)(this.Rows[index]));
                }
            }
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanged;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanging;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleted;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleting;
            
            public void AddENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Add(row);
            }
            
            public ENCABEZADORow AddENCABEZADORow(string LINEA1, string LINEA2, string LINEA3, string LINEA4, string CARR_TDESC, System.DateTime ACTI_FEMISION, string ESPE_TDESC, string CODIGO, System.Decimal ACTI_NCORR, string ESPE_CCOD, string CARR_CCOD, string ESPE_TTITULO) {
                ENCABEZADORow rowENCABEZADORow = ((ENCABEZADORow)(this.NewRow()));
                rowENCABEZADORow.ItemArray = new object[] {
                        LINEA1,
                        LINEA2,
                        LINEA3,
                        LINEA4,
                        CARR_TDESC,
                        ACTI_FEMISION,
                        ESPE_TDESC,
                        CODIGO,
                        ACTI_NCORR,
                        ESPE_CCOD,
                        CARR_CCOD,
                        ESPE_TTITULO};
                this.Rows.Add(rowENCABEZADORow);
                return rowENCABEZADORow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ENCABEZADODataTable cln = ((ENCABEZADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ENCABEZADODataTable();
            }
            
            internal void InitVars() {
                this.columnLINEA1 = this.Columns["LINEA1"];
                this.columnLINEA2 = this.Columns["LINEA2"];
                this.columnLINEA3 = this.Columns["LINEA3"];
                this.columnLINEA4 = this.Columns["LINEA4"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnACTI_FEMISION = this.Columns["ACTI_FEMISION"];
                this.columnESPE_TDESC = this.Columns["ESPE_TDESC"];
                this.columnCODIGO = this.Columns["CODIGO"];
                this.columnACTI_NCORR = this.Columns["ACTI_NCORR"];
                this.columnESPE_CCOD = this.Columns["ESPE_CCOD"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
                this.columnESPE_TTITULO = this.Columns["ESPE_TTITULO"];
            }
            
            private void InitClass() {
                this.columnLINEA1 = new DataColumn("LINEA1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA1);
                this.columnLINEA2 = new DataColumn("LINEA2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA2);
                this.columnLINEA3 = new DataColumn("LINEA3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA3);
                this.columnLINEA4 = new DataColumn("LINEA4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA4);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnACTI_FEMISION = new DataColumn("ACTI_FEMISION", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACTI_FEMISION);
                this.columnESPE_TDESC = new DataColumn("ESPE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_TDESC);
                this.columnCODIGO = new DataColumn("CODIGO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODIGO);
                this.columnACTI_NCORR = new DataColumn("ACTI_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACTI_NCORR);
                this.columnESPE_CCOD = new DataColumn("ESPE_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_CCOD);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnESPE_TTITULO = new DataColumn("ESPE_TTITULO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_TTITULO);
                this.columnLINEA1.ReadOnly = true;
                this.columnLINEA2.ReadOnly = true;
                this.columnLINEA3.ReadOnly = true;
                this.columnLINEA4.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnACTI_FEMISION.ReadOnly = true;
                this.columnESPE_TDESC.ReadOnly = true;
                this.columnCODIGO.ReadOnly = true;
                this.columnACTI_NCORR.ReadOnly = true;
                this.columnESPE_CCOD.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
                this.columnESPE_TTITULO.ReadOnly = true;
            }
            
            public ENCABEZADORow NewENCABEZADORow() {
                return ((ENCABEZADORow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ENCABEZADORow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ENCABEZADORow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENCABEZADORowChanged != null)) {
                    this.ENCABEZADORowChanged(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENCABEZADORowChanging != null)) {
                    this.ENCABEZADORowChanging(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENCABEZADORowDeleted != null)) {
                    this.ENCABEZADORowDeleted(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENCABEZADORowDeleting != null)) {
                    this.ENCABEZADORowDeleting(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORow : DataRow {
            
            private ENCABEZADODataTable tableENCABEZADO;
            
            internal ENCABEZADORow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Table));
            }
            
            public string LINEA1 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA1Column] = value;
                }
            }
            
            public string LINEA2 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA2Column] = value;
                }
            }
            
            public string LINEA3 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA3Column] = value;
                }
            }
            
            public string LINEA4 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA4Column] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CARR_TDESCColumn] = value;
                }
            }
            
            public System.DateTime ACTI_FEMISION {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableENCABEZADO.ACTI_FEMISIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ACTI_FEMISIONColumn] = value;
                }
            }
            
            public string ESPE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ESPE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ESPE_TDESCColumn] = value;
                }
            }
            
            public string CODIGO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CODIGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CODIGOColumn] = value;
                }
            }
            
            public System.Decimal ACTI_NCORR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableENCABEZADO.ACTI_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ACTI_NCORRColumn] = value;
                }
            }
            
            public string ESPE_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ESPE_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ESPE_CCODColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CARR_CCODColumn] = value;
                }
            }
            
            public string ESPE_TTITULO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ESPE_TTITULOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ESPE_TTITULOColumn] = value;
                }
            }
            
            public bool IsLINEA1Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA1Column);
            }
            
            public void SetLINEA1Null() {
                this[this.tableENCABEZADO.LINEA1Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA2Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA2Column);
            }
            
            public void SetLINEA2Null() {
                this[this.tableENCABEZADO.LINEA2Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA3Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA3Column);
            }
            
            public void SetLINEA3Null() {
                this[this.tableENCABEZADO.LINEA3Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA4Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA4Column);
            }
            
            public void SetLINEA4Null() {
                this[this.tableENCABEZADO.LINEA4Column] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableENCABEZADO.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsACTI_FEMISIONNull() {
                return this.IsNull(this.tableENCABEZADO.ACTI_FEMISIONColumn);
            }
            
            public void SetACTI_FEMISIONNull() {
                this[this.tableENCABEZADO.ACTI_FEMISIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.ESPE_TDESCColumn);
            }
            
            public void SetESPE_TDESCNull() {
                this[this.tableENCABEZADO.ESPE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCODIGONull() {
                return this.IsNull(this.tableENCABEZADO.CODIGOColumn);
            }
            
            public void SetCODIGONull() {
                this[this.tableENCABEZADO.CODIGOColumn] = System.Convert.DBNull;
            }
            
            public bool IsACTI_NCORRNull() {
                return this.IsNull(this.tableENCABEZADO.ACTI_NCORRColumn);
            }
            
            public void SetACTI_NCORRNull() {
                this[this.tableENCABEZADO.ACTI_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.ESPE_CCODColumn);
            }
            
            public void SetESPE_CCODNull() {
                this[this.tableENCABEZADO.ESPE_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tableENCABEZADO.CARR_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_TTITULONull() {
                return this.IsNull(this.tableENCABEZADO.ESPE_TTITULOColumn);
            }
            
            public void SetESPE_TTITULONull() {
                this[this.tableENCABEZADO.ESPE_TTITULOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORowChangeEvent : EventArgs {
            
            private ENCABEZADORow eventRow;
            
            private DataRowAction eventAction;
            
            public ENCABEZADORowChangeEvent(ENCABEZADORow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ENCABEZADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TITULADOSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnGRUPO;
            
            private DataColumn columnN;
            
            private DataColumn columnEGRE_NCORR;
            
            private DataColumn columnNOMBRE;
            
            private DataColumn columnRUT;
            
            private DataColumn columnACTI_NCORR;
            
            private DataColumn columnACEG_NCORR;
            
            private DataColumn columnPERIODO_INGRESO;
            
            private DataColumn columnPERIODO_EGRESO;
            
            private DataColumn columnFECHA_ENTREGA;
            
            private DataColumn columnN1;
            
            private DataColumn columnP1;
            
            private DataColumn columnN2;
            
            private DataColumn columnP2;
            
            private DataColumn columnN3;
            
            private DataColumn columnP3;
            
            private DataColumn columnN4;
            
            private DataColumn columnP4;
            
            private DataColumn columnN5;
            
            private DataColumn columnP5;
            
            private DataColumn columnN6;
            
            private DataColumn columnP6;
            
            private DataColumn columnN7;
            
            private DataColumn columnP8;
            
            private DataColumn columnNOTA_TITULACION;
            
            private DataColumn columnREG_FOLIO;
            
            internal TITULADOSDataTable() : 
                    base("TITULADOS") {
                this.InitClass();
            }
            
            internal TITULADOSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn GRUPOColumn {
                get {
                    return this.columnGRUPO;
                }
            }
            
            internal DataColumn NColumn {
                get {
                    return this.columnN;
                }
            }
            
            internal DataColumn EGRE_NCORRColumn {
                get {
                    return this.columnEGRE_NCORR;
                }
            }
            
            internal DataColumn NOMBREColumn {
                get {
                    return this.columnNOMBRE;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn ACTI_NCORRColumn {
                get {
                    return this.columnACTI_NCORR;
                }
            }
            
            internal DataColumn ACEG_NCORRColumn {
                get {
                    return this.columnACEG_NCORR;
                }
            }
            
            internal DataColumn PERIODO_INGRESOColumn {
                get {
                    return this.columnPERIODO_INGRESO;
                }
            }
            
            internal DataColumn PERIODO_EGRESOColumn {
                get {
                    return this.columnPERIODO_EGRESO;
                }
            }
            
            internal DataColumn FECHA_ENTREGAColumn {
                get {
                    return this.columnFECHA_ENTREGA;
                }
            }
            
            internal DataColumn N1Column {
                get {
                    return this.columnN1;
                }
            }
            
            internal DataColumn P1Column {
                get {
                    return this.columnP1;
                }
            }
            
            internal DataColumn N2Column {
                get {
                    return this.columnN2;
                }
            }
            
            internal DataColumn P2Column {
                get {
                    return this.columnP2;
                }
            }
            
            internal DataColumn N3Column {
                get {
                    return this.columnN3;
                }
            }
            
            internal DataColumn P3Column {
                get {
                    return this.columnP3;
                }
            }
            
            internal DataColumn N4Column {
                get {
                    return this.columnN4;
                }
            }
            
            internal DataColumn P4Column {
                get {
                    return this.columnP4;
                }
            }
            
            internal DataColumn N5Column {
                get {
                    return this.columnN5;
                }
            }
            
            internal DataColumn P5Column {
                get {
                    return this.columnP5;
                }
            }
            
            internal DataColumn N6Column {
                get {
                    return this.columnN6;
                }
            }
            
            internal DataColumn P6Column {
                get {
                    return this.columnP6;
                }
            }
            
            internal DataColumn N7Column {
                get {
                    return this.columnN7;
                }
            }
            
            internal DataColumn P8Column {
                get {
                    return this.columnP8;
                }
            }
            
            internal DataColumn NOTA_TITULACIONColumn {
                get {
                    return this.columnNOTA_TITULACION;
                }
            }
            
            internal DataColumn REG_FOLIOColumn {
                get {
                    return this.columnREG_FOLIO;
                }
            }
            
            public TITULADOSRow this[int index] {
                get {
                    return ((TITULADOSRow)(this.Rows[index]));
                }
            }
            
            public event TITULADOSRowChangeEventHandler TITULADOSRowChanged;
            
            public event TITULADOSRowChangeEventHandler TITULADOSRowChanging;
            
            public event TITULADOSRowChangeEventHandler TITULADOSRowDeleted;
            
            public event TITULADOSRowChangeEventHandler TITULADOSRowDeleting;
            
            public void AddTITULADOSRow(TITULADOSRow row) {
                this.Rows.Add(row);
            }
            
            public TITULADOSRow AddTITULADOSRow(
                        System.Decimal GRUPO, 
                        System.Decimal N, 
                        System.Decimal EGRE_NCORR, 
                        string NOMBRE, 
                        string RUT, 
                        System.Decimal ACTI_NCORR, 
                        System.Decimal ACEG_NCORR, 
                        string PERIODO_INGRESO, 
                        string PERIODO_EGRESO, 
                        string FECHA_ENTREGA, 
                        string N1, 
                        string P1, 
                        string N2, 
                        string P2, 
                        string N3, 
                        string P3, 
                        string N4, 
                        string P4, 
                        string N5, 
                        string P5, 
                        string N6, 
                        string P6, 
                        string N7, 
                        string P8, 
                        string NOTA_TITULACION, 
                        string REG_FOLIO) {
                TITULADOSRow rowTITULADOSRow = ((TITULADOSRow)(this.NewRow()));
                rowTITULADOSRow.ItemArray = new object[] {
                        GRUPO,
                        N,
                        EGRE_NCORR,
                        NOMBRE,
                        RUT,
                        ACTI_NCORR,
                        ACEG_NCORR,
                        PERIODO_INGRESO,
                        PERIODO_EGRESO,
                        FECHA_ENTREGA,
                        N1,
                        P1,
                        N2,
                        P2,
                        N3,
                        P3,
                        N4,
                        P4,
                        N5,
                        P5,
                        N6,
                        P6,
                        N7,
                        P8,
                        NOTA_TITULACION,
                        REG_FOLIO};
                this.Rows.Add(rowTITULADOSRow);
                return rowTITULADOSRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TITULADOSDataTable cln = ((TITULADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TITULADOSDataTable();
            }
            
            internal void InitVars() {
                this.columnGRUPO = this.Columns["GRUPO"];
                this.columnN = this.Columns["N"];
                this.columnEGRE_NCORR = this.Columns["EGRE_NCORR"];
                this.columnNOMBRE = this.Columns["NOMBRE"];
                this.columnRUT = this.Columns["RUT"];
                this.columnACTI_NCORR = this.Columns["ACTI_NCORR"];
                this.columnACEG_NCORR = this.Columns["ACEG_NCORR"];
                this.columnPERIODO_INGRESO = this.Columns["PERIODO_INGRESO"];
                this.columnPERIODO_EGRESO = this.Columns["PERIODO_EGRESO"];
                this.columnFECHA_ENTREGA = this.Columns["FECHA_ENTREGA"];
                this.columnN1 = this.Columns["N1"];
                this.columnP1 = this.Columns["P1"];
                this.columnN2 = this.Columns["N2"];
                this.columnP2 = this.Columns["P2"];
                this.columnN3 = this.Columns["N3"];
                this.columnP3 = this.Columns["P3"];
                this.columnN4 = this.Columns["N4"];
                this.columnP4 = this.Columns["P4"];
                this.columnN5 = this.Columns["N5"];
                this.columnP5 = this.Columns["P5"];
                this.columnN6 = this.Columns["N6"];
                this.columnP6 = this.Columns["P6"];
                this.columnN7 = this.Columns["N7"];
                this.columnP8 = this.Columns["P8"];
                this.columnNOTA_TITULACION = this.Columns["NOTA_TITULACION"];
                this.columnREG_FOLIO = this.Columns["REG_FOLIO"];
            }
            
            private void InitClass() {
                this.columnGRUPO = new DataColumn("GRUPO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGRUPO);
                this.columnN = new DataColumn("N", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN);
                this.columnEGRE_NCORR = new DataColumn("EGRE_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEGRE_NCORR);
                this.columnNOMBRE = new DataColumn("NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE);
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnACTI_NCORR = new DataColumn("ACTI_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACTI_NCORR);
                this.columnACEG_NCORR = new DataColumn("ACEG_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACEG_NCORR);
                this.columnPERIODO_INGRESO = new DataColumn("PERIODO_INGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO_INGRESO);
                this.columnPERIODO_EGRESO = new DataColumn("PERIODO_EGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO_EGRESO);
                this.columnFECHA_ENTREGA = new DataColumn("FECHA_ENTREGA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_ENTREGA);
                this.columnN1 = new DataColumn("N1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN1);
                this.columnP1 = new DataColumn("P1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP1);
                this.columnN2 = new DataColumn("N2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN2);
                this.columnP2 = new DataColumn("P2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP2);
                this.columnN3 = new DataColumn("N3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN3);
                this.columnP3 = new DataColumn("P3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP3);
                this.columnN4 = new DataColumn("N4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN4);
                this.columnP4 = new DataColumn("P4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP4);
                this.columnN5 = new DataColumn("N5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN5);
                this.columnP5 = new DataColumn("P5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP5);
                this.columnN6 = new DataColumn("N6", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN6);
                this.columnP6 = new DataColumn("P6", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP6);
                this.columnN7 = new DataColumn("N7", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN7);
                this.columnP8 = new DataColumn("P8", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP8);
                this.columnNOTA_TITULACION = new DataColumn("NOTA_TITULACION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOTA_TITULACION);
                this.columnREG_FOLIO = new DataColumn("REG_FOLIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnREG_FOLIO);
                this.columnGRUPO.ReadOnly = true;
                this.columnN.ReadOnly = true;
                this.columnEGRE_NCORR.ReadOnly = true;
                this.columnNOMBRE.ReadOnly = true;
                this.columnRUT.ReadOnly = true;
                this.columnACTI_NCORR.ReadOnly = true;
                this.columnACEG_NCORR.ReadOnly = true;
                this.columnPERIODO_INGRESO.ReadOnly = true;
                this.columnPERIODO_EGRESO.ReadOnly = true;
                this.columnFECHA_ENTREGA.ReadOnly = true;
                this.columnN1.ReadOnly = true;
                this.columnP1.ReadOnly = true;
                this.columnN2.ReadOnly = true;
                this.columnP2.ReadOnly = true;
                this.columnN3.ReadOnly = true;
                this.columnP3.ReadOnly = true;
                this.columnN4.ReadOnly = true;
                this.columnP4.ReadOnly = true;
                this.columnN5.ReadOnly = true;
                this.columnP5.ReadOnly = true;
                this.columnN6.ReadOnly = true;
                this.columnP6.ReadOnly = true;
                this.columnN7.ReadOnly = true;
                this.columnP8.ReadOnly = true;
                this.columnNOTA_TITULACION.ReadOnly = true;
                this.columnREG_FOLIO.ReadOnly = true;
            }
            
            public TITULADOSRow NewTITULADOSRow() {
                return ((TITULADOSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TITULADOSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TITULADOSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TITULADOSRowChanged != null)) {
                    this.TITULADOSRowChanged(this, new TITULADOSRowChangeEvent(((TITULADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TITULADOSRowChanging != null)) {
                    this.TITULADOSRowChanging(this, new TITULADOSRowChangeEvent(((TITULADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TITULADOSRowDeleted != null)) {
                    this.TITULADOSRowDeleted(this, new TITULADOSRowChangeEvent(((TITULADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TITULADOSRowDeleting != null)) {
                    this.TITULADOSRowDeleting(this, new TITULADOSRowChangeEvent(((TITULADOSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTITULADOSRow(TITULADOSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TITULADOSRow : DataRow {
            
            private TITULADOSDataTable tableTITULADOS;
            
            internal TITULADOSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTITULADOS = ((TITULADOSDataTable)(this.Table));
            }
            
            public System.Decimal GRUPO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTITULADOS.GRUPOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.GRUPOColumn] = value;
                }
            }
            
            public System.Decimal N {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTITULADOS.NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.NColumn] = value;
                }
            }
            
            public System.Decimal EGRE_NCORR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTITULADOS.EGRE_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.EGRE_NCORRColumn] = value;
                }
            }
            
            public string NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.NOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.NOMBREColumn] = value;
                }
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.RUTColumn] = value;
                }
            }
            
            public System.Decimal ACTI_NCORR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTITULADOS.ACTI_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.ACTI_NCORRColumn] = value;
                }
            }
            
            public System.Decimal ACEG_NCORR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTITULADOS.ACEG_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.ACEG_NCORRColumn] = value;
                }
            }
            
            public string PERIODO_INGRESO {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.PERIODO_INGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.PERIODO_INGRESOColumn] = value;
                }
            }
            
            public string PERIODO_EGRESO {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.PERIODO_EGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.PERIODO_EGRESOColumn] = value;
                }
            }
            
            public string FECHA_ENTREGA {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.FECHA_ENTREGAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.FECHA_ENTREGAColumn] = value;
                }
            }
            
            public string N1 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.N1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.N1Column] = value;
                }
            }
            
            public string P1 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.P1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.P1Column] = value;
                }
            }
            
            public string N2 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.N2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.N2Column] = value;
                }
            }
            
            public string P2 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.P2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.P2Column] = value;
                }
            }
            
            public string N3 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.N3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.N3Column] = value;
                }
            }
            
            public string P3 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.P3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.P3Column] = value;
                }
            }
            
            public string N4 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.N4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.N4Column] = value;
                }
            }
            
            public string P4 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.P4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.P4Column] = value;
                }
            }
            
            public string N5 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.N5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.N5Column] = value;
                }
            }
            
            public string P5 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.P5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.P5Column] = value;
                }
            }
            
            public string N6 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.N6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.N6Column] = value;
                }
            }
            
            public string P6 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.P6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.P6Column] = value;
                }
            }
            
            public string N7 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.N7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.N7Column] = value;
                }
            }
            
            public string P8 {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.P8Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.P8Column] = value;
                }
            }
            
            public string NOTA_TITULACION {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.NOTA_TITULACIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.NOTA_TITULACIONColumn] = value;
                }
            }
            
            public string REG_FOLIO {
                get {
                    try {
                        return ((string)(this[this.tableTITULADOS.REG_FOLIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTITULADOS.REG_FOLIOColumn] = value;
                }
            }
            
            public bool IsGRUPONull() {
                return this.IsNull(this.tableTITULADOS.GRUPOColumn);
            }
            
            public void SetGRUPONull() {
                this[this.tableTITULADOS.GRUPOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNNull() {
                return this.IsNull(this.tableTITULADOS.NColumn);
            }
            
            public void SetNNull() {
                this[this.tableTITULADOS.NColumn] = System.Convert.DBNull;
            }
            
            public bool IsEGRE_NCORRNull() {
                return this.IsNull(this.tableTITULADOS.EGRE_NCORRColumn);
            }
            
            public void SetEGRE_NCORRNull() {
                this[this.tableTITULADOS.EGRE_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRENull() {
                return this.IsNull(this.tableTITULADOS.NOMBREColumn);
            }
            
            public void SetNOMBRENull() {
                this[this.tableTITULADOS.NOMBREColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.tableTITULADOS.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.tableTITULADOS.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsACTI_NCORRNull() {
                return this.IsNull(this.tableTITULADOS.ACTI_NCORRColumn);
            }
            
            public void SetACTI_NCORRNull() {
                this[this.tableTITULADOS.ACTI_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsACEG_NCORRNull() {
                return this.IsNull(this.tableTITULADOS.ACEG_NCORRColumn);
            }
            
            public void SetACEG_NCORRNull() {
                this[this.tableTITULADOS.ACEG_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODO_INGRESONull() {
                return this.IsNull(this.tableTITULADOS.PERIODO_INGRESOColumn);
            }
            
            public void SetPERIODO_INGRESONull() {
                this[this.tableTITULADOS.PERIODO_INGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODO_EGRESONull() {
                return this.IsNull(this.tableTITULADOS.PERIODO_EGRESOColumn);
            }
            
            public void SetPERIODO_EGRESONull() {
                this[this.tableTITULADOS.PERIODO_EGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_ENTREGANull() {
                return this.IsNull(this.tableTITULADOS.FECHA_ENTREGAColumn);
            }
            
            public void SetFECHA_ENTREGANull() {
                this[this.tableTITULADOS.FECHA_ENTREGAColumn] = System.Convert.DBNull;
            }
            
            public bool IsN1Null() {
                return this.IsNull(this.tableTITULADOS.N1Column);
            }
            
            public void SetN1Null() {
                this[this.tableTITULADOS.N1Column] = System.Convert.DBNull;
            }
            
            public bool IsP1Null() {
                return this.IsNull(this.tableTITULADOS.P1Column);
            }
            
            public void SetP1Null() {
                this[this.tableTITULADOS.P1Column] = System.Convert.DBNull;
            }
            
            public bool IsN2Null() {
                return this.IsNull(this.tableTITULADOS.N2Column);
            }
            
            public void SetN2Null() {
                this[this.tableTITULADOS.N2Column] = System.Convert.DBNull;
            }
            
            public bool IsP2Null() {
                return this.IsNull(this.tableTITULADOS.P2Column);
            }
            
            public void SetP2Null() {
                this[this.tableTITULADOS.P2Column] = System.Convert.DBNull;
            }
            
            public bool IsN3Null() {
                return this.IsNull(this.tableTITULADOS.N3Column);
            }
            
            public void SetN3Null() {
                this[this.tableTITULADOS.N3Column] = System.Convert.DBNull;
            }
            
            public bool IsP3Null() {
                return this.IsNull(this.tableTITULADOS.P3Column);
            }
            
            public void SetP3Null() {
                this[this.tableTITULADOS.P3Column] = System.Convert.DBNull;
            }
            
            public bool IsN4Null() {
                return this.IsNull(this.tableTITULADOS.N4Column);
            }
            
            public void SetN4Null() {
                this[this.tableTITULADOS.N4Column] = System.Convert.DBNull;
            }
            
            public bool IsP4Null() {
                return this.IsNull(this.tableTITULADOS.P4Column);
            }
            
            public void SetP4Null() {
                this[this.tableTITULADOS.P4Column] = System.Convert.DBNull;
            }
            
            public bool IsN5Null() {
                return this.IsNull(this.tableTITULADOS.N5Column);
            }
            
            public void SetN5Null() {
                this[this.tableTITULADOS.N5Column] = System.Convert.DBNull;
            }
            
            public bool IsP5Null() {
                return this.IsNull(this.tableTITULADOS.P5Column);
            }
            
            public void SetP5Null() {
                this[this.tableTITULADOS.P5Column] = System.Convert.DBNull;
            }
            
            public bool IsN6Null() {
                return this.IsNull(this.tableTITULADOS.N6Column);
            }
            
            public void SetN6Null() {
                this[this.tableTITULADOS.N6Column] = System.Convert.DBNull;
            }
            
            public bool IsP6Null() {
                return this.IsNull(this.tableTITULADOS.P6Column);
            }
            
            public void SetP6Null() {
                this[this.tableTITULADOS.P6Column] = System.Convert.DBNull;
            }
            
            public bool IsN7Null() {
                return this.IsNull(this.tableTITULADOS.N7Column);
            }
            
            public void SetN7Null() {
                this[this.tableTITULADOS.N7Column] = System.Convert.DBNull;
            }
            
            public bool IsP8Null() {
                return this.IsNull(this.tableTITULADOS.P8Column);
            }
            
            public void SetP8Null() {
                this[this.tableTITULADOS.P8Column] = System.Convert.DBNull;
            }
            
            public bool IsNOTA_TITULACIONNull() {
                return this.IsNull(this.tableTITULADOS.NOTA_TITULACIONColumn);
            }
            
            public void SetNOTA_TITULACIONNull() {
                this[this.tableTITULADOS.NOTA_TITULACIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsREG_FOLIONull() {
                return this.IsNull(this.tableTITULADOS.REG_FOLIOColumn);
            }
            
            public void SetREG_FOLIONull() {
                this[this.tableTITULADOS.REG_FOLIOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TITULADOSRowChangeEvent : EventArgs {
            
            private TITULADOSRow eventRow;
            
            private DataRowAction eventAction;
            
            public TITULADOSRowChangeEvent(TITULADOSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TITULADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENC_REQ_CALIFICADOSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnT1;
            
            private DataColumn columnP1;
            
            private DataColumn columnT2;
            
            private DataColumn columnP2;
            
            private DataColumn columnT3;
            
            private DataColumn columnP3;
            
            private DataColumn columnT4;
            
            private DataColumn columnP4;
            
            private DataColumn columnT5;
            
            private DataColumn columnP5;
            
            private DataColumn columnT6;
            
            private DataColumn columnP6;
            
            private DataColumn columnT7;
            
            private DataColumn columnP7;
            
            private DataColumn columnT8;
            
            private DataColumn columnP8;
            
            private DataColumn columnT9;
            
            private DataColumn columnP9;
            
            private DataColumn columnT10;
            
            private DataColumn columnP10;
            
            internal ENC_REQ_CALIFICADOSDataTable() : 
                    base("ENC_REQ_CALIFICADOS") {
                this.InitClass();
            }
            
            internal ENC_REQ_CALIFICADOSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn T1Column {
                get {
                    return this.columnT1;
                }
            }
            
            internal DataColumn P1Column {
                get {
                    return this.columnP1;
                }
            }
            
            internal DataColumn T2Column {
                get {
                    return this.columnT2;
                }
            }
            
            internal DataColumn P2Column {
                get {
                    return this.columnP2;
                }
            }
            
            internal DataColumn T3Column {
                get {
                    return this.columnT3;
                }
            }
            
            internal DataColumn P3Column {
                get {
                    return this.columnP3;
                }
            }
            
            internal DataColumn T4Column {
                get {
                    return this.columnT4;
                }
            }
            
            internal DataColumn P4Column {
                get {
                    return this.columnP4;
                }
            }
            
            internal DataColumn T5Column {
                get {
                    return this.columnT5;
                }
            }
            
            internal DataColumn P5Column {
                get {
                    return this.columnP5;
                }
            }
            
            internal DataColumn T6Column {
                get {
                    return this.columnT6;
                }
            }
            
            internal DataColumn P6Column {
                get {
                    return this.columnP6;
                }
            }
            
            internal DataColumn T7Column {
                get {
                    return this.columnT7;
                }
            }
            
            internal DataColumn P7Column {
                get {
                    return this.columnP7;
                }
            }
            
            internal DataColumn T8Column {
                get {
                    return this.columnT8;
                }
            }
            
            internal DataColumn P8Column {
                get {
                    return this.columnP8;
                }
            }
            
            internal DataColumn T9Column {
                get {
                    return this.columnT9;
                }
            }
            
            internal DataColumn P9Column {
                get {
                    return this.columnP9;
                }
            }
            
            internal DataColumn T10Column {
                get {
                    return this.columnT10;
                }
            }
            
            internal DataColumn P10Column {
                get {
                    return this.columnP10;
                }
            }
            
            public ENC_REQ_CALIFICADOSRow this[int index] {
                get {
                    return ((ENC_REQ_CALIFICADOSRow)(this.Rows[index]));
                }
            }
            
            public event ENC_REQ_CALIFICADOSRowChangeEventHandler ENC_REQ_CALIFICADOSRowChanged;
            
            public event ENC_REQ_CALIFICADOSRowChangeEventHandler ENC_REQ_CALIFICADOSRowChanging;
            
            public event ENC_REQ_CALIFICADOSRowChangeEventHandler ENC_REQ_CALIFICADOSRowDeleted;
            
            public event ENC_REQ_CALIFICADOSRowChangeEventHandler ENC_REQ_CALIFICADOSRowDeleting;
            
            public void AddENC_REQ_CALIFICADOSRow(ENC_REQ_CALIFICADOSRow row) {
                this.Rows.Add(row);
            }
            
            public ENC_REQ_CALIFICADOSRow AddENC_REQ_CALIFICADOSRow(
                        string T1, 
                        string P1, 
                        string T2, 
                        string P2, 
                        string T3, 
                        string P3, 
                        string T4, 
                        string P4, 
                        string T5, 
                        string P5, 
                        string T6, 
                        string P6, 
                        string T7, 
                        string P7, 
                        string T8, 
                        string P8, 
                        string T9, 
                        string P9, 
                        string T10, 
                        string P10) {
                ENC_REQ_CALIFICADOSRow rowENC_REQ_CALIFICADOSRow = ((ENC_REQ_CALIFICADOSRow)(this.NewRow()));
                rowENC_REQ_CALIFICADOSRow.ItemArray = new object[] {
                        T1,
                        P1,
                        T2,
                        P2,
                        T3,
                        P3,
                        T4,
                        P4,
                        T5,
                        P5,
                        T6,
                        P6,
                        T7,
                        P7,
                        T8,
                        P8,
                        T9,
                        P9,
                        T10,
                        P10};
                this.Rows.Add(rowENC_REQ_CALIFICADOSRow);
                return rowENC_REQ_CALIFICADOSRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ENC_REQ_CALIFICADOSDataTable cln = ((ENC_REQ_CALIFICADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ENC_REQ_CALIFICADOSDataTable();
            }
            
            internal void InitVars() {
                this.columnT1 = this.Columns["T1"];
                this.columnP1 = this.Columns["P1"];
                this.columnT2 = this.Columns["T2"];
                this.columnP2 = this.Columns["P2"];
                this.columnT3 = this.Columns["T3"];
                this.columnP3 = this.Columns["P3"];
                this.columnT4 = this.Columns["T4"];
                this.columnP4 = this.Columns["P4"];
                this.columnT5 = this.Columns["T5"];
                this.columnP5 = this.Columns["P5"];
                this.columnT6 = this.Columns["T6"];
                this.columnP6 = this.Columns["P6"];
                this.columnT7 = this.Columns["T7"];
                this.columnP7 = this.Columns["P7"];
                this.columnT8 = this.Columns["T8"];
                this.columnP8 = this.Columns["P8"];
                this.columnT9 = this.Columns["T9"];
                this.columnP9 = this.Columns["P9"];
                this.columnT10 = this.Columns["T10"];
                this.columnP10 = this.Columns["P10"];
            }
            
            private void InitClass() {
                this.columnT1 = new DataColumn("T1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT1);
                this.columnP1 = new DataColumn("P1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP1);
                this.columnT2 = new DataColumn("T2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT2);
                this.columnP2 = new DataColumn("P2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP2);
                this.columnT3 = new DataColumn("T3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT3);
                this.columnP3 = new DataColumn("P3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP3);
                this.columnT4 = new DataColumn("T4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT4);
                this.columnP4 = new DataColumn("P4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP4);
                this.columnT5 = new DataColumn("T5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT5);
                this.columnP5 = new DataColumn("P5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP5);
                this.columnT6 = new DataColumn("T6", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT6);
                this.columnP6 = new DataColumn("P6", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP6);
                this.columnT7 = new DataColumn("T7", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT7);
                this.columnP7 = new DataColumn("P7", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP7);
                this.columnT8 = new DataColumn("T8", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT8);
                this.columnP8 = new DataColumn("P8", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP8);
                this.columnT9 = new DataColumn("T9", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT9);
                this.columnP9 = new DataColumn("P9", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP9);
                this.columnT10 = new DataColumn("T10", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT10);
                this.columnP10 = new DataColumn("P10", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP10);
            }
            
            public ENC_REQ_CALIFICADOSRow NewENC_REQ_CALIFICADOSRow() {
                return ((ENC_REQ_CALIFICADOSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ENC_REQ_CALIFICADOSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ENC_REQ_CALIFICADOSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENC_REQ_CALIFICADOSRowChanged != null)) {
                    this.ENC_REQ_CALIFICADOSRowChanged(this, new ENC_REQ_CALIFICADOSRowChangeEvent(((ENC_REQ_CALIFICADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENC_REQ_CALIFICADOSRowChanging != null)) {
                    this.ENC_REQ_CALIFICADOSRowChanging(this, new ENC_REQ_CALIFICADOSRowChangeEvent(((ENC_REQ_CALIFICADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENC_REQ_CALIFICADOSRowDeleted != null)) {
                    this.ENC_REQ_CALIFICADOSRowDeleted(this, new ENC_REQ_CALIFICADOSRowChangeEvent(((ENC_REQ_CALIFICADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENC_REQ_CALIFICADOSRowDeleting != null)) {
                    this.ENC_REQ_CALIFICADOSRowDeleting(this, new ENC_REQ_CALIFICADOSRowChangeEvent(((ENC_REQ_CALIFICADOSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveENC_REQ_CALIFICADOSRow(ENC_REQ_CALIFICADOSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENC_REQ_CALIFICADOSRow : DataRow {
            
            private ENC_REQ_CALIFICADOSDataTable tableENC_REQ_CALIFICADOS;
            
            internal ENC_REQ_CALIFICADOSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableENC_REQ_CALIFICADOS = ((ENC_REQ_CALIFICADOSDataTable)(this.Table));
            }
            
            public string T1 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T1Column] = value;
                }
            }
            
            public string P1 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P1Column] = value;
                }
            }
            
            public string T2 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T2Column] = value;
                }
            }
            
            public string P2 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P2Column] = value;
                }
            }
            
            public string T3 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T3Column] = value;
                }
            }
            
            public string P3 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P3Column] = value;
                }
            }
            
            public string T4 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T4Column] = value;
                }
            }
            
            public string P4 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P4Column] = value;
                }
            }
            
            public string T5 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T5Column] = value;
                }
            }
            
            public string P5 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P5Column] = value;
                }
            }
            
            public string T6 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T6Column] = value;
                }
            }
            
            public string P6 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P6Column] = value;
                }
            }
            
            public string T7 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T7Column] = value;
                }
            }
            
            public string P7 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P7Column] = value;
                }
            }
            
            public string T8 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T8Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T8Column] = value;
                }
            }
            
            public string P8 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P8Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P8Column] = value;
                }
            }
            
            public string T9 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T9Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T9Column] = value;
                }
            }
            
            public string P9 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P9Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P9Column] = value;
                }
            }
            
            public string T10 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.T10Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.T10Column] = value;
                }
            }
            
            public string P10 {
                get {
                    try {
                        return ((string)(this[this.tableENC_REQ_CALIFICADOS.P10Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENC_REQ_CALIFICADOS.P10Column] = value;
                }
            }
            
            public bool IsT1Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T1Column);
            }
            
            public void SetT1Null() {
                this[this.tableENC_REQ_CALIFICADOS.T1Column] = System.Convert.DBNull;
            }
            
            public bool IsP1Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P1Column);
            }
            
            public void SetP1Null() {
                this[this.tableENC_REQ_CALIFICADOS.P1Column] = System.Convert.DBNull;
            }
            
            public bool IsT2Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T2Column);
            }
            
            public void SetT2Null() {
                this[this.tableENC_REQ_CALIFICADOS.T2Column] = System.Convert.DBNull;
            }
            
            public bool IsP2Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P2Column);
            }
            
            public void SetP2Null() {
                this[this.tableENC_REQ_CALIFICADOS.P2Column] = System.Convert.DBNull;
            }
            
            public bool IsT3Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T3Column);
            }
            
            public void SetT3Null() {
                this[this.tableENC_REQ_CALIFICADOS.T3Column] = System.Convert.DBNull;
            }
            
            public bool IsP3Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P3Column);
            }
            
            public void SetP3Null() {
                this[this.tableENC_REQ_CALIFICADOS.P3Column] = System.Convert.DBNull;
            }
            
            public bool IsT4Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T4Column);
            }
            
            public void SetT4Null() {
                this[this.tableENC_REQ_CALIFICADOS.T4Column] = System.Convert.DBNull;
            }
            
            public bool IsP4Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P4Column);
            }
            
            public void SetP4Null() {
                this[this.tableENC_REQ_CALIFICADOS.P4Column] = System.Convert.DBNull;
            }
            
            public bool IsT5Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T5Column);
            }
            
            public void SetT5Null() {
                this[this.tableENC_REQ_CALIFICADOS.T5Column] = System.Convert.DBNull;
            }
            
            public bool IsP5Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P5Column);
            }
            
            public void SetP5Null() {
                this[this.tableENC_REQ_CALIFICADOS.P5Column] = System.Convert.DBNull;
            }
            
            public bool IsT6Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T6Column);
            }
            
            public void SetT6Null() {
                this[this.tableENC_REQ_CALIFICADOS.T6Column] = System.Convert.DBNull;
            }
            
            public bool IsP6Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P6Column);
            }
            
            public void SetP6Null() {
                this[this.tableENC_REQ_CALIFICADOS.P6Column] = System.Convert.DBNull;
            }
            
            public bool IsT7Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T7Column);
            }
            
            public void SetT7Null() {
                this[this.tableENC_REQ_CALIFICADOS.T7Column] = System.Convert.DBNull;
            }
            
            public bool IsP7Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P7Column);
            }
            
            public void SetP7Null() {
                this[this.tableENC_REQ_CALIFICADOS.P7Column] = System.Convert.DBNull;
            }
            
            public bool IsT8Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T8Column);
            }
            
            public void SetT8Null() {
                this[this.tableENC_REQ_CALIFICADOS.T8Column] = System.Convert.DBNull;
            }
            
            public bool IsP8Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P8Column);
            }
            
            public void SetP8Null() {
                this[this.tableENC_REQ_CALIFICADOS.P8Column] = System.Convert.DBNull;
            }
            
            public bool IsT9Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T9Column);
            }
            
            public void SetT9Null() {
                this[this.tableENC_REQ_CALIFICADOS.T9Column] = System.Convert.DBNull;
            }
            
            public bool IsP9Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P9Column);
            }
            
            public void SetP9Null() {
                this[this.tableENC_REQ_CALIFICADOS.P9Column] = System.Convert.DBNull;
            }
            
            public bool IsT10Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.T10Column);
            }
            
            public void SetT10Null() {
                this[this.tableENC_REQ_CALIFICADOS.T10Column] = System.Convert.DBNull;
            }
            
            public bool IsP10Null() {
                return this.IsNull(this.tableENC_REQ_CALIFICADOS.P10Column);
            }
            
            public void SetP10Null() {
                this[this.tableENC_REQ_CALIFICADOS.P10Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENC_REQ_CALIFICADOSRowChangeEvent : EventArgs {
            
            private ENC_REQ_CALIFICADOSRow eventRow;
            
            private DataRowAction eventAction;
            
            public ENC_REQ_CALIFICADOSRowChangeEvent(ENC_REQ_CALIFICADOSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ENC_REQ_CALIFICADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
