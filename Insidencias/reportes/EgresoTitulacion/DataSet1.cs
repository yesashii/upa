//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace EgresoTitulacion {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private ASIGNATURASDataTable tableASIGNATURAS;
        
        private EGRESADOSDataTable tableEGRESADOS;
        
        private ENCABEZADODataTable tableENCABEZADO;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ASIGNATURAS"] != null)) {
                    this.Tables.Add(new ASIGNATURASDataTable(ds.Tables["ASIGNATURAS"]));
                }
                if ((ds.Tables["EGRESADOS"] != null)) {
                    this.Tables.Add(new EGRESADOSDataTable(ds.Tables["EGRESADOS"]));
                }
                if ((ds.Tables["ENCABEZADO"] != null)) {
                    this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ASIGNATURASDataTable ASIGNATURAS {
            get {
                return this.tableASIGNATURAS;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EGRESADOSDataTable EGRESADOS {
            get {
                return this.tableEGRESADOS;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENCABEZADODataTable ENCABEZADO {
            get {
                return this.tableENCABEZADO;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ASIGNATURAS"] != null)) {
                this.Tables.Add(new ASIGNATURASDataTable(ds.Tables["ASIGNATURAS"]));
            }
            if ((ds.Tables["EGRESADOS"] != null)) {
                this.Tables.Add(new EGRESADOSDataTable(ds.Tables["EGRESADOS"]));
            }
            if ((ds.Tables["ENCABEZADO"] != null)) {
                this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableASIGNATURAS = ((ASIGNATURASDataTable)(this.Tables["ASIGNATURAS"]));
            if ((this.tableASIGNATURAS != null)) {
                this.tableASIGNATURAS.InitVars();
            }
            this.tableEGRESADOS = ((EGRESADOSDataTable)(this.Tables["EGRESADOS"]));
            if ((this.tableEGRESADOS != null)) {
                this.tableEGRESADOS.InitVars();
            }
            this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Tables["ENCABEZADO"]));
            if ((this.tableENCABEZADO != null)) {
                this.tableENCABEZADO.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableASIGNATURAS = new ASIGNATURASDataTable();
            this.Tables.Add(this.tableASIGNATURAS);
            this.tableEGRESADOS = new EGRESADOSDataTable();
            this.Tables.Add(this.tableEGRESADOS);
            this.tableENCABEZADO = new ENCABEZADODataTable();
            this.Tables.Add(this.tableENCABEZADO);
        }
        
        private bool ShouldSerializeASIGNATURAS() {
            return false;
        }
        
        private bool ShouldSerializeEGRESADOS() {
            return false;
        }
        
        private bool ShouldSerializeENCABEZADO() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ASIGNATURASRowChangeEventHandler(object sender, ASIGNATURASRowChangeEvent e);
        
        public delegate void EGRESADOSRowChangeEventHandler(object sender, EGRESADOSRowChangeEvent e);
        
        public delegate void ENCABEZADORowChangeEventHandler(object sender, ENCABEZADORowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ASIGNATURASDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnGRUPO;
            
            private DataColumn columnNASIGNATURA;
            
            private DataColumn columnCOD_ASIGNATURA;
            
            private DataColumn columnASIG_CCOD;
            
            private DataColumn columnASIG_TDESC;
            
            private DataColumn columnASIG_NHORAS;
            
            internal ASIGNATURASDataTable() : 
                    base("ASIGNATURAS") {
                this.InitClass();
            }
            
            internal ASIGNATURASDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn GRUPOColumn {
                get {
                    return this.columnGRUPO;
                }
            }
            
            internal DataColumn NASIGNATURAColumn {
                get {
                    return this.columnNASIGNATURA;
                }
            }
            
            internal DataColumn COD_ASIGNATURAColumn {
                get {
                    return this.columnCOD_ASIGNATURA;
                }
            }
            
            internal DataColumn ASIG_CCODColumn {
                get {
                    return this.columnASIG_CCOD;
                }
            }
            
            internal DataColumn ASIG_TDESCColumn {
                get {
                    return this.columnASIG_TDESC;
                }
            }
            
            internal DataColumn ASIG_NHORASColumn {
                get {
                    return this.columnASIG_NHORAS;
                }
            }
            
            public ASIGNATURASRow this[int index] {
                get {
                    return ((ASIGNATURASRow)(this.Rows[index]));
                }
            }
            
            public event ASIGNATURASRowChangeEventHandler ASIGNATURASRowChanged;
            
            public event ASIGNATURASRowChangeEventHandler ASIGNATURASRowChanging;
            
            public event ASIGNATURASRowChangeEventHandler ASIGNATURASRowDeleted;
            
            public event ASIGNATURASRowChangeEventHandler ASIGNATURASRowDeleting;
            
            public void AddASIGNATURASRow(ASIGNATURASRow row) {
                this.Rows.Add(row);
            }
            
            public ASIGNATURASRow AddASIGNATURASRow(System.Decimal GRUPO, System.Decimal NASIGNATURA, string COD_ASIGNATURA, string ASIG_CCOD, string ASIG_TDESC, System.Decimal ASIG_NHORAS) {
                ASIGNATURASRow rowASIGNATURASRow = ((ASIGNATURASRow)(this.NewRow()));
                rowASIGNATURASRow.ItemArray = new object[] {
                        GRUPO,
                        NASIGNATURA,
                        COD_ASIGNATURA,
                        ASIG_CCOD,
                        ASIG_TDESC,
                        ASIG_NHORAS};
                this.Rows.Add(rowASIGNATURASRow);
                return rowASIGNATURASRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ASIGNATURASDataTable cln = ((ASIGNATURASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ASIGNATURASDataTable();
            }
            
            internal void InitVars() {
                this.columnGRUPO = this.Columns["GRUPO"];
                this.columnNASIGNATURA = this.Columns["NASIGNATURA"];
                this.columnCOD_ASIGNATURA = this.Columns["COD_ASIGNATURA"];
                this.columnASIG_CCOD = this.Columns["ASIG_CCOD"];
                this.columnASIG_TDESC = this.Columns["ASIG_TDESC"];
                this.columnASIG_NHORAS = this.Columns["ASIG_NHORAS"];
            }
            
            private void InitClass() {
                this.columnGRUPO = new DataColumn("GRUPO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGRUPO);
                this.columnNASIGNATURA = new DataColumn("NASIGNATURA", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNASIGNATURA);
                this.columnCOD_ASIGNATURA = new DataColumn("COD_ASIGNATURA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOD_ASIGNATURA);
                this.columnASIG_CCOD = new DataColumn("ASIG_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_CCOD);
                this.columnASIG_TDESC = new DataColumn("ASIG_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_TDESC);
                this.columnASIG_NHORAS = new DataColumn("ASIG_NHORAS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_NHORAS);
                this.columnGRUPO.ReadOnly = true;
                this.columnNASIGNATURA.ReadOnly = true;
                this.columnCOD_ASIGNATURA.ReadOnly = true;
                this.columnASIG_CCOD.ReadOnly = true;
                this.columnASIG_TDESC.ReadOnly = true;
                this.columnASIG_NHORAS.ReadOnly = true;
            }
            
            public ASIGNATURASRow NewASIGNATURASRow() {
                return ((ASIGNATURASRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ASIGNATURASRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ASIGNATURASRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ASIGNATURASRowChanged != null)) {
                    this.ASIGNATURASRowChanged(this, new ASIGNATURASRowChangeEvent(((ASIGNATURASRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ASIGNATURASRowChanging != null)) {
                    this.ASIGNATURASRowChanging(this, new ASIGNATURASRowChangeEvent(((ASIGNATURASRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ASIGNATURASRowDeleted != null)) {
                    this.ASIGNATURASRowDeleted(this, new ASIGNATURASRowChangeEvent(((ASIGNATURASRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ASIGNATURASRowDeleting != null)) {
                    this.ASIGNATURASRowDeleting(this, new ASIGNATURASRowChangeEvent(((ASIGNATURASRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveASIGNATURASRow(ASIGNATURASRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ASIGNATURASRow : DataRow {
            
            private ASIGNATURASDataTable tableASIGNATURAS;
            
            internal ASIGNATURASRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableASIGNATURAS = ((ASIGNATURASDataTable)(this.Table));
            }
            
            public System.Decimal GRUPO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableASIGNATURAS.GRUPOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableASIGNATURAS.GRUPOColumn] = value;
                }
            }
            
            public System.Decimal NASIGNATURA {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableASIGNATURAS.NASIGNATURAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableASIGNATURAS.NASIGNATURAColumn] = value;
                }
            }
            
            public string COD_ASIGNATURA {
                get {
                    try {
                        return ((string)(this[this.tableASIGNATURAS.COD_ASIGNATURAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableASIGNATURAS.COD_ASIGNATURAColumn] = value;
                }
            }
            
            public string ASIG_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableASIGNATURAS.ASIG_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableASIGNATURAS.ASIG_CCODColumn] = value;
                }
            }
            
            public string ASIG_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableASIGNATURAS.ASIG_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableASIGNATURAS.ASIG_TDESCColumn] = value;
                }
            }
            
            public System.Decimal ASIG_NHORAS {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableASIGNATURAS.ASIG_NHORASColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableASIGNATURAS.ASIG_NHORASColumn] = value;
                }
            }
            
            public bool IsGRUPONull() {
                return this.IsNull(this.tableASIGNATURAS.GRUPOColumn);
            }
            
            public void SetGRUPONull() {
                this[this.tableASIGNATURAS.GRUPOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNASIGNATURANull() {
                return this.IsNull(this.tableASIGNATURAS.NASIGNATURAColumn);
            }
            
            public void SetNASIGNATURANull() {
                this[this.tableASIGNATURAS.NASIGNATURAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOD_ASIGNATURANull() {
                return this.IsNull(this.tableASIGNATURAS.COD_ASIGNATURAColumn);
            }
            
            public void SetCOD_ASIGNATURANull() {
                this[this.tableASIGNATURAS.COD_ASIGNATURAColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_CCODNull() {
                return this.IsNull(this.tableASIGNATURAS.ASIG_CCODColumn);
            }
            
            public void SetASIG_CCODNull() {
                this[this.tableASIGNATURAS.ASIG_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_TDESCNull() {
                return this.IsNull(this.tableASIGNATURAS.ASIG_TDESCColumn);
            }
            
            public void SetASIG_TDESCNull() {
                this[this.tableASIGNATURAS.ASIG_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_NHORASNull() {
                return this.IsNull(this.tableASIGNATURAS.ASIG_NHORASColumn);
            }
            
            public void SetASIG_NHORASNull() {
                this[this.tableASIGNATURAS.ASIG_NHORASColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ASIGNATURASRowChangeEvent : EventArgs {
            
            private ASIGNATURASRow eventRow;
            
            private DataRowAction eventAction;
            
            public ASIGNATURASRowChangeEvent(ASIGNATURASRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ASIGNATURASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EGRESADOSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnN;
            
            private DataColumn columnGRUPO;
            
            private DataColumn columnPERS_NCORR;
            
            private DataColumn columnNOMBRE;
            
            private DataColumn columnRUT;
            
            private DataColumn columnPERIODO_INGRESO;
            
            private DataColumn columnPERIODO_EGRESO;
            
            private DataColumn columnN1;
            
            private DataColumn columnN2;
            
            private DataColumn columnN3;
            
            private DataColumn columnN4;
            
            private DataColumn columnN5;
            
            private DataColumn columnN6;
            
            private DataColumn columnN7;
            
            private DataColumn columnN8;
            
            private DataColumn columnN9;
            
            private DataColumn columnN10;
            
            private DataColumn columnN11;
            
            private DataColumn columnN12;
            
            private DataColumn columnN13;
            
            private DataColumn columnN14;
            
            private DataColumn columnN15;
            
            private DataColumn columnN16;
            
            private DataColumn columnN17;
            
            private DataColumn columnN18;
            
            private DataColumn columnN19;
            
            private DataColumn columnN20;
            
            private DataColumn columnN21;
            
            private DataColumn columnN22;
            
            private DataColumn columnN23;
            
            private DataColumn columnN24;
            
            private DataColumn columnN25;
            
            private DataColumn columnNEGRESO;
            
            internal EGRESADOSDataTable() : 
                    base("EGRESADOS") {
                this.InitClass();
            }
            
            internal EGRESADOSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NColumn {
                get {
                    return this.columnN;
                }
            }
            
            internal DataColumn GRUPOColumn {
                get {
                    return this.columnGRUPO;
                }
            }
            
            internal DataColumn PERS_NCORRColumn {
                get {
                    return this.columnPERS_NCORR;
                }
            }
            
            internal DataColumn NOMBREColumn {
                get {
                    return this.columnNOMBRE;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn PERIODO_INGRESOColumn {
                get {
                    return this.columnPERIODO_INGRESO;
                }
            }
            
            internal DataColumn PERIODO_EGRESOColumn {
                get {
                    return this.columnPERIODO_EGRESO;
                }
            }
            
            internal DataColumn N1Column {
                get {
                    return this.columnN1;
                }
            }
            
            internal DataColumn N2Column {
                get {
                    return this.columnN2;
                }
            }
            
            internal DataColumn N3Column {
                get {
                    return this.columnN3;
                }
            }
            
            internal DataColumn N4Column {
                get {
                    return this.columnN4;
                }
            }
            
            internal DataColumn N5Column {
                get {
                    return this.columnN5;
                }
            }
            
            internal DataColumn N6Column {
                get {
                    return this.columnN6;
                }
            }
            
            internal DataColumn N7Column {
                get {
                    return this.columnN7;
                }
            }
            
            internal DataColumn N8Column {
                get {
                    return this.columnN8;
                }
            }
            
            internal DataColumn N9Column {
                get {
                    return this.columnN9;
                }
            }
            
            internal DataColumn N10Column {
                get {
                    return this.columnN10;
                }
            }
            
            internal DataColumn N11Column {
                get {
                    return this.columnN11;
                }
            }
            
            internal DataColumn N12Column {
                get {
                    return this.columnN12;
                }
            }
            
            internal DataColumn N13Column {
                get {
                    return this.columnN13;
                }
            }
            
            internal DataColumn N14Column {
                get {
                    return this.columnN14;
                }
            }
            
            internal DataColumn N15Column {
                get {
                    return this.columnN15;
                }
            }
            
            internal DataColumn N16Column {
                get {
                    return this.columnN16;
                }
            }
            
            internal DataColumn N17Column {
                get {
                    return this.columnN17;
                }
            }
            
            internal DataColumn N18Column {
                get {
                    return this.columnN18;
                }
            }
            
            internal DataColumn N19Column {
                get {
                    return this.columnN19;
                }
            }
            
            internal DataColumn N20Column {
                get {
                    return this.columnN20;
                }
            }
            
            internal DataColumn N21Column {
                get {
                    return this.columnN21;
                }
            }
            
            internal DataColumn N22Column {
                get {
                    return this.columnN22;
                }
            }
            
            internal DataColumn N23Column {
                get {
                    return this.columnN23;
                }
            }
            
            internal DataColumn N24Column {
                get {
                    return this.columnN24;
                }
            }
            
            internal DataColumn N25Column {
                get {
                    return this.columnN25;
                }
            }
            
            internal DataColumn NEGRESOColumn {
                get {
                    return this.columnNEGRESO;
                }
            }
            
            public EGRESADOSRow this[int index] {
                get {
                    return ((EGRESADOSRow)(this.Rows[index]));
                }
            }
            
            public event EGRESADOSRowChangeEventHandler EGRESADOSRowChanged;
            
            public event EGRESADOSRowChangeEventHandler EGRESADOSRowChanging;
            
            public event EGRESADOSRowChangeEventHandler EGRESADOSRowDeleted;
            
            public event EGRESADOSRowChangeEventHandler EGRESADOSRowDeleting;
            
            public void AddEGRESADOSRow(EGRESADOSRow row) {
                this.Rows.Add(row);
            }
            
            public EGRESADOSRow AddEGRESADOSRow(
                        System.Decimal N, 
                        System.Decimal GRUPO, 
                        System.Decimal PERS_NCORR, 
                        string NOMBRE, 
                        string RUT, 
                        string PERIODO_INGRESO, 
                        string PERIODO_EGRESO, 
                        string N1, 
                        string N2, 
                        string N3, 
                        string N4, 
                        string N5, 
                        string N6, 
                        string N7, 
                        string N8, 
                        string N9, 
                        string N10, 
                        string N11, 
                        string N12, 
                        string N13, 
                        string N14, 
                        string N15, 
                        string N16, 
                        string N17, 
                        string N18, 
                        string N19, 
                        string N20, 
                        string N21, 
                        string N22, 
                        string N23, 
                        string N24, 
                        string N25, 
                        string NEGRESO) {
                EGRESADOSRow rowEGRESADOSRow = ((EGRESADOSRow)(this.NewRow()));
                rowEGRESADOSRow.ItemArray = new object[] {
                        N,
                        GRUPO,
                        PERS_NCORR,
                        NOMBRE,
                        RUT,
                        PERIODO_INGRESO,
                        PERIODO_EGRESO,
                        N1,
                        N2,
                        N3,
                        N4,
                        N5,
                        N6,
                        N7,
                        N8,
                        N9,
                        N10,
                        N11,
                        N12,
                        N13,
                        N14,
                        N15,
                        N16,
                        N17,
                        N18,
                        N19,
                        N20,
                        N21,
                        N22,
                        N23,
                        N24,
                        N25,
                        NEGRESO};
                this.Rows.Add(rowEGRESADOSRow);
                return rowEGRESADOSRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EGRESADOSDataTable cln = ((EGRESADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EGRESADOSDataTable();
            }
            
            internal void InitVars() {
                this.columnN = this.Columns["N"];
                this.columnGRUPO = this.Columns["GRUPO"];
                this.columnPERS_NCORR = this.Columns["PERS_NCORR"];
                this.columnNOMBRE = this.Columns["NOMBRE"];
                this.columnRUT = this.Columns["RUT"];
                this.columnPERIODO_INGRESO = this.Columns["PERIODO_INGRESO"];
                this.columnPERIODO_EGRESO = this.Columns["PERIODO_EGRESO"];
                this.columnN1 = this.Columns["N1"];
                this.columnN2 = this.Columns["N2"];
                this.columnN3 = this.Columns["N3"];
                this.columnN4 = this.Columns["N4"];
                this.columnN5 = this.Columns["N5"];
                this.columnN6 = this.Columns["N6"];
                this.columnN7 = this.Columns["N7"];
                this.columnN8 = this.Columns["N8"];
                this.columnN9 = this.Columns["N9"];
                this.columnN10 = this.Columns["N10"];
                this.columnN11 = this.Columns["N11"];
                this.columnN12 = this.Columns["N12"];
                this.columnN13 = this.Columns["N13"];
                this.columnN14 = this.Columns["N14"];
                this.columnN15 = this.Columns["N15"];
                this.columnN16 = this.Columns["N16"];
                this.columnN17 = this.Columns["N17"];
                this.columnN18 = this.Columns["N18"];
                this.columnN19 = this.Columns["N19"];
                this.columnN20 = this.Columns["N20"];
                this.columnN21 = this.Columns["N21"];
                this.columnN22 = this.Columns["N22"];
                this.columnN23 = this.Columns["N23"];
                this.columnN24 = this.Columns["N24"];
                this.columnN25 = this.Columns["N25"];
                this.columnNEGRESO = this.Columns["NEGRESO"];
            }
            
            private void InitClass() {
                this.columnN = new DataColumn("N", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN);
                this.columnGRUPO = new DataColumn("GRUPO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGRUPO);
                this.columnPERS_NCORR = new DataColumn("PERS_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NCORR);
                this.columnNOMBRE = new DataColumn("NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE);
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnPERIODO_INGRESO = new DataColumn("PERIODO_INGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO_INGRESO);
                this.columnPERIODO_EGRESO = new DataColumn("PERIODO_EGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO_EGRESO);
                this.columnN1 = new DataColumn("N1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN1);
                this.columnN2 = new DataColumn("N2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN2);
                this.columnN3 = new DataColumn("N3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN3);
                this.columnN4 = new DataColumn("N4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN4);
                this.columnN5 = new DataColumn("N5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN5);
                this.columnN6 = new DataColumn("N6", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN6);
                this.columnN7 = new DataColumn("N7", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN7);
                this.columnN8 = new DataColumn("N8", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN8);
                this.columnN9 = new DataColumn("N9", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN9);
                this.columnN10 = new DataColumn("N10", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN10);
                this.columnN11 = new DataColumn("N11", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN11);
                this.columnN12 = new DataColumn("N12", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN12);
                this.columnN13 = new DataColumn("N13", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN13);
                this.columnN14 = new DataColumn("N14", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN14);
                this.columnN15 = new DataColumn("N15", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN15);
                this.columnN16 = new DataColumn("N16", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN16);
                this.columnN17 = new DataColumn("N17", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN17);
                this.columnN18 = new DataColumn("N18", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN18);
                this.columnN19 = new DataColumn("N19", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN19);
                this.columnN20 = new DataColumn("N20", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN20);
                this.columnN21 = new DataColumn("N21", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN21);
                this.columnN22 = new DataColumn("N22", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN22);
                this.columnN23 = new DataColumn("N23", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN23);
                this.columnN24 = new DataColumn("N24", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN24);
                this.columnN25 = new DataColumn("N25", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN25);
                this.columnNEGRESO = new DataColumn("NEGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNEGRESO);
                this.columnN.ReadOnly = true;
                this.columnGRUPO.ReadOnly = true;
                this.columnPERS_NCORR.ReadOnly = true;
                this.columnNOMBRE.ReadOnly = true;
                this.columnRUT.ReadOnly = true;
                this.columnPERIODO_INGRESO.ReadOnly = true;
                this.columnPERIODO_EGRESO.ReadOnly = true;
                this.columnN1.ReadOnly = true;
                this.columnN2.ReadOnly = true;
                this.columnN3.ReadOnly = true;
                this.columnN4.ReadOnly = true;
                this.columnN5.ReadOnly = true;
                this.columnN6.ReadOnly = true;
                this.columnN7.ReadOnly = true;
                this.columnN8.ReadOnly = true;
                this.columnN9.ReadOnly = true;
                this.columnN10.ReadOnly = true;
                this.columnN11.ReadOnly = true;
                this.columnN12.ReadOnly = true;
                this.columnN13.ReadOnly = true;
                this.columnN14.ReadOnly = true;
                this.columnN15.ReadOnly = true;
                this.columnN16.ReadOnly = true;
                this.columnN17.ReadOnly = true;
                this.columnN18.ReadOnly = true;
                this.columnN19.ReadOnly = true;
                this.columnN20.ReadOnly = true;
                this.columnN21.ReadOnly = true;
                this.columnN22.ReadOnly = true;
                this.columnN23.ReadOnly = true;
                this.columnN24.ReadOnly = true;
                this.columnN25.ReadOnly = true;
                this.columnNEGRESO.ReadOnly = true;
            }
            
            public EGRESADOSRow NewEGRESADOSRow() {
                return ((EGRESADOSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EGRESADOSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EGRESADOSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EGRESADOSRowChanged != null)) {
                    this.EGRESADOSRowChanged(this, new EGRESADOSRowChangeEvent(((EGRESADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EGRESADOSRowChanging != null)) {
                    this.EGRESADOSRowChanging(this, new EGRESADOSRowChangeEvent(((EGRESADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EGRESADOSRowDeleted != null)) {
                    this.EGRESADOSRowDeleted(this, new EGRESADOSRowChangeEvent(((EGRESADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EGRESADOSRowDeleting != null)) {
                    this.EGRESADOSRowDeleting(this, new EGRESADOSRowChangeEvent(((EGRESADOSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEGRESADOSRow(EGRESADOSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EGRESADOSRow : DataRow {
            
            private EGRESADOSDataTable tableEGRESADOS;
            
            internal EGRESADOSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEGRESADOS = ((EGRESADOSDataTable)(this.Table));
            }
            
            public System.Decimal N {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEGRESADOS.NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.NColumn] = value;
                }
            }
            
            public System.Decimal GRUPO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEGRESADOS.GRUPOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.GRUPOColumn] = value;
                }
            }
            
            public System.Decimal PERS_NCORR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEGRESADOS.PERS_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.PERS_NCORRColumn] = value;
                }
            }
            
            public string NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.NOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.NOMBREColumn] = value;
                }
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.RUTColumn] = value;
                }
            }
            
            public string PERIODO_INGRESO {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.PERIODO_INGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.PERIODO_INGRESOColumn] = value;
                }
            }
            
            public string PERIODO_EGRESO {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.PERIODO_EGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.PERIODO_EGRESOColumn] = value;
                }
            }
            
            public string N1 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N1Column] = value;
                }
            }
            
            public string N2 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N2Column] = value;
                }
            }
            
            public string N3 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N3Column] = value;
                }
            }
            
            public string N4 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N4Column] = value;
                }
            }
            
            public string N5 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N5Column] = value;
                }
            }
            
            public string N6 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N6Column] = value;
                }
            }
            
            public string N7 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N7Column] = value;
                }
            }
            
            public string N8 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N8Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N8Column] = value;
                }
            }
            
            public string N9 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N9Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N9Column] = value;
                }
            }
            
            public string N10 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N10Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N10Column] = value;
                }
            }
            
            public string N11 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N11Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N11Column] = value;
                }
            }
            
            public string N12 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N12Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N12Column] = value;
                }
            }
            
            public string N13 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N13Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N13Column] = value;
                }
            }
            
            public string N14 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N14Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N14Column] = value;
                }
            }
            
            public string N15 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N15Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N15Column] = value;
                }
            }
            
            public string N16 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N16Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N16Column] = value;
                }
            }
            
            public string N17 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N17Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N17Column] = value;
                }
            }
            
            public string N18 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N18Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N18Column] = value;
                }
            }
            
            public string N19 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N19Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N19Column] = value;
                }
            }
            
            public string N20 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N20Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N20Column] = value;
                }
            }
            
            public string N21 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N21Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N21Column] = value;
                }
            }
            
            public string N22 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N22Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N22Column] = value;
                }
            }
            
            public string N23 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N23Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N23Column] = value;
                }
            }
            
            public string N24 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N24Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N24Column] = value;
                }
            }
            
            public string N25 {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.N25Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.N25Column] = value;
                }
            }
            
            public string NEGRESO {
                get {
                    try {
                        return ((string)(this[this.tableEGRESADOS.NEGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEGRESADOS.NEGRESOColumn] = value;
                }
            }
            
            public bool IsNNull() {
                return this.IsNull(this.tableEGRESADOS.NColumn);
            }
            
            public void SetNNull() {
                this[this.tableEGRESADOS.NColumn] = System.Convert.DBNull;
            }
            
            public bool IsGRUPONull() {
                return this.IsNull(this.tableEGRESADOS.GRUPOColumn);
            }
            
            public void SetGRUPONull() {
                this[this.tableEGRESADOS.GRUPOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_NCORRNull() {
                return this.IsNull(this.tableEGRESADOS.PERS_NCORRColumn);
            }
            
            public void SetPERS_NCORRNull() {
                this[this.tableEGRESADOS.PERS_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRENull() {
                return this.IsNull(this.tableEGRESADOS.NOMBREColumn);
            }
            
            public void SetNOMBRENull() {
                this[this.tableEGRESADOS.NOMBREColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.tableEGRESADOS.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.tableEGRESADOS.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODO_INGRESONull() {
                return this.IsNull(this.tableEGRESADOS.PERIODO_INGRESOColumn);
            }
            
            public void SetPERIODO_INGRESONull() {
                this[this.tableEGRESADOS.PERIODO_INGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODO_EGRESONull() {
                return this.IsNull(this.tableEGRESADOS.PERIODO_EGRESOColumn);
            }
            
            public void SetPERIODO_EGRESONull() {
                this[this.tableEGRESADOS.PERIODO_EGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsN1Null() {
                return this.IsNull(this.tableEGRESADOS.N1Column);
            }
            
            public void SetN1Null() {
                this[this.tableEGRESADOS.N1Column] = System.Convert.DBNull;
            }
            
            public bool IsN2Null() {
                return this.IsNull(this.tableEGRESADOS.N2Column);
            }
            
            public void SetN2Null() {
                this[this.tableEGRESADOS.N2Column] = System.Convert.DBNull;
            }
            
            public bool IsN3Null() {
                return this.IsNull(this.tableEGRESADOS.N3Column);
            }
            
            public void SetN3Null() {
                this[this.tableEGRESADOS.N3Column] = System.Convert.DBNull;
            }
            
            public bool IsN4Null() {
                return this.IsNull(this.tableEGRESADOS.N4Column);
            }
            
            public void SetN4Null() {
                this[this.tableEGRESADOS.N4Column] = System.Convert.DBNull;
            }
            
            public bool IsN5Null() {
                return this.IsNull(this.tableEGRESADOS.N5Column);
            }
            
            public void SetN5Null() {
                this[this.tableEGRESADOS.N5Column] = System.Convert.DBNull;
            }
            
            public bool IsN6Null() {
                return this.IsNull(this.tableEGRESADOS.N6Column);
            }
            
            public void SetN6Null() {
                this[this.tableEGRESADOS.N6Column] = System.Convert.DBNull;
            }
            
            public bool IsN7Null() {
                return this.IsNull(this.tableEGRESADOS.N7Column);
            }
            
            public void SetN7Null() {
                this[this.tableEGRESADOS.N7Column] = System.Convert.DBNull;
            }
            
            public bool IsN8Null() {
                return this.IsNull(this.tableEGRESADOS.N8Column);
            }
            
            public void SetN8Null() {
                this[this.tableEGRESADOS.N8Column] = System.Convert.DBNull;
            }
            
            public bool IsN9Null() {
                return this.IsNull(this.tableEGRESADOS.N9Column);
            }
            
            public void SetN9Null() {
                this[this.tableEGRESADOS.N9Column] = System.Convert.DBNull;
            }
            
            public bool IsN10Null() {
                return this.IsNull(this.tableEGRESADOS.N10Column);
            }
            
            public void SetN10Null() {
                this[this.tableEGRESADOS.N10Column] = System.Convert.DBNull;
            }
            
            public bool IsN11Null() {
                return this.IsNull(this.tableEGRESADOS.N11Column);
            }
            
            public void SetN11Null() {
                this[this.tableEGRESADOS.N11Column] = System.Convert.DBNull;
            }
            
            public bool IsN12Null() {
                return this.IsNull(this.tableEGRESADOS.N12Column);
            }
            
            public void SetN12Null() {
                this[this.tableEGRESADOS.N12Column] = System.Convert.DBNull;
            }
            
            public bool IsN13Null() {
                return this.IsNull(this.tableEGRESADOS.N13Column);
            }
            
            public void SetN13Null() {
                this[this.tableEGRESADOS.N13Column] = System.Convert.DBNull;
            }
            
            public bool IsN14Null() {
                return this.IsNull(this.tableEGRESADOS.N14Column);
            }
            
            public void SetN14Null() {
                this[this.tableEGRESADOS.N14Column] = System.Convert.DBNull;
            }
            
            public bool IsN15Null() {
                return this.IsNull(this.tableEGRESADOS.N15Column);
            }
            
            public void SetN15Null() {
                this[this.tableEGRESADOS.N15Column] = System.Convert.DBNull;
            }
            
            public bool IsN16Null() {
                return this.IsNull(this.tableEGRESADOS.N16Column);
            }
            
            public void SetN16Null() {
                this[this.tableEGRESADOS.N16Column] = System.Convert.DBNull;
            }
            
            public bool IsN17Null() {
                return this.IsNull(this.tableEGRESADOS.N17Column);
            }
            
            public void SetN17Null() {
                this[this.tableEGRESADOS.N17Column] = System.Convert.DBNull;
            }
            
            public bool IsN18Null() {
                return this.IsNull(this.tableEGRESADOS.N18Column);
            }
            
            public void SetN18Null() {
                this[this.tableEGRESADOS.N18Column] = System.Convert.DBNull;
            }
            
            public bool IsN19Null() {
                return this.IsNull(this.tableEGRESADOS.N19Column);
            }
            
            public void SetN19Null() {
                this[this.tableEGRESADOS.N19Column] = System.Convert.DBNull;
            }
            
            public bool IsN20Null() {
                return this.IsNull(this.tableEGRESADOS.N20Column);
            }
            
            public void SetN20Null() {
                this[this.tableEGRESADOS.N20Column] = System.Convert.DBNull;
            }
            
            public bool IsN21Null() {
                return this.IsNull(this.tableEGRESADOS.N21Column);
            }
            
            public void SetN21Null() {
                this[this.tableEGRESADOS.N21Column] = System.Convert.DBNull;
            }
            
            public bool IsN22Null() {
                return this.IsNull(this.tableEGRESADOS.N22Column);
            }
            
            public void SetN22Null() {
                this[this.tableEGRESADOS.N22Column] = System.Convert.DBNull;
            }
            
            public bool IsN23Null() {
                return this.IsNull(this.tableEGRESADOS.N23Column);
            }
            
            public void SetN23Null() {
                this[this.tableEGRESADOS.N23Column] = System.Convert.DBNull;
            }
            
            public bool IsN24Null() {
                return this.IsNull(this.tableEGRESADOS.N24Column);
            }
            
            public void SetN24Null() {
                this[this.tableEGRESADOS.N24Column] = System.Convert.DBNull;
            }
            
            public bool IsN25Null() {
                return this.IsNull(this.tableEGRESADOS.N25Column);
            }
            
            public void SetN25Null() {
                this[this.tableEGRESADOS.N25Column] = System.Convert.DBNull;
            }
            
            public bool IsNEGRESONull() {
                return this.IsNull(this.tableEGRESADOS.NEGRESOColumn);
            }
            
            public void SetNEGRESONull() {
                this[this.tableEGRESADOS.NEGRESOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EGRESADOSRowChangeEvent : EventArgs {
            
            private EGRESADOSRow eventRow;
            
            private DataRowAction eventAction;
            
            public EGRESADOSRowChangeEvent(EGRESADOSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EGRESADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADODataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnLINEA1;
            
            private DataColumn columnLINEA2;
            
            private DataColumn columnLINEA3;
            
            private DataColumn columnLINEA4;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnACTI_FEMISION;
            
            private DataColumn columnESPE_TDESC;
            
            private DataColumn columnCODIGO;
            
            private DataColumn columnACTI_NCORR;
            
            private DataColumn columnESPE_CCOD;
            
            private DataColumn columnCARR_CCOD;
            
            internal ENCABEZADODataTable() : 
                    base("ENCABEZADO") {
                this.InitClass();
            }
            
            internal ENCABEZADODataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn LINEA1Column {
                get {
                    return this.columnLINEA1;
                }
            }
            
            internal DataColumn LINEA2Column {
                get {
                    return this.columnLINEA2;
                }
            }
            
            internal DataColumn LINEA3Column {
                get {
                    return this.columnLINEA3;
                }
            }
            
            internal DataColumn LINEA4Column {
                get {
                    return this.columnLINEA4;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn ACTI_FEMISIONColumn {
                get {
                    return this.columnACTI_FEMISION;
                }
            }
            
            internal DataColumn ESPE_TDESCColumn {
                get {
                    return this.columnESPE_TDESC;
                }
            }
            
            internal DataColumn CODIGOColumn {
                get {
                    return this.columnCODIGO;
                }
            }
            
            internal DataColumn ACTI_NCORRColumn {
                get {
                    return this.columnACTI_NCORR;
                }
            }
            
            internal DataColumn ESPE_CCODColumn {
                get {
                    return this.columnESPE_CCOD;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            public ENCABEZADORow this[int index] {
                get {
                    return ((ENCABEZADORow)(this.Rows[index]));
                }
            }
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanged;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanging;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleted;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleting;
            
            public void AddENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Add(row);
            }
            
            public ENCABEZADORow AddENCABEZADORow(string LINEA1, string LINEA2, string LINEA3, string LINEA4, string CARR_TDESC, System.DateTime ACTI_FEMISION, string ESPE_TDESC, string CODIGO, System.Decimal ACTI_NCORR, string ESPE_CCOD, string CARR_CCOD) {
                ENCABEZADORow rowENCABEZADORow = ((ENCABEZADORow)(this.NewRow()));
                rowENCABEZADORow.ItemArray = new object[] {
                        LINEA1,
                        LINEA2,
                        LINEA3,
                        LINEA4,
                        CARR_TDESC,
                        ACTI_FEMISION,
                        ESPE_TDESC,
                        CODIGO,
                        ACTI_NCORR,
                        ESPE_CCOD,
                        CARR_CCOD};
                this.Rows.Add(rowENCABEZADORow);
                return rowENCABEZADORow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ENCABEZADODataTable cln = ((ENCABEZADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ENCABEZADODataTable();
            }
            
            internal void InitVars() {
                this.columnLINEA1 = this.Columns["LINEA1"];
                this.columnLINEA2 = this.Columns["LINEA2"];
                this.columnLINEA3 = this.Columns["LINEA3"];
                this.columnLINEA4 = this.Columns["LINEA4"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnACTI_FEMISION = this.Columns["ACTI_FEMISION"];
                this.columnESPE_TDESC = this.Columns["ESPE_TDESC"];
                this.columnCODIGO = this.Columns["CODIGO"];
                this.columnACTI_NCORR = this.Columns["ACTI_NCORR"];
                this.columnESPE_CCOD = this.Columns["ESPE_CCOD"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
            }
            
            private void InitClass() {
                this.columnLINEA1 = new DataColumn("LINEA1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA1);
                this.columnLINEA2 = new DataColumn("LINEA2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA2);
                this.columnLINEA3 = new DataColumn("LINEA3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA3);
                this.columnLINEA4 = new DataColumn("LINEA4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLINEA4);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnACTI_FEMISION = new DataColumn("ACTI_FEMISION", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACTI_FEMISION);
                this.columnESPE_TDESC = new DataColumn("ESPE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_TDESC);
                this.columnCODIGO = new DataColumn("CODIGO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODIGO);
                this.columnACTI_NCORR = new DataColumn("ACTI_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACTI_NCORR);
                this.columnESPE_CCOD = new DataColumn("ESPE_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_CCOD);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnLINEA1.ReadOnly = true;
                this.columnLINEA2.ReadOnly = true;
                this.columnLINEA3.ReadOnly = true;
                this.columnLINEA4.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnACTI_FEMISION.ReadOnly = true;
                this.columnESPE_TDESC.ReadOnly = true;
                this.columnCODIGO.ReadOnly = true;
                this.columnACTI_NCORR.ReadOnly = true;
                this.columnESPE_CCOD.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
            }
            
            public ENCABEZADORow NewENCABEZADORow() {
                return ((ENCABEZADORow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ENCABEZADORow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ENCABEZADORow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENCABEZADORowChanged != null)) {
                    this.ENCABEZADORowChanged(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENCABEZADORowChanging != null)) {
                    this.ENCABEZADORowChanging(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENCABEZADORowDeleted != null)) {
                    this.ENCABEZADORowDeleted(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENCABEZADORowDeleting != null)) {
                    this.ENCABEZADORowDeleting(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORow : DataRow {
            
            private ENCABEZADODataTable tableENCABEZADO;
            
            internal ENCABEZADORow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Table));
            }
            
            public string LINEA1 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA1Column] = value;
                }
            }
            
            public string LINEA2 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA2Column] = value;
                }
            }
            
            public string LINEA3 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA3Column] = value;
                }
            }
            
            public string LINEA4 {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.LINEA4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.LINEA4Column] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CARR_TDESCColumn] = value;
                }
            }
            
            public System.DateTime ACTI_FEMISION {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableENCABEZADO.ACTI_FEMISIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ACTI_FEMISIONColumn] = value;
                }
            }
            
            public string ESPE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ESPE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ESPE_TDESCColumn] = value;
                }
            }
            
            public string CODIGO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CODIGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CODIGOColumn] = value;
                }
            }
            
            public System.Decimal ACTI_NCORR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableENCABEZADO.ACTI_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ACTI_NCORRColumn] = value;
                }
            }
            
            public string ESPE_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ESPE_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ESPE_CCODColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CARR_CCODColumn] = value;
                }
            }
            
            public bool IsLINEA1Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA1Column);
            }
            
            public void SetLINEA1Null() {
                this[this.tableENCABEZADO.LINEA1Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA2Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA2Column);
            }
            
            public void SetLINEA2Null() {
                this[this.tableENCABEZADO.LINEA2Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA3Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA3Column);
            }
            
            public void SetLINEA3Null() {
                this[this.tableENCABEZADO.LINEA3Column] = System.Convert.DBNull;
            }
            
            public bool IsLINEA4Null() {
                return this.IsNull(this.tableENCABEZADO.LINEA4Column);
            }
            
            public void SetLINEA4Null() {
                this[this.tableENCABEZADO.LINEA4Column] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableENCABEZADO.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsACTI_FEMISIONNull() {
                return this.IsNull(this.tableENCABEZADO.ACTI_FEMISIONColumn);
            }
            
            public void SetACTI_FEMISIONNull() {
                this[this.tableENCABEZADO.ACTI_FEMISIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.ESPE_TDESCColumn);
            }
            
            public void SetESPE_TDESCNull() {
                this[this.tableENCABEZADO.ESPE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCODIGONull() {
                return this.IsNull(this.tableENCABEZADO.CODIGOColumn);
            }
            
            public void SetCODIGONull() {
                this[this.tableENCABEZADO.CODIGOColumn] = System.Convert.DBNull;
            }
            
            public bool IsACTI_NCORRNull() {
                return this.IsNull(this.tableENCABEZADO.ACTI_NCORRColumn);
            }
            
            public void SetACTI_NCORRNull() {
                this[this.tableENCABEZADO.ACTI_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.ESPE_CCODColumn);
            }
            
            public void SetESPE_CCODNull() {
                this[this.tableENCABEZADO.ESPE_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tableENCABEZADO.CARR_CCODColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORowChangeEvent : EventArgs {
            
            private ENCABEZADORow eventRow;
            
            private DataRowAction eventAction;
            
            public ENCABEZADORowChangeEvent(ENCABEZADORow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ENCABEZADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
