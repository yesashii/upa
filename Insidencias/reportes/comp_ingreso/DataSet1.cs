//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace comp_ingreso {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private T_Folio_RefDataTable tableT_Folio_Ref;
        
        private T_BeneficiosDataTable tableT_Beneficios;
        
        private T_CuotasDataTable tableT_Cuotas;
        
        private T_ContratoDataTable tableT_Contrato;
        
        private _TableDataTable table_Table;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_Folio_Ref"] != null)) {
                    this.Tables.Add(new T_Folio_RefDataTable(ds.Tables["T_Folio_Ref"]));
                }
                if ((ds.Tables["T_Beneficios"] != null)) {
                    this.Tables.Add(new T_BeneficiosDataTable(ds.Tables["T_Beneficios"]));
                }
                if ((ds.Tables["T_Cuotas"] != null)) {
                    this.Tables.Add(new T_CuotasDataTable(ds.Tables["T_Cuotas"]));
                }
                if ((ds.Tables["T_Contrato"] != null)) {
                    this.Tables.Add(new T_ContratoDataTable(ds.Tables["T_Contrato"]));
                }
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_Folio_RefDataTable T_Folio_Ref {
            get {
                return this.tableT_Folio_Ref;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_BeneficiosDataTable T_Beneficios {
            get {
                return this.tableT_Beneficios;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CuotasDataTable T_Cuotas {
            get {
                return this.tableT_Cuotas;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_ContratoDataTable T_Contrato {
            get {
                return this.tableT_Contrato;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["T_Folio_Ref"] != null)) {
                this.Tables.Add(new T_Folio_RefDataTable(ds.Tables["T_Folio_Ref"]));
            }
            if ((ds.Tables["T_Beneficios"] != null)) {
                this.Tables.Add(new T_BeneficiosDataTable(ds.Tables["T_Beneficios"]));
            }
            if ((ds.Tables["T_Cuotas"] != null)) {
                this.Tables.Add(new T_CuotasDataTable(ds.Tables["T_Cuotas"]));
            }
            if ((ds.Tables["T_Contrato"] != null)) {
                this.Tables.Add(new T_ContratoDataTable(ds.Tables["T_Contrato"]));
            }
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableT_Folio_Ref = ((T_Folio_RefDataTable)(this.Tables["T_Folio_Ref"]));
            if ((this.tableT_Folio_Ref != null)) {
                this.tableT_Folio_Ref.InitVars();
            }
            this.tableT_Beneficios = ((T_BeneficiosDataTable)(this.Tables["T_Beneficios"]));
            if ((this.tableT_Beneficios != null)) {
                this.tableT_Beneficios.InitVars();
            }
            this.tableT_Cuotas = ((T_CuotasDataTable)(this.Tables["T_Cuotas"]));
            if ((this.tableT_Cuotas != null)) {
                this.tableT_Cuotas.InitVars();
            }
            this.tableT_Contrato = ((T_ContratoDataTable)(this.Tables["T_Contrato"]));
            if ((this.tableT_Contrato != null)) {
                this.tableT_Contrato.InitVars();
            }
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableT_Folio_Ref = new T_Folio_RefDataTable();
            this.Tables.Add(this.tableT_Folio_Ref);
            this.tableT_Beneficios = new T_BeneficiosDataTable();
            this.Tables.Add(this.tableT_Beneficios);
            this.tableT_Cuotas = new T_CuotasDataTable();
            this.Tables.Add(this.tableT_Cuotas);
            this.tableT_Contrato = new T_ContratoDataTable();
            this.Tables.Add(this.tableT_Contrato);
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
        }
        
        private bool ShouldSerializeT_Folio_Ref() {
            return false;
        }
        
        private bool ShouldSerializeT_Beneficios() {
            return false;
        }
        
        private bool ShouldSerializeT_Cuotas() {
            return false;
        }
        
        private bool ShouldSerializeT_Contrato() {
            return false;
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void T_Folio_RefRowChangeEventHandler(object sender, T_Folio_RefRowChangeEvent e);
        
        public delegate void T_BeneficiosRowChangeEventHandler(object sender, T_BeneficiosRowChangeEvent e);
        
        public delegate void T_CuotasRowChangeEventHandler(object sender, T_CuotasRowChangeEvent e);
        
        public delegate void T_ContratoRowChangeEventHandler(object sender, T_ContratoRowChangeEvent e);
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_Folio_RefDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCONT_NCORR;
            
            private DataColumn columnINGR_NFOLIO_REFERENCIA;
            
            private DataColumn columningr_ncorrelativo_caja;
            
            internal T_Folio_RefDataTable() : 
                    base("T_Folio_Ref") {
                this.InitClass();
            }
            
            internal T_Folio_RefDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CONT_NCORRColumn {
                get {
                    return this.columnCONT_NCORR;
                }
            }
            
            internal DataColumn INGR_NFOLIO_REFERENCIAColumn {
                get {
                    return this.columnINGR_NFOLIO_REFERENCIA;
                }
            }
            
            internal DataColumn ingr_ncorrelativo_cajaColumn {
                get {
                    return this.columningr_ncorrelativo_caja;
                }
            }
            
            public T_Folio_RefRow this[int index] {
                get {
                    return ((T_Folio_RefRow)(this.Rows[index]));
                }
            }
            
            public event T_Folio_RefRowChangeEventHandler T_Folio_RefRowChanged;
            
            public event T_Folio_RefRowChangeEventHandler T_Folio_RefRowChanging;
            
            public event T_Folio_RefRowChangeEventHandler T_Folio_RefRowDeleted;
            
            public event T_Folio_RefRowChangeEventHandler T_Folio_RefRowDeleting;
            
            public void AddT_Folio_RefRow(T_Folio_RefRow row) {
                this.Rows.Add(row);
            }
            
            public T_Folio_RefRow AddT_Folio_RefRow(string CONT_NCORR, string INGR_NFOLIO_REFERENCIA, string ingr_ncorrelativo_caja) {
                T_Folio_RefRow rowT_Folio_RefRow = ((T_Folio_RefRow)(this.NewRow()));
                rowT_Folio_RefRow.ItemArray = new object[] {
                        CONT_NCORR,
                        INGR_NFOLIO_REFERENCIA,
                        ingr_ncorrelativo_caja};
                this.Rows.Add(rowT_Folio_RefRow);
                return rowT_Folio_RefRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_Folio_RefDataTable cln = ((T_Folio_RefDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_Folio_RefDataTable();
            }
            
            internal void InitVars() {
                this.columnCONT_NCORR = this.Columns["CONT_NCORR"];
                this.columnINGR_NFOLIO_REFERENCIA = this.Columns["INGR_NFOLIO_REFERENCIA"];
                this.columningr_ncorrelativo_caja = this.Columns["ingr_ncorrelativo_caja"];
            }
            
            private void InitClass() {
                this.columnCONT_NCORR = new DataColumn("CONT_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONT_NCORR);
                this.columnINGR_NFOLIO_REFERENCIA = new DataColumn("INGR_NFOLIO_REFERENCIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINGR_NFOLIO_REFERENCIA);
                this.columningr_ncorrelativo_caja = new DataColumn("ingr_ncorrelativo_caja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columningr_ncorrelativo_caja);
                this.columnCONT_NCORR.ReadOnly = true;
                this.columnINGR_NFOLIO_REFERENCIA.ReadOnly = true;
                this.columningr_ncorrelativo_caja.ReadOnly = true;
            }
            
            public T_Folio_RefRow NewT_Folio_RefRow() {
                return ((T_Folio_RefRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_Folio_RefRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_Folio_RefRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_Folio_RefRowChanged != null)) {
                    this.T_Folio_RefRowChanged(this, new T_Folio_RefRowChangeEvent(((T_Folio_RefRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_Folio_RefRowChanging != null)) {
                    this.T_Folio_RefRowChanging(this, new T_Folio_RefRowChangeEvent(((T_Folio_RefRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_Folio_RefRowDeleted != null)) {
                    this.T_Folio_RefRowDeleted(this, new T_Folio_RefRowChangeEvent(((T_Folio_RefRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_Folio_RefRowDeleting != null)) {
                    this.T_Folio_RefRowDeleting(this, new T_Folio_RefRowChangeEvent(((T_Folio_RefRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_Folio_RefRow(T_Folio_RefRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_Folio_RefRow : DataRow {
            
            private T_Folio_RefDataTable tableT_Folio_Ref;
            
            internal T_Folio_RefRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Folio_Ref = ((T_Folio_RefDataTable)(this.Table));
            }
            
            public string CONT_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Folio_Ref.CONT_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Folio_Ref.CONT_NCORRColumn] = value;
                }
            }
            
            public string INGR_NFOLIO_REFERENCIA {
                get {
                    try {
                        return ((string)(this[this.tableT_Folio_Ref.INGR_NFOLIO_REFERENCIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Folio_Ref.INGR_NFOLIO_REFERENCIAColumn] = value;
                }
            }
            
            public string ingr_ncorrelativo_caja {
                get {
                    try {
                        return ((string)(this[this.tableT_Folio_Ref.ingr_ncorrelativo_cajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Folio_Ref.ingr_ncorrelativo_cajaColumn] = value;
                }
            }
            
            public bool IsCONT_NCORRNull() {
                return this.IsNull(this.tableT_Folio_Ref.CONT_NCORRColumn);
            }
            
            public void SetCONT_NCORRNull() {
                this[this.tableT_Folio_Ref.CONT_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsINGR_NFOLIO_REFERENCIANull() {
                return this.IsNull(this.tableT_Folio_Ref.INGR_NFOLIO_REFERENCIAColumn);
            }
            
            public void SetINGR_NFOLIO_REFERENCIANull() {
                this[this.tableT_Folio_Ref.INGR_NFOLIO_REFERENCIAColumn] = System.Convert.DBNull;
            }
            
            public bool Isingr_ncorrelativo_cajaNull() {
                return this.IsNull(this.tableT_Folio_Ref.ingr_ncorrelativo_cajaColumn);
            }
            
            public void Setingr_ncorrelativo_cajaNull() {
                this[this.tableT_Folio_Ref.ingr_ncorrelativo_cajaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_Folio_RefRowChangeEvent : EventArgs {
            
            private T_Folio_RefRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_Folio_RefRowChangeEvent(T_Folio_RefRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_Folio_RefRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_BeneficiosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCOMP_NDOCTO;
            
            private DataColumn columnTCOM_CCOD;
            
            private DataColumn columnITEM;
            
            private DataColumn columnFECHA_BENEFICIO;
            
            private DataColumn columnMONTO;
            
            private DataColumn columnPORCENTAJE;
            
            internal T_BeneficiosDataTable() : 
                    base("T_Beneficios") {
                this.InitClass();
            }
            
            internal T_BeneficiosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn COMP_NDOCTOColumn {
                get {
                    return this.columnCOMP_NDOCTO;
                }
            }
            
            internal DataColumn TCOM_CCODColumn {
                get {
                    return this.columnTCOM_CCOD;
                }
            }
            
            internal DataColumn ITEMColumn {
                get {
                    return this.columnITEM;
                }
            }
            
            internal DataColumn FECHA_BENEFICIOColumn {
                get {
                    return this.columnFECHA_BENEFICIO;
                }
            }
            
            internal DataColumn MONTOColumn {
                get {
                    return this.columnMONTO;
                }
            }
            
            internal DataColumn PORCENTAJEColumn {
                get {
                    return this.columnPORCENTAJE;
                }
            }
            
            public T_BeneficiosRow this[int index] {
                get {
                    return ((T_BeneficiosRow)(this.Rows[index]));
                }
            }
            
            public event T_BeneficiosRowChangeEventHandler T_BeneficiosRowChanged;
            
            public event T_BeneficiosRowChangeEventHandler T_BeneficiosRowChanging;
            
            public event T_BeneficiosRowChangeEventHandler T_BeneficiosRowDeleted;
            
            public event T_BeneficiosRowChangeEventHandler T_BeneficiosRowDeleting;
            
            public void AddT_BeneficiosRow(T_BeneficiosRow row) {
                this.Rows.Add(row);
            }
            
            public T_BeneficiosRow AddT_BeneficiosRow(string COMP_NDOCTO, string TCOM_CCOD, string ITEM, string FECHA_BENEFICIO, string MONTO, string PORCENTAJE) {
                T_BeneficiosRow rowT_BeneficiosRow = ((T_BeneficiosRow)(this.NewRow()));
                rowT_BeneficiosRow.ItemArray = new object[] {
                        COMP_NDOCTO,
                        TCOM_CCOD,
                        ITEM,
                        FECHA_BENEFICIO,
                        MONTO,
                        PORCENTAJE};
                this.Rows.Add(rowT_BeneficiosRow);
                return rowT_BeneficiosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_BeneficiosDataTable cln = ((T_BeneficiosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_BeneficiosDataTable();
            }
            
            internal void InitVars() {
                this.columnCOMP_NDOCTO = this.Columns["COMP_NDOCTO"];
                this.columnTCOM_CCOD = this.Columns["TCOM_CCOD"];
                this.columnITEM = this.Columns["ITEM"];
                this.columnFECHA_BENEFICIO = this.Columns["FECHA_BENEFICIO"];
                this.columnMONTO = this.Columns["MONTO"];
                this.columnPORCENTAJE = this.Columns["PORCENTAJE"];
            }
            
            private void InitClass() {
                this.columnCOMP_NDOCTO = new DataColumn("COMP_NDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMP_NDOCTO);
                this.columnTCOM_CCOD = new DataColumn("TCOM_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTCOM_CCOD);
                this.columnITEM = new DataColumn("ITEM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnITEM);
                this.columnFECHA_BENEFICIO = new DataColumn("FECHA_BENEFICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_BENEFICIO);
                this.columnMONTO = new DataColumn("MONTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO);
                this.columnPORCENTAJE = new DataColumn("PORCENTAJE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPORCENTAJE);
                this.columnCOMP_NDOCTO.ReadOnly = true;
                this.columnTCOM_CCOD.ReadOnly = true;
                this.columnITEM.ReadOnly = true;
                this.columnFECHA_BENEFICIO.ReadOnly = true;
                this.columnMONTO.ReadOnly = true;
                this.columnPORCENTAJE.ReadOnly = true;
            }
            
            public T_BeneficiosRow NewT_BeneficiosRow() {
                return ((T_BeneficiosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_BeneficiosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_BeneficiosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_BeneficiosRowChanged != null)) {
                    this.T_BeneficiosRowChanged(this, new T_BeneficiosRowChangeEvent(((T_BeneficiosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_BeneficiosRowChanging != null)) {
                    this.T_BeneficiosRowChanging(this, new T_BeneficiosRowChangeEvent(((T_BeneficiosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_BeneficiosRowDeleted != null)) {
                    this.T_BeneficiosRowDeleted(this, new T_BeneficiosRowChangeEvent(((T_BeneficiosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_BeneficiosRowDeleting != null)) {
                    this.T_BeneficiosRowDeleting(this, new T_BeneficiosRowChangeEvent(((T_BeneficiosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_BeneficiosRow(T_BeneficiosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_BeneficiosRow : DataRow {
            
            private T_BeneficiosDataTable tableT_Beneficios;
            
            internal T_BeneficiosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Beneficios = ((T_BeneficiosDataTable)(this.Table));
            }
            
            public string COMP_NDOCTO {
                get {
                    try {
                        return ((string)(this[this.tableT_Beneficios.COMP_NDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Beneficios.COMP_NDOCTOColumn] = value;
                }
            }
            
            public string TCOM_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Beneficios.TCOM_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Beneficios.TCOM_CCODColumn] = value;
                }
            }
            
            public string ITEM {
                get {
                    try {
                        return ((string)(this[this.tableT_Beneficios.ITEMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Beneficios.ITEMColumn] = value;
                }
            }
            
            public string FECHA_BENEFICIO {
                get {
                    try {
                        return ((string)(this[this.tableT_Beneficios.FECHA_BENEFICIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Beneficios.FECHA_BENEFICIOColumn] = value;
                }
            }
            
            public string MONTO {
                get {
                    try {
                        return ((string)(this[this.tableT_Beneficios.MONTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Beneficios.MONTOColumn] = value;
                }
            }
            
            public string PORCENTAJE {
                get {
                    try {
                        return ((string)(this[this.tableT_Beneficios.PORCENTAJEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Beneficios.PORCENTAJEColumn] = value;
                }
            }
            
            public bool IsCOMP_NDOCTONull() {
                return this.IsNull(this.tableT_Beneficios.COMP_NDOCTOColumn);
            }
            
            public void SetCOMP_NDOCTONull() {
                this[this.tableT_Beneficios.COMP_NDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTCOM_CCODNull() {
                return this.IsNull(this.tableT_Beneficios.TCOM_CCODColumn);
            }
            
            public void SetTCOM_CCODNull() {
                this[this.tableT_Beneficios.TCOM_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsITEMNull() {
                return this.IsNull(this.tableT_Beneficios.ITEMColumn);
            }
            
            public void SetITEMNull() {
                this[this.tableT_Beneficios.ITEMColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_BENEFICIONull() {
                return this.IsNull(this.tableT_Beneficios.FECHA_BENEFICIOColumn);
            }
            
            public void SetFECHA_BENEFICIONull() {
                this[this.tableT_Beneficios.FECHA_BENEFICIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTONull() {
                return this.IsNull(this.tableT_Beneficios.MONTOColumn);
            }
            
            public void SetMONTONull() {
                this[this.tableT_Beneficios.MONTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPORCENTAJENull() {
                return this.IsNull(this.tableT_Beneficios.PORCENTAJEColumn);
            }
            
            public void SetPORCENTAJENull() {
                this[this.tableT_Beneficios.PORCENTAJEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_BeneficiosRowChangeEvent : EventArgs {
            
            private T_BeneficiosRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_BeneficiosRowChangeEvent(T_BeneficiosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_BeneficiosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CuotasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCONT_NCORR;
            
            private DataColumn columnINGR_NCORR;
            
            private DataColumn columnF_EMISION;
            
            private DataColumn columnMONTO;
            
            private DataColumn columnDING_NDOCTO;
            
            private DataColumn columnTIPO_DOC;
            
            private DataColumn columnBANCO;
            
            private DataColumn columnPLAZA;
            
            private DataColumn columnF_VENCIMIENTO;
            
            internal T_CuotasDataTable() : 
                    base("T_Cuotas") {
                this.InitClass();
            }
            
            internal T_CuotasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CONT_NCORRColumn {
                get {
                    return this.columnCONT_NCORR;
                }
            }
            
            internal DataColumn INGR_NCORRColumn {
                get {
                    return this.columnINGR_NCORR;
                }
            }
            
            internal DataColumn F_EMISIONColumn {
                get {
                    return this.columnF_EMISION;
                }
            }
            
            internal DataColumn MONTOColumn {
                get {
                    return this.columnMONTO;
                }
            }
            
            internal DataColumn DING_NDOCTOColumn {
                get {
                    return this.columnDING_NDOCTO;
                }
            }
            
            internal DataColumn TIPO_DOCColumn {
                get {
                    return this.columnTIPO_DOC;
                }
            }
            
            internal DataColumn BANCOColumn {
                get {
                    return this.columnBANCO;
                }
            }
            
            internal DataColumn PLAZAColumn {
                get {
                    return this.columnPLAZA;
                }
            }
            
            internal DataColumn F_VENCIMIENTOColumn {
                get {
                    return this.columnF_VENCIMIENTO;
                }
            }
            
            public T_CuotasRow this[int index] {
                get {
                    return ((T_CuotasRow)(this.Rows[index]));
                }
            }
            
            public event T_CuotasRowChangeEventHandler T_CuotasRowChanged;
            
            public event T_CuotasRowChangeEventHandler T_CuotasRowChanging;
            
            public event T_CuotasRowChangeEventHandler T_CuotasRowDeleted;
            
            public event T_CuotasRowChangeEventHandler T_CuotasRowDeleting;
            
            public void AddT_CuotasRow(T_CuotasRow row) {
                this.Rows.Add(row);
            }
            
            public T_CuotasRow AddT_CuotasRow(string CONT_NCORR, string INGR_NCORR, string F_EMISION, string MONTO, string DING_NDOCTO, string TIPO_DOC, string BANCO, string PLAZA, string F_VENCIMIENTO) {
                T_CuotasRow rowT_CuotasRow = ((T_CuotasRow)(this.NewRow()));
                rowT_CuotasRow.ItemArray = new object[] {
                        CONT_NCORR,
                        INGR_NCORR,
                        F_EMISION,
                        MONTO,
                        DING_NDOCTO,
                        TIPO_DOC,
                        BANCO,
                        PLAZA,
                        F_VENCIMIENTO};
                this.Rows.Add(rowT_CuotasRow);
                return rowT_CuotasRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_CuotasDataTable cln = ((T_CuotasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_CuotasDataTable();
            }
            
            internal void InitVars() {
                this.columnCONT_NCORR = this.Columns["CONT_NCORR"];
                this.columnINGR_NCORR = this.Columns["INGR_NCORR"];
                this.columnF_EMISION = this.Columns["F_EMISION"];
                this.columnMONTO = this.Columns["MONTO"];
                this.columnDING_NDOCTO = this.Columns["DING_NDOCTO"];
                this.columnTIPO_DOC = this.Columns["TIPO_DOC"];
                this.columnBANCO = this.Columns["BANCO"];
                this.columnPLAZA = this.Columns["PLAZA"];
                this.columnF_VENCIMIENTO = this.Columns["F_VENCIMIENTO"];
            }
            
            private void InitClass() {
                this.columnCONT_NCORR = new DataColumn("CONT_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONT_NCORR);
                this.columnINGR_NCORR = new DataColumn("INGR_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINGR_NCORR);
                this.columnF_EMISION = new DataColumn("F_EMISION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnF_EMISION);
                this.columnMONTO = new DataColumn("MONTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO);
                this.columnDING_NDOCTO = new DataColumn("DING_NDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDING_NDOCTO);
                this.columnTIPO_DOC = new DataColumn("TIPO_DOC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPO_DOC);
                this.columnBANCO = new DataColumn("BANCO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBANCO);
                this.columnPLAZA = new DataColumn("PLAZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPLAZA);
                this.columnF_VENCIMIENTO = new DataColumn("F_VENCIMIENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnF_VENCIMIENTO);
                this.columnCONT_NCORR.ReadOnly = true;
                this.columnINGR_NCORR.ReadOnly = true;
                this.columnF_EMISION.ReadOnly = true;
                this.columnMONTO.ReadOnly = true;
                this.columnDING_NDOCTO.ReadOnly = true;
                this.columnTIPO_DOC.ReadOnly = true;
                this.columnBANCO.ReadOnly = true;
                this.columnPLAZA.ReadOnly = true;
                this.columnF_VENCIMIENTO.ReadOnly = true;
            }
            
            public T_CuotasRow NewT_CuotasRow() {
                return ((T_CuotasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_CuotasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_CuotasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CuotasRowChanged != null)) {
                    this.T_CuotasRowChanged(this, new T_CuotasRowChangeEvent(((T_CuotasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CuotasRowChanging != null)) {
                    this.T_CuotasRowChanging(this, new T_CuotasRowChangeEvent(((T_CuotasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CuotasRowDeleted != null)) {
                    this.T_CuotasRowDeleted(this, new T_CuotasRowChangeEvent(((T_CuotasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CuotasRowDeleting != null)) {
                    this.T_CuotasRowDeleting(this, new T_CuotasRowChangeEvent(((T_CuotasRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_CuotasRow(T_CuotasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CuotasRow : DataRow {
            
            private T_CuotasDataTable tableT_Cuotas;
            
            internal T_CuotasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Cuotas = ((T_CuotasDataTable)(this.Table));
            }
            
            public string CONT_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.CONT_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.CONT_NCORRColumn] = value;
                }
            }
            
            public string INGR_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.INGR_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.INGR_NCORRColumn] = value;
                }
            }
            
            public string F_EMISION {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.F_EMISIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.F_EMISIONColumn] = value;
                }
            }
            
            public string MONTO {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.MONTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.MONTOColumn] = value;
                }
            }
            
            public string DING_NDOCTO {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.DING_NDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.DING_NDOCTOColumn] = value;
                }
            }
            
            public string TIPO_DOC {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.TIPO_DOCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.TIPO_DOCColumn] = value;
                }
            }
            
            public string BANCO {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.BANCOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.BANCOColumn] = value;
                }
            }
            
            public string PLAZA {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.PLAZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.PLAZAColumn] = value;
                }
            }
            
            public string F_VENCIMIENTO {
                get {
                    try {
                        return ((string)(this[this.tableT_Cuotas.F_VENCIMIENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Cuotas.F_VENCIMIENTOColumn] = value;
                }
            }
            
            public bool IsCONT_NCORRNull() {
                return this.IsNull(this.tableT_Cuotas.CONT_NCORRColumn);
            }
            
            public void SetCONT_NCORRNull() {
                this[this.tableT_Cuotas.CONT_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsINGR_NCORRNull() {
                return this.IsNull(this.tableT_Cuotas.INGR_NCORRColumn);
            }
            
            public void SetINGR_NCORRNull() {
                this[this.tableT_Cuotas.INGR_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsF_EMISIONNull() {
                return this.IsNull(this.tableT_Cuotas.F_EMISIONColumn);
            }
            
            public void SetF_EMISIONNull() {
                this[this.tableT_Cuotas.F_EMISIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTONull() {
                return this.IsNull(this.tableT_Cuotas.MONTOColumn);
            }
            
            public void SetMONTONull() {
                this[this.tableT_Cuotas.MONTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDING_NDOCTONull() {
                return this.IsNull(this.tableT_Cuotas.DING_NDOCTOColumn);
            }
            
            public void SetDING_NDOCTONull() {
                this[this.tableT_Cuotas.DING_NDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPO_DOCNull() {
                return this.IsNull(this.tableT_Cuotas.TIPO_DOCColumn);
            }
            
            public void SetTIPO_DOCNull() {
                this[this.tableT_Cuotas.TIPO_DOCColumn] = System.Convert.DBNull;
            }
            
            public bool IsBANCONull() {
                return this.IsNull(this.tableT_Cuotas.BANCOColumn);
            }
            
            public void SetBANCONull() {
                this[this.tableT_Cuotas.BANCOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPLAZANull() {
                return this.IsNull(this.tableT_Cuotas.PLAZAColumn);
            }
            
            public void SetPLAZANull() {
                this[this.tableT_Cuotas.PLAZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsF_VENCIMIENTONull() {
                return this.IsNull(this.tableT_Cuotas.F_VENCIMIENTOColumn);
            }
            
            public void SetF_VENCIMIENTONull() {
                this[this.tableT_Cuotas.F_VENCIMIENTOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CuotasRowChangeEvent : EventArgs {
            
            private T_CuotasRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_CuotasRowChangeEvent(T_CuotasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_CuotasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_ContratoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNUMERO_HOJA;
            
            private DataColumn columnNOMBRE_HOJA;
            
            private DataColumn columnCONT_NCORR;
            
            private DataColumn columnF_CONTRATO;
            
            private DataColumn columnAUDI_TUSUARIO;
            
            private DataColumn columnANO_INGRESO;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnRUT_ALUMNO;
            
            private DataColumn columnPATERNO_ALUMNO;
            
            private DataColumn columnMATERNO_ALUMNO;
            
            private DataColumn columnNOMBRES_ALUMNO;
            
            private DataColumn columnDIRECCION_ALUMNO;
            
            private DataColumn columnCIUDAD_ALUMNO;
            
            private DataColumn columnCOMUNA_ALUMNO;
            
            private DataColumn columnFONO_ALUMNO;
            
            private DataColumn columnRUT_APODERADO;
            
            private DataColumn columnPATERNO_APODERADO;
            
            private DataColumn columnMATERNO_APODERADO;
            
            private DataColumn columnNOMBRES_APODERADO;
            
            private DataColumn columnDIRECCION_APODERADO;
            
            private DataColumn columnCIUDAD_APODERADO;
            
            private DataColumn columnCOMUNA_APODERADO;
            
            private DataColumn columnFONO_APODERADO;
            
            private DataColumn columnigas_tcodigo;
            
            private DataColumn columnCCOS_TCODIGO;
            
            private DataColumn columntipo_impresion;
            
            internal T_ContratoDataTable() : 
                    base("T_Contrato") {
                this.InitClass();
            }
            
            internal T_ContratoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NUMERO_HOJAColumn {
                get {
                    return this.columnNUMERO_HOJA;
                }
            }
            
            internal DataColumn NOMBRE_HOJAColumn {
                get {
                    return this.columnNOMBRE_HOJA;
                }
            }
            
            internal DataColumn CONT_NCORRColumn {
                get {
                    return this.columnCONT_NCORR;
                }
            }
            
            internal DataColumn F_CONTRATOColumn {
                get {
                    return this.columnF_CONTRATO;
                }
            }
            
            internal DataColumn AUDI_TUSUARIOColumn {
                get {
                    return this.columnAUDI_TUSUARIO;
                }
            }
            
            internal DataColumn ANO_INGRESOColumn {
                get {
                    return this.columnANO_INGRESO;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn RUT_ALUMNOColumn {
                get {
                    return this.columnRUT_ALUMNO;
                }
            }
            
            internal DataColumn PATERNO_ALUMNOColumn {
                get {
                    return this.columnPATERNO_ALUMNO;
                }
            }
            
            internal DataColumn MATERNO_ALUMNOColumn {
                get {
                    return this.columnMATERNO_ALUMNO;
                }
            }
            
            internal DataColumn NOMBRES_ALUMNOColumn {
                get {
                    return this.columnNOMBRES_ALUMNO;
                }
            }
            
            internal DataColumn DIRECCION_ALUMNOColumn {
                get {
                    return this.columnDIRECCION_ALUMNO;
                }
            }
            
            internal DataColumn CIUDAD_ALUMNOColumn {
                get {
                    return this.columnCIUDAD_ALUMNO;
                }
            }
            
            internal DataColumn COMUNA_ALUMNOColumn {
                get {
                    return this.columnCOMUNA_ALUMNO;
                }
            }
            
            internal DataColumn FONO_ALUMNOColumn {
                get {
                    return this.columnFONO_ALUMNO;
                }
            }
            
            internal DataColumn RUT_APODERADOColumn {
                get {
                    return this.columnRUT_APODERADO;
                }
            }
            
            internal DataColumn PATERNO_APODERADOColumn {
                get {
                    return this.columnPATERNO_APODERADO;
                }
            }
            
            internal DataColumn MATERNO_APODERADOColumn {
                get {
                    return this.columnMATERNO_APODERADO;
                }
            }
            
            internal DataColumn NOMBRES_APODERADOColumn {
                get {
                    return this.columnNOMBRES_APODERADO;
                }
            }
            
            internal DataColumn DIRECCION_APODERADOColumn {
                get {
                    return this.columnDIRECCION_APODERADO;
                }
            }
            
            internal DataColumn CIUDAD_APODERADOColumn {
                get {
                    return this.columnCIUDAD_APODERADO;
                }
            }
            
            internal DataColumn COMUNA_APODERADOColumn {
                get {
                    return this.columnCOMUNA_APODERADO;
                }
            }
            
            internal DataColumn FONO_APODERADOColumn {
                get {
                    return this.columnFONO_APODERADO;
                }
            }
            
            internal DataColumn igas_tcodigoColumn {
                get {
                    return this.columnigas_tcodigo;
                }
            }
            
            internal DataColumn CCOS_TCODIGOColumn {
                get {
                    return this.columnCCOS_TCODIGO;
                }
            }
            
            internal DataColumn tipo_impresionColumn {
                get {
                    return this.columntipo_impresion;
                }
            }
            
            public T_ContratoRow this[int index] {
                get {
                    return ((T_ContratoRow)(this.Rows[index]));
                }
            }
            
            public event T_ContratoRowChangeEventHandler T_ContratoRowChanged;
            
            public event T_ContratoRowChangeEventHandler T_ContratoRowChanging;
            
            public event T_ContratoRowChangeEventHandler T_ContratoRowDeleted;
            
            public event T_ContratoRowChangeEventHandler T_ContratoRowDeleting;
            
            public void AddT_ContratoRow(T_ContratoRow row) {
                this.Rows.Add(row);
            }
            
            public T_ContratoRow AddT_ContratoRow(
                        string NUMERO_HOJA, 
                        string NOMBRE_HOJA, 
                        string CONT_NCORR, 
                        string F_CONTRATO, 
                        string AUDI_TUSUARIO, 
                        string ANO_INGRESO, 
                        string CARRERA, 
                        string RUT_ALUMNO, 
                        string PATERNO_ALUMNO, 
                        string MATERNO_ALUMNO, 
                        string NOMBRES_ALUMNO, 
                        string DIRECCION_ALUMNO, 
                        string CIUDAD_ALUMNO, 
                        string COMUNA_ALUMNO, 
                        string FONO_ALUMNO, 
                        string RUT_APODERADO, 
                        string PATERNO_APODERADO, 
                        string MATERNO_APODERADO, 
                        string NOMBRES_APODERADO, 
                        string DIRECCION_APODERADO, 
                        string CIUDAD_APODERADO, 
                        string COMUNA_APODERADO, 
                        string FONO_APODERADO, 
                        string igas_tcodigo, 
                        string CCOS_TCODIGO, 
                        string tipo_impresion) {
                T_ContratoRow rowT_ContratoRow = ((T_ContratoRow)(this.NewRow()));
                rowT_ContratoRow.ItemArray = new object[] {
                        NUMERO_HOJA,
                        NOMBRE_HOJA,
                        CONT_NCORR,
                        F_CONTRATO,
                        AUDI_TUSUARIO,
                        ANO_INGRESO,
                        CARRERA,
                        RUT_ALUMNO,
                        PATERNO_ALUMNO,
                        MATERNO_ALUMNO,
                        NOMBRES_ALUMNO,
                        DIRECCION_ALUMNO,
                        CIUDAD_ALUMNO,
                        COMUNA_ALUMNO,
                        FONO_ALUMNO,
                        RUT_APODERADO,
                        PATERNO_APODERADO,
                        MATERNO_APODERADO,
                        NOMBRES_APODERADO,
                        DIRECCION_APODERADO,
                        CIUDAD_APODERADO,
                        COMUNA_APODERADO,
                        FONO_APODERADO,
                        igas_tcodigo,
                        CCOS_TCODIGO,
                        tipo_impresion};
                this.Rows.Add(rowT_ContratoRow);
                return rowT_ContratoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_ContratoDataTable cln = ((T_ContratoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_ContratoDataTable();
            }
            
            internal void InitVars() {
                this.columnNUMERO_HOJA = this.Columns["NUMERO_HOJA"];
                this.columnNOMBRE_HOJA = this.Columns["NOMBRE_HOJA"];
                this.columnCONT_NCORR = this.Columns["CONT_NCORR"];
                this.columnF_CONTRATO = this.Columns["F_CONTRATO"];
                this.columnAUDI_TUSUARIO = this.Columns["AUDI_TUSUARIO"];
                this.columnANO_INGRESO = this.Columns["ANO_INGRESO"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnRUT_ALUMNO = this.Columns["RUT_ALUMNO"];
                this.columnPATERNO_ALUMNO = this.Columns["PATERNO_ALUMNO"];
                this.columnMATERNO_ALUMNO = this.Columns["MATERNO_ALUMNO"];
                this.columnNOMBRES_ALUMNO = this.Columns["NOMBRES_ALUMNO"];
                this.columnDIRECCION_ALUMNO = this.Columns["DIRECCION_ALUMNO"];
                this.columnCIUDAD_ALUMNO = this.Columns["CIUDAD_ALUMNO"];
                this.columnCOMUNA_ALUMNO = this.Columns["COMUNA_ALUMNO"];
                this.columnFONO_ALUMNO = this.Columns["FONO_ALUMNO"];
                this.columnRUT_APODERADO = this.Columns["RUT_APODERADO"];
                this.columnPATERNO_APODERADO = this.Columns["PATERNO_APODERADO"];
                this.columnMATERNO_APODERADO = this.Columns["MATERNO_APODERADO"];
                this.columnNOMBRES_APODERADO = this.Columns["NOMBRES_APODERADO"];
                this.columnDIRECCION_APODERADO = this.Columns["DIRECCION_APODERADO"];
                this.columnCIUDAD_APODERADO = this.Columns["CIUDAD_APODERADO"];
                this.columnCOMUNA_APODERADO = this.Columns["COMUNA_APODERADO"];
                this.columnFONO_APODERADO = this.Columns["FONO_APODERADO"];
                this.columnigas_tcodigo = this.Columns["igas_tcodigo"];
                this.columnCCOS_TCODIGO = this.Columns["CCOS_TCODIGO"];
                this.columntipo_impresion = this.Columns["tipo_impresion"];
            }
            
            private void InitClass() {
                this.columnNUMERO_HOJA = new DataColumn("NUMERO_HOJA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUMERO_HOJA);
                this.columnNOMBRE_HOJA = new DataColumn("NOMBRE_HOJA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_HOJA);
                this.columnCONT_NCORR = new DataColumn("CONT_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONT_NCORR);
                this.columnF_CONTRATO = new DataColumn("F_CONTRATO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnF_CONTRATO);
                this.columnAUDI_TUSUARIO = new DataColumn("AUDI_TUSUARIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAUDI_TUSUARIO);
                this.columnANO_INGRESO = new DataColumn("ANO_INGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_INGRESO);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnRUT_ALUMNO = new DataColumn("RUT_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_ALUMNO);
                this.columnPATERNO_ALUMNO = new DataColumn("PATERNO_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPATERNO_ALUMNO);
                this.columnMATERNO_ALUMNO = new DataColumn("MATERNO_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMATERNO_ALUMNO);
                this.columnNOMBRES_ALUMNO = new DataColumn("NOMBRES_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRES_ALUMNO);
                this.columnDIRECCION_ALUMNO = new DataColumn("DIRECCION_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECCION_ALUMNO);
                this.columnCIUDAD_ALUMNO = new DataColumn("CIUDAD_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD_ALUMNO);
                this.columnCOMUNA_ALUMNO = new DataColumn("COMUNA_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMUNA_ALUMNO);
                this.columnFONO_ALUMNO = new DataColumn("FONO_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFONO_ALUMNO);
                this.columnRUT_APODERADO = new DataColumn("RUT_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_APODERADO);
                this.columnPATERNO_APODERADO = new DataColumn("PATERNO_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPATERNO_APODERADO);
                this.columnMATERNO_APODERADO = new DataColumn("MATERNO_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMATERNO_APODERADO);
                this.columnNOMBRES_APODERADO = new DataColumn("NOMBRES_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRES_APODERADO);
                this.columnDIRECCION_APODERADO = new DataColumn("DIRECCION_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECCION_APODERADO);
                this.columnCIUDAD_APODERADO = new DataColumn("CIUDAD_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD_APODERADO);
                this.columnCOMUNA_APODERADO = new DataColumn("COMUNA_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMUNA_APODERADO);
                this.columnFONO_APODERADO = new DataColumn("FONO_APODERADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFONO_APODERADO);
                this.columnigas_tcodigo = new DataColumn("igas_tcodigo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnigas_tcodigo);
                this.columnCCOS_TCODIGO = new DataColumn("CCOS_TCODIGO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCCOS_TCODIGO);
                this.columntipo_impresion = new DataColumn("tipo_impresion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntipo_impresion);
                this.columnNUMERO_HOJA.ReadOnly = true;
                this.columnNOMBRE_HOJA.ReadOnly = true;
                this.columnCONT_NCORR.ReadOnly = true;
                this.columnF_CONTRATO.ReadOnly = true;
                this.columnAUDI_TUSUARIO.ReadOnly = true;
                this.columnANO_INGRESO.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnRUT_ALUMNO.ReadOnly = true;
                this.columnPATERNO_ALUMNO.ReadOnly = true;
                this.columnMATERNO_ALUMNO.ReadOnly = true;
                this.columnNOMBRES_ALUMNO.ReadOnly = true;
                this.columnDIRECCION_ALUMNO.ReadOnly = true;
                this.columnCIUDAD_ALUMNO.ReadOnly = true;
                this.columnCOMUNA_ALUMNO.ReadOnly = true;
                this.columnFONO_ALUMNO.ReadOnly = true;
                this.columnRUT_APODERADO.ReadOnly = true;
                this.columnPATERNO_APODERADO.ReadOnly = true;
                this.columnMATERNO_APODERADO.ReadOnly = true;
                this.columnNOMBRES_APODERADO.ReadOnly = true;
                this.columnDIRECCION_APODERADO.ReadOnly = true;
                this.columnCIUDAD_APODERADO.ReadOnly = true;
                this.columnCOMUNA_APODERADO.ReadOnly = true;
                this.columnFONO_APODERADO.ReadOnly = true;
                this.columnigas_tcodigo.ReadOnly = true;
                this.columnCCOS_TCODIGO.ReadOnly = true;
                this.columntipo_impresion.ReadOnly = true;
            }
            
            public T_ContratoRow NewT_ContratoRow() {
                return ((T_ContratoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_ContratoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_ContratoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_ContratoRowChanged != null)) {
                    this.T_ContratoRowChanged(this, new T_ContratoRowChangeEvent(((T_ContratoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_ContratoRowChanging != null)) {
                    this.T_ContratoRowChanging(this, new T_ContratoRowChangeEvent(((T_ContratoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_ContratoRowDeleted != null)) {
                    this.T_ContratoRowDeleted(this, new T_ContratoRowChangeEvent(((T_ContratoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_ContratoRowDeleting != null)) {
                    this.T_ContratoRowDeleting(this, new T_ContratoRowChangeEvent(((T_ContratoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_ContratoRow(T_ContratoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_ContratoRow : DataRow {
            
            private T_ContratoDataTable tableT_Contrato;
            
            internal T_ContratoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Contrato = ((T_ContratoDataTable)(this.Table));
            }
            
            public string NUMERO_HOJA {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.NUMERO_HOJAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.NUMERO_HOJAColumn] = value;
                }
            }
            
            public string NOMBRE_HOJA {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.NOMBRE_HOJAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.NOMBRE_HOJAColumn] = value;
                }
            }
            
            public string CONT_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.CONT_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.CONT_NCORRColumn] = value;
                }
            }
            
            public string F_CONTRATO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.F_CONTRATOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.F_CONTRATOColumn] = value;
                }
            }
            
            public string AUDI_TUSUARIO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.AUDI_TUSUARIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.AUDI_TUSUARIOColumn] = value;
                }
            }
            
            public string ANO_INGRESO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.ANO_INGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.ANO_INGRESOColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.CARRERAColumn] = value;
                }
            }
            
            public string RUT_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.RUT_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.RUT_ALUMNOColumn] = value;
                }
            }
            
            public string PATERNO_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.PATERNO_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.PATERNO_ALUMNOColumn] = value;
                }
            }
            
            public string MATERNO_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.MATERNO_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.MATERNO_ALUMNOColumn] = value;
                }
            }
            
            public string NOMBRES_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.NOMBRES_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.NOMBRES_ALUMNOColumn] = value;
                }
            }
            
            public string DIRECCION_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.DIRECCION_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.DIRECCION_ALUMNOColumn] = value;
                }
            }
            
            public string CIUDAD_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.CIUDAD_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.CIUDAD_ALUMNOColumn] = value;
                }
            }
            
            public string COMUNA_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.COMUNA_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.COMUNA_ALUMNOColumn] = value;
                }
            }
            
            public string FONO_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.FONO_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.FONO_ALUMNOColumn] = value;
                }
            }
            
            public string RUT_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.RUT_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.RUT_APODERADOColumn] = value;
                }
            }
            
            public string PATERNO_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.PATERNO_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.PATERNO_APODERADOColumn] = value;
                }
            }
            
            public string MATERNO_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.MATERNO_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.MATERNO_APODERADOColumn] = value;
                }
            }
            
            public string NOMBRES_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.NOMBRES_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.NOMBRES_APODERADOColumn] = value;
                }
            }
            
            public string DIRECCION_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.DIRECCION_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.DIRECCION_APODERADOColumn] = value;
                }
            }
            
            public string CIUDAD_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.CIUDAD_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.CIUDAD_APODERADOColumn] = value;
                }
            }
            
            public string COMUNA_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.COMUNA_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.COMUNA_APODERADOColumn] = value;
                }
            }
            
            public string FONO_APODERADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.FONO_APODERADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.FONO_APODERADOColumn] = value;
                }
            }
            
            public string igas_tcodigo {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.igas_tcodigoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.igas_tcodigoColumn] = value;
                }
            }
            
            public string CCOS_TCODIGO {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.CCOS_TCODIGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.CCOS_TCODIGOColumn] = value;
                }
            }
            
            public string tipo_impresion {
                get {
                    try {
                        return ((string)(this[this.tableT_Contrato.tipo_impresionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Contrato.tipo_impresionColumn] = value;
                }
            }
            
            public bool IsNUMERO_HOJANull() {
                return this.IsNull(this.tableT_Contrato.NUMERO_HOJAColumn);
            }
            
            public void SetNUMERO_HOJANull() {
                this[this.tableT_Contrato.NUMERO_HOJAColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_HOJANull() {
                return this.IsNull(this.tableT_Contrato.NOMBRE_HOJAColumn);
            }
            
            public void SetNOMBRE_HOJANull() {
                this[this.tableT_Contrato.NOMBRE_HOJAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONT_NCORRNull() {
                return this.IsNull(this.tableT_Contrato.CONT_NCORRColumn);
            }
            
            public void SetCONT_NCORRNull() {
                this[this.tableT_Contrato.CONT_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsF_CONTRATONull() {
                return this.IsNull(this.tableT_Contrato.F_CONTRATOColumn);
            }
            
            public void SetF_CONTRATONull() {
                this[this.tableT_Contrato.F_CONTRATOColumn] = System.Convert.DBNull;
            }
            
            public bool IsAUDI_TUSUARIONull() {
                return this.IsNull(this.tableT_Contrato.AUDI_TUSUARIOColumn);
            }
            
            public void SetAUDI_TUSUARIONull() {
                this[this.tableT_Contrato.AUDI_TUSUARIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_INGRESONull() {
                return this.IsNull(this.tableT_Contrato.ANO_INGRESOColumn);
            }
            
            public void SetANO_INGRESONull() {
                this[this.tableT_Contrato.ANO_INGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.tableT_Contrato.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.tableT_Contrato.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.RUT_ALUMNOColumn);
            }
            
            public void SetRUT_ALUMNONull() {
                this[this.tableT_Contrato.RUT_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPATERNO_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.PATERNO_ALUMNOColumn);
            }
            
            public void SetPATERNO_ALUMNONull() {
                this[this.tableT_Contrato.PATERNO_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMATERNO_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.MATERNO_ALUMNOColumn);
            }
            
            public void SetMATERNO_ALUMNONull() {
                this[this.tableT_Contrato.MATERNO_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRES_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.NOMBRES_ALUMNOColumn);
            }
            
            public void SetNOMBRES_ALUMNONull() {
                this[this.tableT_Contrato.NOMBRES_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECCION_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.DIRECCION_ALUMNOColumn);
            }
            
            public void SetDIRECCION_ALUMNONull() {
                this[this.tableT_Contrato.DIRECCION_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDAD_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.CIUDAD_ALUMNOColumn);
            }
            
            public void SetCIUDAD_ALUMNONull() {
                this[this.tableT_Contrato.CIUDAD_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMUNA_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.COMUNA_ALUMNOColumn);
            }
            
            public void SetCOMUNA_ALUMNONull() {
                this[this.tableT_Contrato.COMUNA_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFONO_ALUMNONull() {
                return this.IsNull(this.tableT_Contrato.FONO_ALUMNOColumn);
            }
            
            public void SetFONO_ALUMNONull() {
                this[this.tableT_Contrato.FONO_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.RUT_APODERADOColumn);
            }
            
            public void SetRUT_APODERADONull() {
                this[this.tableT_Contrato.RUT_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPATERNO_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.PATERNO_APODERADOColumn);
            }
            
            public void SetPATERNO_APODERADONull() {
                this[this.tableT_Contrato.PATERNO_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMATERNO_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.MATERNO_APODERADOColumn);
            }
            
            public void SetMATERNO_APODERADONull() {
                this[this.tableT_Contrato.MATERNO_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRES_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.NOMBRES_APODERADOColumn);
            }
            
            public void SetNOMBRES_APODERADONull() {
                this[this.tableT_Contrato.NOMBRES_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECCION_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.DIRECCION_APODERADOColumn);
            }
            
            public void SetDIRECCION_APODERADONull() {
                this[this.tableT_Contrato.DIRECCION_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDAD_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.CIUDAD_APODERADOColumn);
            }
            
            public void SetCIUDAD_APODERADONull() {
                this[this.tableT_Contrato.CIUDAD_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMUNA_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.COMUNA_APODERADOColumn);
            }
            
            public void SetCOMUNA_APODERADONull() {
                this[this.tableT_Contrato.COMUNA_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFONO_APODERADONull() {
                return this.IsNull(this.tableT_Contrato.FONO_APODERADOColumn);
            }
            
            public void SetFONO_APODERADONull() {
                this[this.tableT_Contrato.FONO_APODERADOColumn] = System.Convert.DBNull;
            }
            
            public bool Isigas_tcodigoNull() {
                return this.IsNull(this.tableT_Contrato.igas_tcodigoColumn);
            }
            
            public void Setigas_tcodigoNull() {
                this[this.tableT_Contrato.igas_tcodigoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCCOS_TCODIGONull() {
                return this.IsNull(this.tableT_Contrato.CCOS_TCODIGOColumn);
            }
            
            public void SetCCOS_TCODIGONull() {
                this[this.tableT_Contrato.CCOS_TCODIGOColumn] = System.Convert.DBNull;
            }
            
            public bool Istipo_impresionNull() {
                return this.IsNull(this.tableT_Contrato.tipo_impresionColumn);
            }
            
            public void Settipo_impresionNull() {
                this[this.tableT_Contrato.tipo_impresionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_ContratoRowChangeEvent : EventArgs {
            
            private T_ContratoRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_ContratoRowChangeEvent(T_ContratoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_ContratoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRUT;
            
            private DataColumn columnNOMBRE;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn NOMBREColumn {
                get {
                    return this.columnNOMBRE;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(string RUT, string NOMBRE) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        RUT,
                        NOMBRE};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnRUT = this.Columns["RUT"];
                this.columnNOMBRE = this.Columns["NOMBRE"];
            }
            
            private void InitClass() {
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnNOMBRE = new DataColumn("NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE);
                this.columnRUT.ReadOnly = true;
                this.columnNOMBRE.ReadOnly = true;
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.table_Table.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RUTColumn] = value;
                }
            }
            
            public string NOMBRE {
                get {
                    try {
                        return ((string)(this[this.table_Table.NOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NOMBREColumn] = value;
                }
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.table_Table.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.table_Table.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRENull() {
                return this.IsNull(this.table_Table.NOMBREColumn);
            }
            
            public void SetNOMBRENull() {
                this[this.table_Table.NOMBREColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
