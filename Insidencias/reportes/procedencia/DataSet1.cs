//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace procedencia {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private T_DatosDataTable tableT_Datos;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_Datos"] != null)) {
                    this.Tables.Add(new T_DatosDataTable(ds.Tables["T_Datos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DatosDataTable T_Datos {
            get {
                return this.tableT_Datos;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["T_Datos"] != null)) {
                this.Tables.Add(new T_DatosDataTable(ds.Tables["T_Datos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableT_Datos = ((T_DatosDataTable)(this.Tables["T_Datos"]));
            if ((this.tableT_Datos != null)) {
                this.tableT_Datos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableT_Datos = new T_DatosDataTable();
            this.Tables.Add(this.tableT_Datos);
        }
        
        private bool ShouldSerializeT_Datos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void T_DatosRowChangeEventHandler(object sender, T_DatosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_DatosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnANO;
            
            private DataColumn columnSEDE_TDESC;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnJORN_TDESC;
            
            private DataColumn columnCOLEGIO_EGRESO;
            
            private DataColumn columnCIUD_TDESC;
            
            private DataColumn columnTCOL_TDESC;
            
            private DataColumn columnALUMNOS;
            
            private DataColumn columnPSU;
            
            internal T_DatosDataTable() : 
                    base("T_Datos") {
                this.InitClass();
            }
            
            internal T_DatosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ANOColumn {
                get {
                    return this.columnANO;
                }
            }
            
            internal DataColumn SEDE_TDESCColumn {
                get {
                    return this.columnSEDE_TDESC;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn JORN_TDESCColumn {
                get {
                    return this.columnJORN_TDESC;
                }
            }
            
            internal DataColumn COLEGIO_EGRESOColumn {
                get {
                    return this.columnCOLEGIO_EGRESO;
                }
            }
            
            internal DataColumn CIUD_TDESCColumn {
                get {
                    return this.columnCIUD_TDESC;
                }
            }
            
            internal DataColumn TCOL_TDESCColumn {
                get {
                    return this.columnTCOL_TDESC;
                }
            }
            
            internal DataColumn ALUMNOSColumn {
                get {
                    return this.columnALUMNOS;
                }
            }
            
            internal DataColumn PSUColumn {
                get {
                    return this.columnPSU;
                }
            }
            
            public T_DatosRow this[int index] {
                get {
                    return ((T_DatosRow)(this.Rows[index]));
                }
            }
            
            public event T_DatosRowChangeEventHandler T_DatosRowChanged;
            
            public event T_DatosRowChangeEventHandler T_DatosRowChanging;
            
            public event T_DatosRowChangeEventHandler T_DatosRowDeleted;
            
            public event T_DatosRowChangeEventHandler T_DatosRowDeleting;
            
            public void AddT_DatosRow(T_DatosRow row) {
                this.Rows.Add(row);
            }
            
            public T_DatosRow AddT_DatosRow(string ANO, string SEDE_TDESC, string CARR_TDESC, string JORN_TDESC, string COLEGIO_EGRESO, string CIUD_TDESC, string TCOL_TDESC, string ALUMNOS, string PSU) {
                T_DatosRow rowT_DatosRow = ((T_DatosRow)(this.NewRow()));
                rowT_DatosRow.ItemArray = new object[] {
                        ANO,
                        SEDE_TDESC,
                        CARR_TDESC,
                        JORN_TDESC,
                        COLEGIO_EGRESO,
                        CIUD_TDESC,
                        TCOL_TDESC,
                        ALUMNOS,
                        PSU};
                this.Rows.Add(rowT_DatosRow);
                return rowT_DatosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_DatosDataTable cln = ((T_DatosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_DatosDataTable();
            }
            
            internal void InitVars() {
                this.columnANO = this.Columns["ANO"];
                this.columnSEDE_TDESC = this.Columns["SEDE_TDESC"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnJORN_TDESC = this.Columns["JORN_TDESC"];
                this.columnCOLEGIO_EGRESO = this.Columns["COLEGIO_EGRESO"];
                this.columnCIUD_TDESC = this.Columns["CIUD_TDESC"];
                this.columnTCOL_TDESC = this.Columns["TCOL_TDESC"];
                this.columnALUMNOS = this.Columns["ALUMNOS"];
                this.columnPSU = this.Columns["PSU"];
            }
            
            private void InitClass() {
                this.columnANO = new DataColumn("ANO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO);
                this.columnSEDE_TDESC = new DataColumn("SEDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TDESC);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnJORN_TDESC = new DataColumn("JORN_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJORN_TDESC);
                this.columnCOLEGIO_EGRESO = new DataColumn("COLEGIO_EGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOLEGIO_EGRESO);
                this.columnCIUD_TDESC = new DataColumn("CIUD_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUD_TDESC);
                this.columnTCOL_TDESC = new DataColumn("TCOL_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTCOL_TDESC);
                this.columnALUMNOS = new DataColumn("ALUMNOS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnALUMNOS);
                this.columnPSU = new DataColumn("PSU", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPSU);
                this.columnANO.ReadOnly = true;
                this.columnSEDE_TDESC.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnJORN_TDESC.ReadOnly = true;
                this.columnCOLEGIO_EGRESO.ReadOnly = true;
                this.columnCIUD_TDESC.ReadOnly = true;
                this.columnTCOL_TDESC.ReadOnly = true;
                this.columnALUMNOS.ReadOnly = true;
                this.columnPSU.ReadOnly = true;
            }
            
            public T_DatosRow NewT_DatosRow() {
                return ((T_DatosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_DatosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_DatosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DatosRowChanged != null)) {
                    this.T_DatosRowChanged(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DatosRowChanging != null)) {
                    this.T_DatosRowChanging(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DatosRowDeleted != null)) {
                    this.T_DatosRowDeleted(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DatosRowDeleting != null)) {
                    this.T_DatosRowDeleting(this, new T_DatosRowChangeEvent(((T_DatosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_DatosRow(T_DatosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_DatosRow : DataRow {
            
            private T_DatosDataTable tableT_Datos;
            
            internal T_DatosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Datos = ((T_DatosDataTable)(this.Table));
            }
            
            public string ANO {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.ANOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.ANOColumn] = value;
                }
            }
            
            public string SEDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.SEDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.SEDE_TDESCColumn] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.CARR_TDESCColumn] = value;
                }
            }
            
            public string JORN_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.JORN_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.JORN_TDESCColumn] = value;
                }
            }
            
            public string COLEGIO_EGRESO {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.COLEGIO_EGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.COLEGIO_EGRESOColumn] = value;
                }
            }
            
            public string CIUD_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.CIUD_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.CIUD_TDESCColumn] = value;
                }
            }
            
            public string TCOL_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.TCOL_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.TCOL_TDESCColumn] = value;
                }
            }
            
            public string ALUMNOS {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.ALUMNOSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.ALUMNOSColumn] = value;
                }
            }
            
            public string PSU {
                get {
                    try {
                        return ((string)(this[this.tableT_Datos.PSUColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Datos.PSUColumn] = value;
                }
            }
            
            public bool IsANONull() {
                return this.IsNull(this.tableT_Datos.ANOColumn);
            }
            
            public void SetANONull() {
                this[this.tableT_Datos.ANOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_TDESCNull() {
                return this.IsNull(this.tableT_Datos.SEDE_TDESCColumn);
            }
            
            public void SetSEDE_TDESCNull() {
                this[this.tableT_Datos.SEDE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableT_Datos.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableT_Datos.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsJORN_TDESCNull() {
                return this.IsNull(this.tableT_Datos.JORN_TDESCColumn);
            }
            
            public void SetJORN_TDESCNull() {
                this[this.tableT_Datos.JORN_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOLEGIO_EGRESONull() {
                return this.IsNull(this.tableT_Datos.COLEGIO_EGRESOColumn);
            }
            
            public void SetCOLEGIO_EGRESONull() {
                this[this.tableT_Datos.COLEGIO_EGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUD_TDESCNull() {
                return this.IsNull(this.tableT_Datos.CIUD_TDESCColumn);
            }
            
            public void SetCIUD_TDESCNull() {
                this[this.tableT_Datos.CIUD_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsTCOL_TDESCNull() {
                return this.IsNull(this.tableT_Datos.TCOL_TDESCColumn);
            }
            
            public void SetTCOL_TDESCNull() {
                this[this.tableT_Datos.TCOL_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsALUMNOSNull() {
                return this.IsNull(this.tableT_Datos.ALUMNOSColumn);
            }
            
            public void SetALUMNOSNull() {
                this[this.tableT_Datos.ALUMNOSColumn] = System.Convert.DBNull;
            }
            
            public bool IsPSUNull() {
                return this.IsNull(this.tableT_Datos.PSUColumn);
            }
            
            public void SetPSUNull() {
                this[this.tableT_Datos.PSUColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_DatosRowChangeEvent : EventArgs {
            
            private T_DatosRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_DatosRowChangeEvent(T_DatosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_DatosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
