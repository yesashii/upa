//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace ficha_alumno {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class datosAlumno : DataSet {
        
        private alumnoDataTable tablealumno;
        
        public datosAlumno() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected datosAlumno(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["alumno"] != null)) {
                    this.Tables.Add(new alumnoDataTable(ds.Tables["alumno"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public alumnoDataTable alumno {
            get {
                return this.tablealumno;
            }
        }
        
        public override DataSet Clone() {
            datosAlumno cln = ((datosAlumno)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["alumno"] != null)) {
                this.Tables.Add(new alumnoDataTable(ds.Tables["alumno"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablealumno = ((alumnoDataTable)(this.Tables["alumno"]));
            if ((this.tablealumno != null)) {
                this.tablealumno.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "datosAlumno";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/datosAlumno.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablealumno = new alumnoDataTable();
            this.Tables.Add(this.tablealumno);
        }
        
        private bool ShouldSerializealumno() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void alumnoRowChangeEventHandler(object sender, alumnoRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class alumnoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnANO_INGRESO;
            
            private DataColumn columnNOMBRE_SEDE;
            
            private DataColumn columnNOMBRE_ALUMNO;
            
            private DataColumn columnRUT_POST;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnDIRECCION;
            
            private DataColumn columnFONO;
            
            private DataColumn columnCIUDAD;
            
            private DataColumn columnCOMUNA;
            
            internal alumnoDataTable() : 
                    base("alumno") {
                this.InitClass();
            }
            
            internal alumnoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ANO_INGRESOColumn {
                get {
                    return this.columnANO_INGRESO;
                }
            }
            
            internal DataColumn NOMBRE_SEDEColumn {
                get {
                    return this.columnNOMBRE_SEDE;
                }
            }
            
            internal DataColumn NOMBRE_ALUMNOColumn {
                get {
                    return this.columnNOMBRE_ALUMNO;
                }
            }
            
            internal DataColumn RUT_POSTColumn {
                get {
                    return this.columnRUT_POST;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn DIRECCIONColumn {
                get {
                    return this.columnDIRECCION;
                }
            }
            
            internal DataColumn FONOColumn {
                get {
                    return this.columnFONO;
                }
            }
            
            internal DataColumn CIUDADColumn {
                get {
                    return this.columnCIUDAD;
                }
            }
            
            internal DataColumn COMUNAColumn {
                get {
                    return this.columnCOMUNA;
                }
            }
            
            public alumnoRow this[int index] {
                get {
                    return ((alumnoRow)(this.Rows[index]));
                }
            }
            
            public event alumnoRowChangeEventHandler alumnoRowChanged;
            
            public event alumnoRowChangeEventHandler alumnoRowChanging;
            
            public event alumnoRowChangeEventHandler alumnoRowDeleted;
            
            public event alumnoRowChangeEventHandler alumnoRowDeleting;
            
            public void AddalumnoRow(alumnoRow row) {
                this.Rows.Add(row);
            }
            
            public alumnoRow AddalumnoRow(string ANO_INGRESO, string NOMBRE_SEDE, string NOMBRE_ALUMNO, string RUT_POST, string CARRERA, string DIRECCION, string FONO, string CIUDAD, string COMUNA) {
                alumnoRow rowalumnoRow = ((alumnoRow)(this.NewRow()));
                rowalumnoRow.ItemArray = new object[] {
                        ANO_INGRESO,
                        NOMBRE_SEDE,
                        NOMBRE_ALUMNO,
                        RUT_POST,
                        CARRERA,
                        DIRECCION,
                        FONO,
                        CIUDAD,
                        COMUNA};
                this.Rows.Add(rowalumnoRow);
                return rowalumnoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                alumnoDataTable cln = ((alumnoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new alumnoDataTable();
            }
            
            internal void InitVars() {
                this.columnANO_INGRESO = this.Columns["ANO_INGRESO"];
                this.columnNOMBRE_SEDE = this.Columns["NOMBRE_SEDE"];
                this.columnNOMBRE_ALUMNO = this.Columns["NOMBRE_ALUMNO"];
                this.columnRUT_POST = this.Columns["RUT_POST"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnDIRECCION = this.Columns["DIRECCION"];
                this.columnFONO = this.Columns["FONO"];
                this.columnCIUDAD = this.Columns["CIUDAD"];
                this.columnCOMUNA = this.Columns["COMUNA"];
            }
            
            private void InitClass() {
                this.columnANO_INGRESO = new DataColumn("ANO_INGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_INGRESO);
                this.columnNOMBRE_SEDE = new DataColumn("NOMBRE_SEDE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_SEDE);
                this.columnNOMBRE_ALUMNO = new DataColumn("NOMBRE_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_ALUMNO);
                this.columnRUT_POST = new DataColumn("RUT_POST", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_POST);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnDIRECCION = new DataColumn("DIRECCION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECCION);
                this.columnFONO = new DataColumn("FONO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFONO);
                this.columnCIUDAD = new DataColumn("CIUDAD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD);
                this.columnCOMUNA = new DataColumn("COMUNA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMUNA);
                this.columnANO_INGRESO.ReadOnly = true;
                this.columnNOMBRE_SEDE.ReadOnly = true;
                this.columnNOMBRE_ALUMNO.ReadOnly = true;
                this.columnRUT_POST.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnDIRECCION.ReadOnly = true;
                this.columnFONO.ReadOnly = true;
                this.columnCIUDAD.ReadOnly = true;
                this.columnCOMUNA.ReadOnly = true;
            }
            
            public alumnoRow NewalumnoRow() {
                return ((alumnoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new alumnoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(alumnoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.alumnoRowChanged != null)) {
                    this.alumnoRowChanged(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.alumnoRowChanging != null)) {
                    this.alumnoRowChanging(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.alumnoRowDeleted != null)) {
                    this.alumnoRowDeleted(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.alumnoRowDeleting != null)) {
                    this.alumnoRowDeleting(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovealumnoRow(alumnoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class alumnoRow : DataRow {
            
            private alumnoDataTable tablealumno;
            
            internal alumnoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablealumno = ((alumnoDataTable)(this.Table));
            }
            
            public string ANO_INGRESO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.ANO_INGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.ANO_INGRESOColumn] = value;
                }
            }
            
            public string NOMBRE_SEDE {
                get {
                    try {
                        return ((string)(this[this.tablealumno.NOMBRE_SEDEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.NOMBRE_SEDEColumn] = value;
                }
            }
            
            public string NOMBRE_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.NOMBRE_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.NOMBRE_ALUMNOColumn] = value;
                }
            }
            
            public string RUT_POST {
                get {
                    try {
                        return ((string)(this[this.tablealumno.RUT_POSTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.RUT_POSTColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.tablealumno.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.CARRERAColumn] = value;
                }
            }
            
            public string DIRECCION {
                get {
                    try {
                        return ((string)(this[this.tablealumno.DIRECCIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.DIRECCIONColumn] = value;
                }
            }
            
            public string FONO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.FONOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.FONOColumn] = value;
                }
            }
            
            public string CIUDAD {
                get {
                    try {
                        return ((string)(this[this.tablealumno.CIUDADColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.CIUDADColumn] = value;
                }
            }
            
            public string COMUNA {
                get {
                    try {
                        return ((string)(this[this.tablealumno.COMUNAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.COMUNAColumn] = value;
                }
            }
            
            public bool IsANO_INGRESONull() {
                return this.IsNull(this.tablealumno.ANO_INGRESOColumn);
            }
            
            public void SetANO_INGRESONull() {
                this[this.tablealumno.ANO_INGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_SEDENull() {
                return this.IsNull(this.tablealumno.NOMBRE_SEDEColumn);
            }
            
            public void SetNOMBRE_SEDENull() {
                this[this.tablealumno.NOMBRE_SEDEColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_ALUMNONull() {
                return this.IsNull(this.tablealumno.NOMBRE_ALUMNOColumn);
            }
            
            public void SetNOMBRE_ALUMNONull() {
                this[this.tablealumno.NOMBRE_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_POSTNull() {
                return this.IsNull(this.tablealumno.RUT_POSTColumn);
            }
            
            public void SetRUT_POSTNull() {
                this[this.tablealumno.RUT_POSTColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.tablealumno.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.tablealumno.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECCIONNull() {
                return this.IsNull(this.tablealumno.DIRECCIONColumn);
            }
            
            public void SetDIRECCIONNull() {
                this[this.tablealumno.DIRECCIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsFONONull() {
                return this.IsNull(this.tablealumno.FONOColumn);
            }
            
            public void SetFONONull() {
                this[this.tablealumno.FONOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDADNull() {
                return this.IsNull(this.tablealumno.CIUDADColumn);
            }
            
            public void SetCIUDADNull() {
                this[this.tablealumno.CIUDADColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMUNANull() {
                return this.IsNull(this.tablealumno.COMUNAColumn);
            }
            
            public void SetCOMUNANull() {
                this[this.tablealumno.COMUNAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class alumnoRowChangeEvent : EventArgs {
            
            private alumnoRow eventRow;
            
            private DataRowAction eventAction;
            
            public alumnoRowChangeEvent(alumnoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public alumnoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
