//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace imprimir_letra {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class letra_cambio : DataSet {
        
        private _TableDataTable table_Table;
        
        public letra_cambio() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected letra_cambio(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        public override DataSet Clone() {
            letra_cambio cln = ((letra_cambio)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "letra_cambio";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/letra_cambio.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRUT_POST;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnFECHA_ENTERA_V;
            
            private DataColumn columnMES_V;
            
            private DataColumn columnDD_V;
            
            private DataColumn columnANO_V;
            
            private DataColumn columnMES_E;
            
            private DataColumn columnDD_E;
            
            private DataColumn columnANO_E;
            
            private DataColumn columnMONTO;
            
            private DataColumn columnNRO_DOCTO;
            
            private DataColumn columnRUT_CODEUDOR;
            
            private DataColumn columnNOMBRE_CODEUDOR;
            
            private DataColumn columnDIRECCION;
            
            private DataColumn columnCIUDAD;
            
            private DataColumn columnCOMUNA;
            
            private DataColumn columnCIUDAD_SEDE;
            
            private DataColumn columnFONO_CODEUDOR;
            
            private DataColumn columnVALORES;
            
            private DataColumn columnDESCRIPCION;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RUT_POSTColumn {
                get {
                    return this.columnRUT_POST;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn FECHA_ENTERA_VColumn {
                get {
                    return this.columnFECHA_ENTERA_V;
                }
            }
            
            internal DataColumn MES_VColumn {
                get {
                    return this.columnMES_V;
                }
            }
            
            internal DataColumn DD_VColumn {
                get {
                    return this.columnDD_V;
                }
            }
            
            internal DataColumn ANO_VColumn {
                get {
                    return this.columnANO_V;
                }
            }
            
            internal DataColumn MES_EColumn {
                get {
                    return this.columnMES_E;
                }
            }
            
            internal DataColumn DD_EColumn {
                get {
                    return this.columnDD_E;
                }
            }
            
            internal DataColumn ANO_EColumn {
                get {
                    return this.columnANO_E;
                }
            }
            
            internal DataColumn MONTOColumn {
                get {
                    return this.columnMONTO;
                }
            }
            
            internal DataColumn NRO_DOCTOColumn {
                get {
                    return this.columnNRO_DOCTO;
                }
            }
            
            internal DataColumn RUT_CODEUDORColumn {
                get {
                    return this.columnRUT_CODEUDOR;
                }
            }
            
            internal DataColumn NOMBRE_CODEUDORColumn {
                get {
                    return this.columnNOMBRE_CODEUDOR;
                }
            }
            
            internal DataColumn DIRECCIONColumn {
                get {
                    return this.columnDIRECCION;
                }
            }
            
            internal DataColumn CIUDADColumn {
                get {
                    return this.columnCIUDAD;
                }
            }
            
            internal DataColumn COMUNAColumn {
                get {
                    return this.columnCOMUNA;
                }
            }
            
            internal DataColumn CIUDAD_SEDEColumn {
                get {
                    return this.columnCIUDAD_SEDE;
                }
            }
            
            internal DataColumn FONO_CODEUDORColumn {
                get {
                    return this.columnFONO_CODEUDOR;
                }
            }
            
            internal DataColumn VALORESColumn {
                get {
                    return this.columnVALORES;
                }
            }
            
            internal DataColumn DESCRIPCIONColumn {
                get {
                    return this.columnDESCRIPCION;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(
                        string RUT_POST, 
                        string CARRERA, 
                        string FECHA_ENTERA_V, 
                        string MES_V, 
                        string DD_V, 
                        string ANO_V, 
                        string MES_E, 
                        string DD_E, 
                        string ANO_E, 
                        string MONTO, 
                        string NRO_DOCTO, 
                        string RUT_CODEUDOR, 
                        string NOMBRE_CODEUDOR, 
                        string DIRECCION, 
                        string CIUDAD, 
                        string COMUNA, 
                        string CIUDAD_SEDE, 
                        string FONO_CODEUDOR, 
                        string VALORES, 
                        string DESCRIPCION) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        RUT_POST,
                        CARRERA,
                        FECHA_ENTERA_V,
                        MES_V,
                        DD_V,
                        ANO_V,
                        MES_E,
                        DD_E,
                        ANO_E,
                        MONTO,
                        NRO_DOCTO,
                        RUT_CODEUDOR,
                        NOMBRE_CODEUDOR,
                        DIRECCION,
                        CIUDAD,
                        COMUNA,
                        CIUDAD_SEDE,
                        FONO_CODEUDOR,
                        VALORES,
                        DESCRIPCION};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnRUT_POST = this.Columns["RUT_POST"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnFECHA_ENTERA_V = this.Columns["FECHA_ENTERA_V"];
                this.columnMES_V = this.Columns["MES_V"];
                this.columnDD_V = this.Columns["DD_V"];
                this.columnANO_V = this.Columns["ANO_V"];
                this.columnMES_E = this.Columns["MES_E"];
                this.columnDD_E = this.Columns["DD_E"];
                this.columnANO_E = this.Columns["ANO_E"];
                this.columnMONTO = this.Columns["MONTO"];
                this.columnNRO_DOCTO = this.Columns["NRO_DOCTO"];
                this.columnRUT_CODEUDOR = this.Columns["RUT_CODEUDOR"];
                this.columnNOMBRE_CODEUDOR = this.Columns["NOMBRE_CODEUDOR"];
                this.columnDIRECCION = this.Columns["DIRECCION"];
                this.columnCIUDAD = this.Columns["CIUDAD"];
                this.columnCOMUNA = this.Columns["COMUNA"];
                this.columnCIUDAD_SEDE = this.Columns["CIUDAD_SEDE"];
                this.columnFONO_CODEUDOR = this.Columns["FONO_CODEUDOR"];
                this.columnVALORES = this.Columns["VALORES"];
                this.columnDESCRIPCION = this.Columns["DESCRIPCION"];
            }
            
            private void InitClass() {
                this.columnRUT_POST = new DataColumn("RUT_POST", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_POST);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnFECHA_ENTERA_V = new DataColumn("FECHA_ENTERA_V", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_ENTERA_V);
                this.columnMES_V = new DataColumn("MES_V", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMES_V);
                this.columnDD_V = new DataColumn("DD_V", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDD_V);
                this.columnANO_V = new DataColumn("ANO_V", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_V);
                this.columnMES_E = new DataColumn("MES_E", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMES_E);
                this.columnDD_E = new DataColumn("DD_E", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDD_E);
                this.columnANO_E = new DataColumn("ANO_E", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_E);
                this.columnMONTO = new DataColumn("MONTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO);
                this.columnNRO_DOCTO = new DataColumn("NRO_DOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNRO_DOCTO);
                this.columnRUT_CODEUDOR = new DataColumn("RUT_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_CODEUDOR);
                this.columnNOMBRE_CODEUDOR = new DataColumn("NOMBRE_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_CODEUDOR);
                this.columnDIRECCION = new DataColumn("DIRECCION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECCION);
                this.columnCIUDAD = new DataColumn("CIUDAD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD);
                this.columnCOMUNA = new DataColumn("COMUNA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMUNA);
                this.columnCIUDAD_SEDE = new DataColumn("CIUDAD_SEDE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD_SEDE);
                this.columnFONO_CODEUDOR = new DataColumn("FONO_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFONO_CODEUDOR);
                this.columnVALORES = new DataColumn("VALORES", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVALORES);
                this.columnDESCRIPCION = new DataColumn("DESCRIPCION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIPCION);
                this.columnRUT_POST.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnFECHA_ENTERA_V.ReadOnly = true;
                this.columnMES_V.ReadOnly = true;
                this.columnDD_V.ReadOnly = true;
                this.columnANO_V.ReadOnly = true;
                this.columnMES_E.ReadOnly = true;
                this.columnDD_E.ReadOnly = true;
                this.columnANO_E.ReadOnly = true;
                this.columnMONTO.ReadOnly = true;
                this.columnNRO_DOCTO.ReadOnly = true;
                this.columnRUT_CODEUDOR.ReadOnly = true;
                this.columnNOMBRE_CODEUDOR.ReadOnly = true;
                this.columnDIRECCION.ReadOnly = true;
                this.columnCIUDAD.ReadOnly = true;
                this.columnCOMUNA.ReadOnly = true;
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public string RUT_POST {
                get {
                    try {
                        return ((string)(this[this.table_Table.RUT_POSTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RUT_POSTColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.table_Table.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CARRERAColumn] = value;
                }
            }
            
            public string FECHA_ENTERA_V {
                get {
                    try {
                        return ((string)(this[this.table_Table.FECHA_ENTERA_VColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FECHA_ENTERA_VColumn] = value;
                }
            }
            
            public string MES_V {
                get {
                    try {
                        return ((string)(this[this.table_Table.MES_VColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MES_VColumn] = value;
                }
            }
            
            public string DD_V {
                get {
                    try {
                        return ((string)(this[this.table_Table.DD_VColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DD_VColumn] = value;
                }
            }
            
            public string ANO_V {
                get {
                    try {
                        return ((string)(this[this.table_Table.ANO_VColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ANO_VColumn] = value;
                }
            }
            
            public string MES_E {
                get {
                    try {
                        return ((string)(this[this.table_Table.MES_EColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MES_EColumn] = value;
                }
            }
            
            public string DD_E {
                get {
                    try {
                        return ((string)(this[this.table_Table.DD_EColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DD_EColumn] = value;
                }
            }
            
            public string ANO_E {
                get {
                    try {
                        return ((string)(this[this.table_Table.ANO_EColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ANO_EColumn] = value;
                }
            }
            
            public string MONTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.MONTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MONTOColumn] = value;
                }
            }
            
            public string NRO_DOCTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.NRO_DOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NRO_DOCTOColumn] = value;
                }
            }
            
            public string RUT_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.table_Table.RUT_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RUT_CODEUDORColumn] = value;
                }
            }
            
            public string NOMBRE_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.table_Table.NOMBRE_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NOMBRE_CODEUDORColumn] = value;
                }
            }
            
            public string DIRECCION {
                get {
                    try {
                        return ((string)(this[this.table_Table.DIRECCIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DIRECCIONColumn] = value;
                }
            }
            
            public string CIUDAD {
                get {
                    try {
                        return ((string)(this[this.table_Table.CIUDADColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CIUDADColumn] = value;
                }
            }
            
            public string COMUNA {
                get {
                    try {
                        return ((string)(this[this.table_Table.COMUNAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.COMUNAColumn] = value;
                }
            }
            
            public string CIUDAD_SEDE {
                get {
                    try {
                        return ((string)(this[this.table_Table.CIUDAD_SEDEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CIUDAD_SEDEColumn] = value;
                }
            }
            
            public string FONO_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.table_Table.FONO_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FONO_CODEUDORColumn] = value;
                }
            }
            
            public string VALORES {
                get {
                    try {
                        return ((string)(this[this.table_Table.VALORESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VALORESColumn] = value;
                }
            }
            
            public string DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.table_Table.DESCRIPCIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DESCRIPCIONColumn] = value;
                }
            }
            
            public bool IsRUT_POSTNull() {
                return this.IsNull(this.table_Table.RUT_POSTColumn);
            }
            
            public void SetRUT_POSTNull() {
                this[this.table_Table.RUT_POSTColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.table_Table.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.table_Table.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_ENTERA_VNull() {
                return this.IsNull(this.table_Table.FECHA_ENTERA_VColumn);
            }
            
            public void SetFECHA_ENTERA_VNull() {
                this[this.table_Table.FECHA_ENTERA_VColumn] = System.Convert.DBNull;
            }
            
            public bool IsMES_VNull() {
                return this.IsNull(this.table_Table.MES_VColumn);
            }
            
            public void SetMES_VNull() {
                this[this.table_Table.MES_VColumn] = System.Convert.DBNull;
            }
            
            public bool IsDD_VNull() {
                return this.IsNull(this.table_Table.DD_VColumn);
            }
            
            public void SetDD_VNull() {
                this[this.table_Table.DD_VColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_VNull() {
                return this.IsNull(this.table_Table.ANO_VColumn);
            }
            
            public void SetANO_VNull() {
                this[this.table_Table.ANO_VColumn] = System.Convert.DBNull;
            }
            
            public bool IsMES_ENull() {
                return this.IsNull(this.table_Table.MES_EColumn);
            }
            
            public void SetMES_ENull() {
                this[this.table_Table.MES_EColumn] = System.Convert.DBNull;
            }
            
            public bool IsDD_ENull() {
                return this.IsNull(this.table_Table.DD_EColumn);
            }
            
            public void SetDD_ENull() {
                this[this.table_Table.DD_EColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_ENull() {
                return this.IsNull(this.table_Table.ANO_EColumn);
            }
            
            public void SetANO_ENull() {
                this[this.table_Table.ANO_EColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTONull() {
                return this.IsNull(this.table_Table.MONTOColumn);
            }
            
            public void SetMONTONull() {
                this[this.table_Table.MONTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNRO_DOCTONull() {
                return this.IsNull(this.table_Table.NRO_DOCTOColumn);
            }
            
            public void SetNRO_DOCTONull() {
                this[this.table_Table.NRO_DOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_CODEUDORNull() {
                return this.IsNull(this.table_Table.RUT_CODEUDORColumn);
            }
            
            public void SetRUT_CODEUDORNull() {
                this[this.table_Table.RUT_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_CODEUDORNull() {
                return this.IsNull(this.table_Table.NOMBRE_CODEUDORColumn);
            }
            
            public void SetNOMBRE_CODEUDORNull() {
                this[this.table_Table.NOMBRE_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECCIONNull() {
                return this.IsNull(this.table_Table.DIRECCIONColumn);
            }
            
            public void SetDIRECCIONNull() {
                this[this.table_Table.DIRECCIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDADNull() {
                return this.IsNull(this.table_Table.CIUDADColumn);
            }
            
            public void SetCIUDADNull() {
                this[this.table_Table.CIUDADColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMUNANull() {
                return this.IsNull(this.table_Table.COMUNAColumn);
            }
            
            public void SetCOMUNANull() {
                this[this.table_Table.COMUNAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDAD_SEDENull() {
                return this.IsNull(this.table_Table.CIUDAD_SEDEColumn);
            }
            
            public void SetCIUDAD_SEDENull() {
                this[this.table_Table.CIUDAD_SEDEColumn] = System.Convert.DBNull;
            }
            
            public bool IsFONO_CODEUDORNull() {
                return this.IsNull(this.table_Table.FONO_CODEUDORColumn);
            }
            
            public void SetFONO_CODEUDORNull() {
                this[this.table_Table.FONO_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsVALORESNull() {
                return this.IsNull(this.table_Table.VALORESColumn);
            }
            
            public void SetVALORESNull() {
                this[this.table_Table.VALORESColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIPCIONNull() {
                return this.IsNull(this.table_Table.DESCRIPCIONColumn);
            }
            
            public void SetDESCRIPCIONNull() {
                this[this.table_Table.DESCRIPCIONColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
