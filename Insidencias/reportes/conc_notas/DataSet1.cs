//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace conc_notas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private DETALLEDataTable tableDETALLE;
        
        private ENCABEZADODataTable tableENCABEZADO;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["DETALLE"] != null)) {
                    this.Tables.Add(new DETALLEDataTable(ds.Tables["DETALLE"]));
                }
                if ((ds.Tables["ENCABEZADO"] != null)) {
                    this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DETALLEDataTable DETALLE {
            get {
                return this.tableDETALLE;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENCABEZADODataTable ENCABEZADO {
            get {
                return this.tableENCABEZADO;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["DETALLE"] != null)) {
                this.Tables.Add(new DETALLEDataTable(ds.Tables["DETALLE"]));
            }
            if ((ds.Tables["ENCABEZADO"] != null)) {
                this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableDETALLE = ((DETALLEDataTable)(this.Tables["DETALLE"]));
            if ((this.tableDETALLE != null)) {
                this.tableDETALLE.InitVars();
            }
            this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Tables["ENCABEZADO"]));
            if ((this.tableENCABEZADO != null)) {
                this.tableENCABEZADO.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableDETALLE = new DETALLEDataTable();
            this.Tables.Add(this.tableDETALLE);
            this.tableENCABEZADO = new ENCABEZADODataTable();
            this.Tables.Add(this.tableENCABEZADO);
        }
        
        private bool ShouldSerializeDETALLE() {
            return false;
        }
        
        private bool ShouldSerializeENCABEZADO() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void DETALLERowChangeEventHandler(object sender, DETALLERowChangeEvent e);
        
        public delegate void ENCABEZADORowChangeEventHandler(object sender, ENCABEZADORowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DETALLEDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnT;
            
            private DataColumn columnASIG_TDESC;
            
            private DataColumn columnCARG_NNOTA_FINAL;
            
            private DataColumn columnANOS_CCOD;
            
            private DataColumn columnPLEC_CCOD;
            
            private DataColumn columnP1;
            
            private DataColumn columnP2;
            
            private DataColumn columnASIG_CCOD;
            
            private DataColumn columnANO_CURSADO;
            
            private DataColumn columnPERIODO;
            
            private DataColumn columnESTADO;
            
            private DataColumn columncantidad;
            
            internal DETALLEDataTable() : 
                    base("DETALLE") {
                this.InitClass();
            }
            
            internal DETALLEDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn TColumn {
                get {
                    return this.columnT;
                }
            }
            
            internal DataColumn ASIG_TDESCColumn {
                get {
                    return this.columnASIG_TDESC;
                }
            }
            
            internal DataColumn CARG_NNOTA_FINALColumn {
                get {
                    return this.columnCARG_NNOTA_FINAL;
                }
            }
            
            internal DataColumn ANOS_CCODColumn {
                get {
                    return this.columnANOS_CCOD;
                }
            }
            
            internal DataColumn PLEC_CCODColumn {
                get {
                    return this.columnPLEC_CCOD;
                }
            }
            
            internal DataColumn P1Column {
                get {
                    return this.columnP1;
                }
            }
            
            internal DataColumn P2Column {
                get {
                    return this.columnP2;
                }
            }
            
            internal DataColumn ASIG_CCODColumn {
                get {
                    return this.columnASIG_CCOD;
                }
            }
            
            internal DataColumn ANO_CURSADOColumn {
                get {
                    return this.columnANO_CURSADO;
                }
            }
            
            internal DataColumn PERIODOColumn {
                get {
                    return this.columnPERIODO;
                }
            }
            
            internal DataColumn ESTADOColumn {
                get {
                    return this.columnESTADO;
                }
            }
            
            internal DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            public DETALLERow this[int index] {
                get {
                    return ((DETALLERow)(this.Rows[index]));
                }
            }
            
            public event DETALLERowChangeEventHandler DETALLERowChanged;
            
            public event DETALLERowChangeEventHandler DETALLERowChanging;
            
            public event DETALLERowChangeEventHandler DETALLERowDeleted;
            
            public event DETALLERowChangeEventHandler DETALLERowDeleting;
            
            public void AddDETALLERow(DETALLERow row) {
                this.Rows.Add(row);
            }
            
            public DETALLERow AddDETALLERow(long T, string ASIG_TDESC, System.Decimal CARG_NNOTA_FINAL, string ANOS_CCOD, string PLEC_CCOD, System.Decimal P1, System.Decimal P2, string ASIG_CCOD, string ANO_CURSADO, string PERIODO, string ESTADO, string cantidad) {
                DETALLERow rowDETALLERow = ((DETALLERow)(this.NewRow()));
                rowDETALLERow.ItemArray = new object[] {
                        T,
                        ASIG_TDESC,
                        CARG_NNOTA_FINAL,
                        ANOS_CCOD,
                        PLEC_CCOD,
                        P1,
                        P2,
                        ASIG_CCOD,
                        ANO_CURSADO,
                        PERIODO,
                        ESTADO,
                        cantidad};
                this.Rows.Add(rowDETALLERow);
                return rowDETALLERow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DETALLEDataTable cln = ((DETALLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DETALLEDataTable();
            }
            
            internal void InitVars() {
                this.columnT = this.Columns["T"];
                this.columnASIG_TDESC = this.Columns["ASIG_TDESC"];
                this.columnCARG_NNOTA_FINAL = this.Columns["CARG_NNOTA_FINAL"];
                this.columnANOS_CCOD = this.Columns["ANOS_CCOD"];
                this.columnPLEC_CCOD = this.Columns["PLEC_CCOD"];
                this.columnP1 = this.Columns["P1"];
                this.columnP2 = this.Columns["P2"];
                this.columnASIG_CCOD = this.Columns["ASIG_CCOD"];
                this.columnANO_CURSADO = this.Columns["ANO_CURSADO"];
                this.columnPERIODO = this.Columns["PERIODO"];
                this.columnESTADO = this.Columns["ESTADO"];
                this.columncantidad = this.Columns["cantidad"];
            }
            
            private void InitClass() {
                this.columnT = new DataColumn("T", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT);
                this.columnASIG_TDESC = new DataColumn("ASIG_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_TDESC);
                this.columnCARG_NNOTA_FINAL = new DataColumn("CARG_NNOTA_FINAL", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_FINAL);
                this.columnANOS_CCOD = new DataColumn("ANOS_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANOS_CCOD);
                this.columnPLEC_CCOD = new DataColumn("PLEC_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPLEC_CCOD);
                this.columnP1 = new DataColumn("P1", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP1);
                this.columnP2 = new DataColumn("P2", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnP2);
                this.columnASIG_CCOD = new DataColumn("ASIG_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_CCOD);
                this.columnANO_CURSADO = new DataColumn("ANO_CURSADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_CURSADO);
                this.columnPERIODO = new DataColumn("PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO);
                this.columnESTADO = new DataColumn("ESTADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESTADO);
                this.columncantidad = new DataColumn("cantidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncantidad);
                this.columnT.ReadOnly = true;
            }
            
            public DETALLERow NewDETALLERow() {
                return ((DETALLERow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DETALLERow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DETALLERow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DETALLERowChanged != null)) {
                    this.DETALLERowChanged(this, new DETALLERowChangeEvent(((DETALLERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DETALLERowChanging != null)) {
                    this.DETALLERowChanging(this, new DETALLERowChangeEvent(((DETALLERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DETALLERowDeleted != null)) {
                    this.DETALLERowDeleted(this, new DETALLERowChangeEvent(((DETALLERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DETALLERowDeleting != null)) {
                    this.DETALLERowDeleting(this, new DETALLERowChangeEvent(((DETALLERow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDETALLERow(DETALLERow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DETALLERow : DataRow {
            
            private DETALLEDataTable tableDETALLE;
            
            internal DETALLERow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDETALLE = ((DETALLEDataTable)(this.Table));
            }
            
            public long T {
                get {
                    try {
                        return ((long)(this[this.tableDETALLE.TColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.TColumn] = value;
                }
            }
            
            public string ASIG_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.ASIG_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.ASIG_TDESCColumn] = value;
                }
            }
            
            public System.Decimal CARG_NNOTA_FINAL {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableDETALLE.CARG_NNOTA_FINALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.CARG_NNOTA_FINALColumn] = value;
                }
            }
            
            public string ANOS_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.ANOS_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.ANOS_CCODColumn] = value;
                }
            }
            
            public string PLEC_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.PLEC_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.PLEC_CCODColumn] = value;
                }
            }
            
            public System.Decimal P1 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableDETALLE.P1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.P1Column] = value;
                }
            }
            
            public System.Decimal P2 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableDETALLE.P2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.P2Column] = value;
                }
            }
            
            public string ASIG_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.ASIG_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.ASIG_CCODColumn] = value;
                }
            }
            
            public string ANO_CURSADO {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.ANO_CURSADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.ANO_CURSADOColumn] = value;
                }
            }
            
            public string PERIODO {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.PERIODOColumn] = value;
                }
            }
            
            public string ESTADO {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.ESTADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.ESTADOColumn] = value;
                }
            }
            
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE.cantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE.cantidadColumn] = value;
                }
            }
            
            public bool IsTNull() {
                return this.IsNull(this.tableDETALLE.TColumn);
            }
            
            public void SetTNull() {
                this[this.tableDETALLE.TColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_TDESCNull() {
                return this.IsNull(this.tableDETALLE.ASIG_TDESCColumn);
            }
            
            public void SetASIG_TDESCNull() {
                this[this.tableDETALLE.ASIG_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_FINALNull() {
                return this.IsNull(this.tableDETALLE.CARG_NNOTA_FINALColumn);
            }
            
            public void SetCARG_NNOTA_FINALNull() {
                this[this.tableDETALLE.CARG_NNOTA_FINALColumn] = System.Convert.DBNull;
            }
            
            public bool IsANOS_CCODNull() {
                return this.IsNull(this.tableDETALLE.ANOS_CCODColumn);
            }
            
            public void SetANOS_CCODNull() {
                this[this.tableDETALLE.ANOS_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsPLEC_CCODNull() {
                return this.IsNull(this.tableDETALLE.PLEC_CCODColumn);
            }
            
            public void SetPLEC_CCODNull() {
                this[this.tableDETALLE.PLEC_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsP1Null() {
                return this.IsNull(this.tableDETALLE.P1Column);
            }
            
            public void SetP1Null() {
                this[this.tableDETALLE.P1Column] = System.Convert.DBNull;
            }
            
            public bool IsP2Null() {
                return this.IsNull(this.tableDETALLE.P2Column);
            }
            
            public void SetP2Null() {
                this[this.tableDETALLE.P2Column] = System.Convert.DBNull;
            }
            
            public bool IsASIG_CCODNull() {
                return this.IsNull(this.tableDETALLE.ASIG_CCODColumn);
            }
            
            public void SetASIG_CCODNull() {
                this[this.tableDETALLE.ASIG_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_CURSADONull() {
                return this.IsNull(this.tableDETALLE.ANO_CURSADOColumn);
            }
            
            public void SetANO_CURSADONull() {
                this[this.tableDETALLE.ANO_CURSADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODONull() {
                return this.IsNull(this.tableDETALLE.PERIODOColumn);
            }
            
            public void SetPERIODONull() {
                this[this.tableDETALLE.PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsESTADONull() {
                return this.IsNull(this.tableDETALLE.ESTADOColumn);
            }
            
            public void SetESTADONull() {
                this[this.tableDETALLE.ESTADOColumn] = System.Convert.DBNull;
            }
            
            public bool IscantidadNull() {
                return this.IsNull(this.tableDETALLE.cantidadColumn);
            }
            
            public void SetcantidadNull() {
                this[this.tableDETALLE.cantidadColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DETALLERowChangeEvent : EventArgs {
            
            private DETALLERow eventRow;
            
            private DataRowAction eventAction;
            
            public DETALLERowChangeEvent(DETALLERow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DETALLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADODataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnT;
            
            private DataColumn columnRUT;
            
            private DataColumn columnNOMBRE;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnANO_INGRESO_PLAN;
            
            private DataColumn columnDUAS_TDESC;
            
            private DataColumn columnSEDE_SECRET;
            
            private DataColumn columnSEDE_TREGISTR;
            
            private DataColumn columnDESC_PERIODO;
            
            private DataColumn columnTITULO;
            
            private DataColumn columnPOR_PERIODO;
            
            private DataColumn columnSEDE;
            
            private DataColumn columnTDES_TDESC;
            
            private DataColumn columnJORNADA;
            
            private DataColumn columnCONCEPTO_NOTAS;
            
            private DataColumn columnCALCULO_NOTAS;
            
            private DataColumn columnRESULTADO_NOTAS;
            
            private DataColumn columnCONCEPTO_TESIS;
            
            private DataColumn columnCALCULO_TESIS;
            
            private DataColumn columnRESULTADO_TESIS;
            
            private DataColumn columnCONCEPTO_PRACTICA;
            
            private DataColumn columnCALCULO_PRACTICA;
            
            private DataColumn columnRESULTADO_PRACTICA;
            
            private DataColumn columnCONCEPTO_FINAL;
            
            private DataColumn columnNOTA_FINAL;
            
            private DataColumn columnCONCEPTO_NOTA_TESIS;
            
            private DataColumn columnCALCULO_NOTA_TESIS;
            
            private DataColumn columnRESULTADO_NOTA_TESIS;
            
            internal ENCABEZADODataTable() : 
                    base("ENCABEZADO") {
                this.InitClass();
            }
            
            internal ENCABEZADODataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn TColumn {
                get {
                    return this.columnT;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn NOMBREColumn {
                get {
                    return this.columnNOMBRE;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn ANO_INGRESO_PLANColumn {
                get {
                    return this.columnANO_INGRESO_PLAN;
                }
            }
            
            internal DataColumn DUAS_TDESCColumn {
                get {
                    return this.columnDUAS_TDESC;
                }
            }
            
            internal DataColumn SEDE_SECRETColumn {
                get {
                    return this.columnSEDE_SECRET;
                }
            }
            
            internal DataColumn SEDE_TREGISTRColumn {
                get {
                    return this.columnSEDE_TREGISTR;
                }
            }
            
            internal DataColumn DESC_PERIODOColumn {
                get {
                    return this.columnDESC_PERIODO;
                }
            }
            
            internal DataColumn TITULOColumn {
                get {
                    return this.columnTITULO;
                }
            }
            
            internal DataColumn POR_PERIODOColumn {
                get {
                    return this.columnPOR_PERIODO;
                }
            }
            
            internal DataColumn SEDEColumn {
                get {
                    return this.columnSEDE;
                }
            }
            
            internal DataColumn TDES_TDESCColumn {
                get {
                    return this.columnTDES_TDESC;
                }
            }
            
            internal DataColumn JORNADAColumn {
                get {
                    return this.columnJORNADA;
                }
            }
            
            internal DataColumn CONCEPTO_NOTASColumn {
                get {
                    return this.columnCONCEPTO_NOTAS;
                }
            }
            
            internal DataColumn CALCULO_NOTASColumn {
                get {
                    return this.columnCALCULO_NOTAS;
                }
            }
            
            internal DataColumn RESULTADO_NOTASColumn {
                get {
                    return this.columnRESULTADO_NOTAS;
                }
            }
            
            internal DataColumn CONCEPTO_TESISColumn {
                get {
                    return this.columnCONCEPTO_TESIS;
                }
            }
            
            internal DataColumn CALCULO_TESISColumn {
                get {
                    return this.columnCALCULO_TESIS;
                }
            }
            
            internal DataColumn RESULTADO_TESISColumn {
                get {
                    return this.columnRESULTADO_TESIS;
                }
            }
            
            internal DataColumn CONCEPTO_PRACTICAColumn {
                get {
                    return this.columnCONCEPTO_PRACTICA;
                }
            }
            
            internal DataColumn CALCULO_PRACTICAColumn {
                get {
                    return this.columnCALCULO_PRACTICA;
                }
            }
            
            internal DataColumn RESULTADO_PRACTICAColumn {
                get {
                    return this.columnRESULTADO_PRACTICA;
                }
            }
            
            internal DataColumn CONCEPTO_FINALColumn {
                get {
                    return this.columnCONCEPTO_FINAL;
                }
            }
            
            internal DataColumn NOTA_FINALColumn {
                get {
                    return this.columnNOTA_FINAL;
                }
            }
            
            internal DataColumn CONCEPTO_NOTA_TESISColumn {
                get {
                    return this.columnCONCEPTO_NOTA_TESIS;
                }
            }
            
            internal DataColumn CALCULO_NOTA_TESISColumn {
                get {
                    return this.columnCALCULO_NOTA_TESIS;
                }
            }
            
            internal DataColumn RESULTADO_NOTA_TESISColumn {
                get {
                    return this.columnRESULTADO_NOTA_TESIS;
                }
            }
            
            public ENCABEZADORow this[int index] {
                get {
                    return ((ENCABEZADORow)(this.Rows[index]));
                }
            }
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanged;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanging;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleted;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleting;
            
            public void AddENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Add(row);
            }
            
            public ENCABEZADORow AddENCABEZADORow(
                        long T, 
                        string RUT, 
                        string NOMBRE, 
                        string CARRERA, 
                        string ANO_INGRESO_PLAN, 
                        string DUAS_TDESC, 
                        string SEDE_SECRET, 
                        string SEDE_TREGISTR, 
                        string DESC_PERIODO, 
                        string TITULO, 
                        string POR_PERIODO, 
                        string SEDE, 
                        string TDES_TDESC, 
                        string JORNADA, 
                        string CONCEPTO_NOTAS, 
                        string CALCULO_NOTAS, 
                        string RESULTADO_NOTAS, 
                        string CONCEPTO_TESIS, 
                        string CALCULO_TESIS, 
                        string RESULTADO_TESIS, 
                        string CONCEPTO_PRACTICA, 
                        string CALCULO_PRACTICA, 
                        string RESULTADO_PRACTICA, 
                        string CONCEPTO_FINAL, 
                        string NOTA_FINAL, 
                        string CONCEPTO_NOTA_TESIS, 
                        string CALCULO_NOTA_TESIS, 
                        string RESULTADO_NOTA_TESIS) {
                ENCABEZADORow rowENCABEZADORow = ((ENCABEZADORow)(this.NewRow()));
                rowENCABEZADORow.ItemArray = new object[] {
                        T,
                        RUT,
                        NOMBRE,
                        CARRERA,
                        ANO_INGRESO_PLAN,
                        DUAS_TDESC,
                        SEDE_SECRET,
                        SEDE_TREGISTR,
                        DESC_PERIODO,
                        TITULO,
                        POR_PERIODO,
                        SEDE,
                        TDES_TDESC,
                        JORNADA,
                        CONCEPTO_NOTAS,
                        CALCULO_NOTAS,
                        RESULTADO_NOTAS,
                        CONCEPTO_TESIS,
                        CALCULO_TESIS,
                        RESULTADO_TESIS,
                        CONCEPTO_PRACTICA,
                        CALCULO_PRACTICA,
                        RESULTADO_PRACTICA,
                        CONCEPTO_FINAL,
                        NOTA_FINAL,
                        CONCEPTO_NOTA_TESIS,
                        CALCULO_NOTA_TESIS,
                        RESULTADO_NOTA_TESIS};
                this.Rows.Add(rowENCABEZADORow);
                return rowENCABEZADORow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ENCABEZADODataTable cln = ((ENCABEZADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ENCABEZADODataTable();
            }
            
            internal void InitVars() {
                this.columnT = this.Columns["T"];
                this.columnRUT = this.Columns["RUT"];
                this.columnNOMBRE = this.Columns["NOMBRE"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnANO_INGRESO_PLAN = this.Columns["ANO_INGRESO_PLAN"];
                this.columnDUAS_TDESC = this.Columns["DUAS_TDESC"];
                this.columnSEDE_SECRET = this.Columns["SEDE_SECRET"];
                this.columnSEDE_TREGISTR = this.Columns["SEDE_TREGISTR"];
                this.columnDESC_PERIODO = this.Columns["DESC_PERIODO"];
                this.columnTITULO = this.Columns["TITULO"];
                this.columnPOR_PERIODO = this.Columns["POR_PERIODO"];
                this.columnSEDE = this.Columns["SEDE"];
                this.columnTDES_TDESC = this.Columns["TDES_TDESC"];
                this.columnJORNADA = this.Columns["JORNADA"];
                this.columnCONCEPTO_NOTAS = this.Columns["CONCEPTO_NOTAS"];
                this.columnCALCULO_NOTAS = this.Columns["CALCULO_NOTAS"];
                this.columnRESULTADO_NOTAS = this.Columns["RESULTADO_NOTAS"];
                this.columnCONCEPTO_TESIS = this.Columns["CONCEPTO_TESIS"];
                this.columnCALCULO_TESIS = this.Columns["CALCULO_TESIS"];
                this.columnRESULTADO_TESIS = this.Columns["RESULTADO_TESIS"];
                this.columnCONCEPTO_PRACTICA = this.Columns["CONCEPTO_PRACTICA"];
                this.columnCALCULO_PRACTICA = this.Columns["CALCULO_PRACTICA"];
                this.columnRESULTADO_PRACTICA = this.Columns["RESULTADO_PRACTICA"];
                this.columnCONCEPTO_FINAL = this.Columns["CONCEPTO_FINAL"];
                this.columnNOTA_FINAL = this.Columns["NOTA_FINAL"];
                this.columnCONCEPTO_NOTA_TESIS = this.Columns["CONCEPTO_NOTA_TESIS"];
                this.columnCALCULO_NOTA_TESIS = this.Columns["CALCULO_NOTA_TESIS"];
                this.columnRESULTADO_NOTA_TESIS = this.Columns["RESULTADO_NOTA_TESIS"];
            }
            
            private void InitClass() {
                this.columnT = new DataColumn("T", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnT);
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnNOMBRE = new DataColumn("NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnANO_INGRESO_PLAN = new DataColumn("ANO_INGRESO_PLAN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_INGRESO_PLAN);
                this.columnDUAS_TDESC = new DataColumn("DUAS_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDUAS_TDESC);
                this.columnSEDE_SECRET = new DataColumn("SEDE_SECRET", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_SECRET);
                this.columnSEDE_TREGISTR = new DataColumn("SEDE_TREGISTR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TREGISTR);
                this.columnDESC_PERIODO = new DataColumn("DESC_PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESC_PERIODO);
                this.columnTITULO = new DataColumn("TITULO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTITULO);
                this.columnPOR_PERIODO = new DataColumn("POR_PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPOR_PERIODO);
                this.columnSEDE = new DataColumn("SEDE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE);
                this.columnTDES_TDESC = new DataColumn("TDES_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTDES_TDESC);
                this.columnJORNADA = new DataColumn("JORNADA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJORNADA);
                this.columnCONCEPTO_NOTAS = new DataColumn("CONCEPTO_NOTAS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONCEPTO_NOTAS);
                this.columnCALCULO_NOTAS = new DataColumn("CALCULO_NOTAS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCALCULO_NOTAS);
                this.columnRESULTADO_NOTAS = new DataColumn("RESULTADO_NOTAS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRESULTADO_NOTAS);
                this.columnCONCEPTO_TESIS = new DataColumn("CONCEPTO_TESIS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONCEPTO_TESIS);
                this.columnCALCULO_TESIS = new DataColumn("CALCULO_TESIS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCALCULO_TESIS);
                this.columnRESULTADO_TESIS = new DataColumn("RESULTADO_TESIS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRESULTADO_TESIS);
                this.columnCONCEPTO_PRACTICA = new DataColumn("CONCEPTO_PRACTICA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONCEPTO_PRACTICA);
                this.columnCALCULO_PRACTICA = new DataColumn("CALCULO_PRACTICA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCALCULO_PRACTICA);
                this.columnRESULTADO_PRACTICA = new DataColumn("RESULTADO_PRACTICA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRESULTADO_PRACTICA);
                this.columnCONCEPTO_FINAL = new DataColumn("CONCEPTO_FINAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONCEPTO_FINAL);
                this.columnNOTA_FINAL = new DataColumn("NOTA_FINAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOTA_FINAL);
                this.columnCONCEPTO_NOTA_TESIS = new DataColumn("CONCEPTO_NOTA_TESIS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONCEPTO_NOTA_TESIS);
                this.columnCALCULO_NOTA_TESIS = new DataColumn("CALCULO_NOTA_TESIS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCALCULO_NOTA_TESIS);
                this.columnRESULTADO_NOTA_TESIS = new DataColumn("RESULTADO_NOTA_TESIS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRESULTADO_NOTA_TESIS);
                this.columnT.ReadOnly = true;
            }
            
            public ENCABEZADORow NewENCABEZADORow() {
                return ((ENCABEZADORow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ENCABEZADORow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ENCABEZADORow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENCABEZADORowChanged != null)) {
                    this.ENCABEZADORowChanged(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENCABEZADORowChanging != null)) {
                    this.ENCABEZADORowChanging(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENCABEZADORowDeleted != null)) {
                    this.ENCABEZADORowDeleted(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENCABEZADORowDeleting != null)) {
                    this.ENCABEZADORowDeleting(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORow : DataRow {
            
            private ENCABEZADODataTable tableENCABEZADO;
            
            internal ENCABEZADORow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Table));
            }
            
            public long T {
                get {
                    try {
                        return ((long)(this[this.tableENCABEZADO.TColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.TColumn] = value;
                }
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.RUTColumn] = value;
                }
            }
            
            public string NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.NOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.NOMBREColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CARRERAColumn] = value;
                }
            }
            
            public string ANO_INGRESO_PLAN {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.ANO_INGRESO_PLANColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ANO_INGRESO_PLANColumn] = value;
                }
            }
            
            public string DUAS_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.DUAS_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.DUAS_TDESCColumn] = value;
                }
            }
            
            public string SEDE_SECRET {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.SEDE_SECRETColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.SEDE_SECRETColumn] = value;
                }
            }
            
            public string SEDE_TREGISTR {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.SEDE_TREGISTRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.SEDE_TREGISTRColumn] = value;
                }
            }
            
            public string DESC_PERIODO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.DESC_PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.DESC_PERIODOColumn] = value;
                }
            }
            
            public string TITULO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.TITULOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.TITULOColumn] = value;
                }
            }
            
            public string POR_PERIODO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.POR_PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.POR_PERIODOColumn] = value;
                }
            }
            
            public string SEDE {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.SEDEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.SEDEColumn] = value;
                }
            }
            
            public string TDES_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.TDES_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.TDES_TDESCColumn] = value;
                }
            }
            
            public string JORNADA {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.JORNADAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.JORNADAColumn] = value;
                }
            }
            
            public string CONCEPTO_NOTAS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CONCEPTO_NOTASColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CONCEPTO_NOTASColumn] = value;
                }
            }
            
            public string CALCULO_NOTAS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CALCULO_NOTASColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CALCULO_NOTASColumn] = value;
                }
            }
            
            public string RESULTADO_NOTAS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.RESULTADO_NOTASColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.RESULTADO_NOTASColumn] = value;
                }
            }
            
            public string CONCEPTO_TESIS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CONCEPTO_TESISColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CONCEPTO_TESISColumn] = value;
                }
            }
            
            public string CALCULO_TESIS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CALCULO_TESISColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CALCULO_TESISColumn] = value;
                }
            }
            
            public string RESULTADO_TESIS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.RESULTADO_TESISColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.RESULTADO_TESISColumn] = value;
                }
            }
            
            public string CONCEPTO_PRACTICA {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CONCEPTO_PRACTICAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CONCEPTO_PRACTICAColumn] = value;
                }
            }
            
            public string CALCULO_PRACTICA {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CALCULO_PRACTICAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CALCULO_PRACTICAColumn] = value;
                }
            }
            
            public string RESULTADO_PRACTICA {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.RESULTADO_PRACTICAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.RESULTADO_PRACTICAColumn] = value;
                }
            }
            
            public string CONCEPTO_FINAL {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CONCEPTO_FINALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CONCEPTO_FINALColumn] = value;
                }
            }
            
            public string NOTA_FINAL {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.NOTA_FINALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.NOTA_FINALColumn] = value;
                }
            }
            
            public string CONCEPTO_NOTA_TESIS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CONCEPTO_NOTA_TESISColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CONCEPTO_NOTA_TESISColumn] = value;
                }
            }
            
            public string CALCULO_NOTA_TESIS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.CALCULO_NOTA_TESISColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.CALCULO_NOTA_TESISColumn] = value;
                }
            }
            
            public string RESULTADO_NOTA_TESIS {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.RESULTADO_NOTA_TESISColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.RESULTADO_NOTA_TESISColumn] = value;
                }
            }
            
            public bool IsTNull() {
                return this.IsNull(this.tableENCABEZADO.TColumn);
            }
            
            public void SetTNull() {
                this[this.tableENCABEZADO.TColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.tableENCABEZADO.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.tableENCABEZADO.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRENull() {
                return this.IsNull(this.tableENCABEZADO.NOMBREColumn);
            }
            
            public void SetNOMBRENull() {
                this[this.tableENCABEZADO.NOMBREColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.tableENCABEZADO.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.tableENCABEZADO.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_INGRESO_PLANNull() {
                return this.IsNull(this.tableENCABEZADO.ANO_INGRESO_PLANColumn);
            }
            
            public void SetANO_INGRESO_PLANNull() {
                this[this.tableENCABEZADO.ANO_INGRESO_PLANColumn] = System.Convert.DBNull;
            }
            
            public bool IsDUAS_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.DUAS_TDESCColumn);
            }
            
            public void SetDUAS_TDESCNull() {
                this[this.tableENCABEZADO.DUAS_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_SECRETNull() {
                return this.IsNull(this.tableENCABEZADO.SEDE_SECRETColumn);
            }
            
            public void SetSEDE_SECRETNull() {
                this[this.tableENCABEZADO.SEDE_SECRETColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_TREGISTRNull() {
                return this.IsNull(this.tableENCABEZADO.SEDE_TREGISTRColumn);
            }
            
            public void SetSEDE_TREGISTRNull() {
                this[this.tableENCABEZADO.SEDE_TREGISTRColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESC_PERIODONull() {
                return this.IsNull(this.tableENCABEZADO.DESC_PERIODOColumn);
            }
            
            public void SetDESC_PERIODONull() {
                this[this.tableENCABEZADO.DESC_PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTITULONull() {
                return this.IsNull(this.tableENCABEZADO.TITULOColumn);
            }
            
            public void SetTITULONull() {
                this[this.tableENCABEZADO.TITULOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPOR_PERIODONull() {
                return this.IsNull(this.tableENCABEZADO.POR_PERIODOColumn);
            }
            
            public void SetPOR_PERIODONull() {
                this[this.tableENCABEZADO.POR_PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDENull() {
                return this.IsNull(this.tableENCABEZADO.SEDEColumn);
            }
            
            public void SetSEDENull() {
                this[this.tableENCABEZADO.SEDEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTDES_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.TDES_TDESCColumn);
            }
            
            public void SetTDES_TDESCNull() {
                this[this.tableENCABEZADO.TDES_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsJORNADANull() {
                return this.IsNull(this.tableENCABEZADO.JORNADAColumn);
            }
            
            public void SetJORNADANull() {
                this[this.tableENCABEZADO.JORNADAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONCEPTO_NOTASNull() {
                return this.IsNull(this.tableENCABEZADO.CONCEPTO_NOTASColumn);
            }
            
            public void SetCONCEPTO_NOTASNull() {
                this[this.tableENCABEZADO.CONCEPTO_NOTASColumn] = System.Convert.DBNull;
            }
            
            public bool IsCALCULO_NOTASNull() {
                return this.IsNull(this.tableENCABEZADO.CALCULO_NOTASColumn);
            }
            
            public void SetCALCULO_NOTASNull() {
                this[this.tableENCABEZADO.CALCULO_NOTASColumn] = System.Convert.DBNull;
            }
            
            public bool IsRESULTADO_NOTASNull() {
                return this.IsNull(this.tableENCABEZADO.RESULTADO_NOTASColumn);
            }
            
            public void SetRESULTADO_NOTASNull() {
                this[this.tableENCABEZADO.RESULTADO_NOTASColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONCEPTO_TESISNull() {
                return this.IsNull(this.tableENCABEZADO.CONCEPTO_TESISColumn);
            }
            
            public void SetCONCEPTO_TESISNull() {
                this[this.tableENCABEZADO.CONCEPTO_TESISColumn] = System.Convert.DBNull;
            }
            
            public bool IsCALCULO_TESISNull() {
                return this.IsNull(this.tableENCABEZADO.CALCULO_TESISColumn);
            }
            
            public void SetCALCULO_TESISNull() {
                this[this.tableENCABEZADO.CALCULO_TESISColumn] = System.Convert.DBNull;
            }
            
            public bool IsRESULTADO_TESISNull() {
                return this.IsNull(this.tableENCABEZADO.RESULTADO_TESISColumn);
            }
            
            public void SetRESULTADO_TESISNull() {
                this[this.tableENCABEZADO.RESULTADO_TESISColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONCEPTO_PRACTICANull() {
                return this.IsNull(this.tableENCABEZADO.CONCEPTO_PRACTICAColumn);
            }
            
            public void SetCONCEPTO_PRACTICANull() {
                this[this.tableENCABEZADO.CONCEPTO_PRACTICAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCALCULO_PRACTICANull() {
                return this.IsNull(this.tableENCABEZADO.CALCULO_PRACTICAColumn);
            }
            
            public void SetCALCULO_PRACTICANull() {
                this[this.tableENCABEZADO.CALCULO_PRACTICAColumn] = System.Convert.DBNull;
            }
            
            public bool IsRESULTADO_PRACTICANull() {
                return this.IsNull(this.tableENCABEZADO.RESULTADO_PRACTICAColumn);
            }
            
            public void SetRESULTADO_PRACTICANull() {
                this[this.tableENCABEZADO.RESULTADO_PRACTICAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONCEPTO_FINALNull() {
                return this.IsNull(this.tableENCABEZADO.CONCEPTO_FINALColumn);
            }
            
            public void SetCONCEPTO_FINALNull() {
                this[this.tableENCABEZADO.CONCEPTO_FINALColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOTA_FINALNull() {
                return this.IsNull(this.tableENCABEZADO.NOTA_FINALColumn);
            }
            
            public void SetNOTA_FINALNull() {
                this[this.tableENCABEZADO.NOTA_FINALColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONCEPTO_NOTA_TESISNull() {
                return this.IsNull(this.tableENCABEZADO.CONCEPTO_NOTA_TESISColumn);
            }
            
            public void SetCONCEPTO_NOTA_TESISNull() {
                this[this.tableENCABEZADO.CONCEPTO_NOTA_TESISColumn] = System.Convert.DBNull;
            }
            
            public bool IsCALCULO_NOTA_TESISNull() {
                return this.IsNull(this.tableENCABEZADO.CALCULO_NOTA_TESISColumn);
            }
            
            public void SetCALCULO_NOTA_TESISNull() {
                this[this.tableENCABEZADO.CALCULO_NOTA_TESISColumn] = System.Convert.DBNull;
            }
            
            public bool IsRESULTADO_NOTA_TESISNull() {
                return this.IsNull(this.tableENCABEZADO.RESULTADO_NOTA_TESISColumn);
            }
            
            public void SetRESULTADO_NOTA_TESISNull() {
                this[this.tableENCABEZADO.RESULTADO_NOTA_TESISColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORowChangeEvent : EventArgs {
            
            private ENCABEZADORow eventRow;
            
            private DataRowAction eventAction;
            
            public ENCABEZADORowChangeEvent(ENCABEZADORow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ENCABEZADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
