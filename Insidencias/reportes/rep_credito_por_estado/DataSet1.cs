//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace rep_credito_por_estado {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private CARRERAS_ESTADOSDataTable tableCARRERAS_ESTADOS;
        
        private ENCABEZADODataTable tableENCABEZADO;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CARRERAS_ESTADOS"] != null)) {
                    this.Tables.Add(new CARRERAS_ESTADOSDataTable(ds.Tables["CARRERAS_ESTADOS"]));
                }
                if ((ds.Tables["ENCABEZADO"] != null)) {
                    this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CARRERAS_ESTADOSDataTable CARRERAS_ESTADOS {
            get {
                return this.tableCARRERAS_ESTADOS;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENCABEZADODataTable ENCABEZADO {
            get {
                return this.tableENCABEZADO;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["CARRERAS_ESTADOS"] != null)) {
                this.Tables.Add(new CARRERAS_ESTADOSDataTable(ds.Tables["CARRERAS_ESTADOS"]));
            }
            if ((ds.Tables["ENCABEZADO"] != null)) {
                this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableCARRERAS_ESTADOS = ((CARRERAS_ESTADOSDataTable)(this.Tables["CARRERAS_ESTADOS"]));
            if ((this.tableCARRERAS_ESTADOS != null)) {
                this.tableCARRERAS_ESTADOS.InitVars();
            }
            this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Tables["ENCABEZADO"]));
            if ((this.tableENCABEZADO != null)) {
                this.tableENCABEZADO.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCARRERAS_ESTADOS = new CARRERAS_ESTADOSDataTable();
            this.Tables.Add(this.tableCARRERAS_ESTADOS);
            this.tableENCABEZADO = new ENCABEZADODataTable();
            this.Tables.Add(this.tableENCABEZADO);
        }
        
        private bool ShouldSerializeCARRERAS_ESTADOS() {
            return false;
        }
        
        private bool ShouldSerializeENCABEZADO() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void CARRERAS_ESTADOSRowChangeEventHandler(object sender, CARRERAS_ESTADOSRowChangeEvent e);
        
        public delegate void ENCABEZADORowChangeEventHandler(object sender, ENCABEZADORowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CARRERAS_ESTADOSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnEMAT_TDESC;
            
            private DataColumn columnN_PAGARES;
            
            private DataColumn columnNUEVOS_UF;
            
            private DataColumn columnNUEVOS_PESOS;
            
            private DataColumn columnANTIGUOS_UF;
            
            private DataColumn columnANTIGUOS_PESOS;
            
            private DataColumn columnTOTAL_UF;
            
            private DataColumn columnTOTAL_PESOS;
            
            private DataColumn columnPORC_NUEVOS;
            
            private DataColumn columnPORC_ANTIGUOS;
            
            private DataColumn columnNCARRERA;
            
            private DataColumn columnPAGINA;
            
            internal CARRERAS_ESTADOSDataTable() : 
                    base("CARRERAS_ESTADOS") {
                this.InitClass();
            }
            
            internal CARRERAS_ESTADOSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn EMAT_TDESCColumn {
                get {
                    return this.columnEMAT_TDESC;
                }
            }
            
            internal DataColumn N_PAGARESColumn {
                get {
                    return this.columnN_PAGARES;
                }
            }
            
            internal DataColumn NUEVOS_UFColumn {
                get {
                    return this.columnNUEVOS_UF;
                }
            }
            
            internal DataColumn NUEVOS_PESOSColumn {
                get {
                    return this.columnNUEVOS_PESOS;
                }
            }
            
            internal DataColumn ANTIGUOS_UFColumn {
                get {
                    return this.columnANTIGUOS_UF;
                }
            }
            
            internal DataColumn ANTIGUOS_PESOSColumn {
                get {
                    return this.columnANTIGUOS_PESOS;
                }
            }
            
            internal DataColumn TOTAL_UFColumn {
                get {
                    return this.columnTOTAL_UF;
                }
            }
            
            internal DataColumn TOTAL_PESOSColumn {
                get {
                    return this.columnTOTAL_PESOS;
                }
            }
            
            internal DataColumn PORC_NUEVOSColumn {
                get {
                    return this.columnPORC_NUEVOS;
                }
            }
            
            internal DataColumn PORC_ANTIGUOSColumn {
                get {
                    return this.columnPORC_ANTIGUOS;
                }
            }
            
            internal DataColumn NCARRERAColumn {
                get {
                    return this.columnNCARRERA;
                }
            }
            
            internal DataColumn PAGINAColumn {
                get {
                    return this.columnPAGINA;
                }
            }
            
            public CARRERAS_ESTADOSRow this[int index] {
                get {
                    return ((CARRERAS_ESTADOSRow)(this.Rows[index]));
                }
            }
            
            public event CARRERAS_ESTADOSRowChangeEventHandler CARRERAS_ESTADOSRowChanged;
            
            public event CARRERAS_ESTADOSRowChangeEventHandler CARRERAS_ESTADOSRowChanging;
            
            public event CARRERAS_ESTADOSRowChangeEventHandler CARRERAS_ESTADOSRowDeleted;
            
            public event CARRERAS_ESTADOSRowChangeEventHandler CARRERAS_ESTADOSRowDeleting;
            
            public void AddCARRERAS_ESTADOSRow(CARRERAS_ESTADOSRow row) {
                this.Rows.Add(row);
            }
            
            public CARRERAS_ESTADOSRow AddCARRERAS_ESTADOSRow(string CARR_TDESC, string EMAT_TDESC, System.Decimal N_PAGARES, System.Decimal NUEVOS_UF, System.Decimal NUEVOS_PESOS, System.Decimal ANTIGUOS_UF, System.Decimal ANTIGUOS_PESOS, System.Decimal TOTAL_UF, System.Decimal TOTAL_PESOS, System.Decimal PORC_NUEVOS, System.Decimal PORC_ANTIGUOS, System.Decimal NCARRERA, System.Decimal PAGINA) {
                CARRERAS_ESTADOSRow rowCARRERAS_ESTADOSRow = ((CARRERAS_ESTADOSRow)(this.NewRow()));
                rowCARRERAS_ESTADOSRow.ItemArray = new object[] {
                        CARR_TDESC,
                        EMAT_TDESC,
                        N_PAGARES,
                        NUEVOS_UF,
                        NUEVOS_PESOS,
                        ANTIGUOS_UF,
                        ANTIGUOS_PESOS,
                        TOTAL_UF,
                        TOTAL_PESOS,
                        PORC_NUEVOS,
                        PORC_ANTIGUOS,
                        NCARRERA,
                        PAGINA};
                this.Rows.Add(rowCARRERAS_ESTADOSRow);
                return rowCARRERAS_ESTADOSRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CARRERAS_ESTADOSDataTable cln = ((CARRERAS_ESTADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CARRERAS_ESTADOSDataTable();
            }
            
            internal void InitVars() {
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnEMAT_TDESC = this.Columns["EMAT_TDESC"];
                this.columnN_PAGARES = this.Columns["N_PAGARES"];
                this.columnNUEVOS_UF = this.Columns["NUEVOS_UF"];
                this.columnNUEVOS_PESOS = this.Columns["NUEVOS_PESOS"];
                this.columnANTIGUOS_UF = this.Columns["ANTIGUOS_UF"];
                this.columnANTIGUOS_PESOS = this.Columns["ANTIGUOS_PESOS"];
                this.columnTOTAL_UF = this.Columns["TOTAL_UF"];
                this.columnTOTAL_PESOS = this.Columns["TOTAL_PESOS"];
                this.columnPORC_NUEVOS = this.Columns["PORC_NUEVOS"];
                this.columnPORC_ANTIGUOS = this.Columns["PORC_ANTIGUOS"];
                this.columnNCARRERA = this.Columns["NCARRERA"];
                this.columnPAGINA = this.Columns["PAGINA"];
            }
            
            private void InitClass() {
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnEMAT_TDESC = new DataColumn("EMAT_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEMAT_TDESC);
                this.columnN_PAGARES = new DataColumn("N_PAGARES", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN_PAGARES);
                this.columnNUEVOS_UF = new DataColumn("NUEVOS_UF", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUEVOS_UF);
                this.columnNUEVOS_PESOS = new DataColumn("NUEVOS_PESOS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUEVOS_PESOS);
                this.columnANTIGUOS_UF = new DataColumn("ANTIGUOS_UF", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANTIGUOS_UF);
                this.columnANTIGUOS_PESOS = new DataColumn("ANTIGUOS_PESOS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANTIGUOS_PESOS);
                this.columnTOTAL_UF = new DataColumn("TOTAL_UF", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_UF);
                this.columnTOTAL_PESOS = new DataColumn("TOTAL_PESOS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_PESOS);
                this.columnPORC_NUEVOS = new DataColumn("PORC_NUEVOS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPORC_NUEVOS);
                this.columnPORC_ANTIGUOS = new DataColumn("PORC_ANTIGUOS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPORC_ANTIGUOS);
                this.columnNCARRERA = new DataColumn("NCARRERA", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNCARRERA);
                this.columnPAGINA = new DataColumn("PAGINA", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPAGINA);
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnEMAT_TDESC.ReadOnly = true;
                this.columnN_PAGARES.ReadOnly = true;
                this.columnNUEVOS_UF.ReadOnly = true;
                this.columnNUEVOS_PESOS.ReadOnly = true;
                this.columnANTIGUOS_UF.ReadOnly = true;
                this.columnANTIGUOS_PESOS.ReadOnly = true;
                this.columnTOTAL_UF.ReadOnly = true;
                this.columnTOTAL_PESOS.ReadOnly = true;
                this.columnPORC_NUEVOS.ReadOnly = true;
                this.columnPORC_ANTIGUOS.ReadOnly = true;
                this.columnPAGINA.AllowDBNull = false;
            }
            
            public CARRERAS_ESTADOSRow NewCARRERAS_ESTADOSRow() {
                return ((CARRERAS_ESTADOSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CARRERAS_ESTADOSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CARRERAS_ESTADOSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CARRERAS_ESTADOSRowChanged != null)) {
                    this.CARRERAS_ESTADOSRowChanged(this, new CARRERAS_ESTADOSRowChangeEvent(((CARRERAS_ESTADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CARRERAS_ESTADOSRowChanging != null)) {
                    this.CARRERAS_ESTADOSRowChanging(this, new CARRERAS_ESTADOSRowChangeEvent(((CARRERAS_ESTADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CARRERAS_ESTADOSRowDeleted != null)) {
                    this.CARRERAS_ESTADOSRowDeleted(this, new CARRERAS_ESTADOSRowChangeEvent(((CARRERAS_ESTADOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CARRERAS_ESTADOSRowDeleting != null)) {
                    this.CARRERAS_ESTADOSRowDeleting(this, new CARRERAS_ESTADOSRowChangeEvent(((CARRERAS_ESTADOSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCARRERAS_ESTADOSRow(CARRERAS_ESTADOSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CARRERAS_ESTADOSRow : DataRow {
            
            private CARRERAS_ESTADOSDataTable tableCARRERAS_ESTADOS;
            
            internal CARRERAS_ESTADOSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCARRERAS_ESTADOS = ((CARRERAS_ESTADOSDataTable)(this.Table));
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableCARRERAS_ESTADOS.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.CARR_TDESCColumn] = value;
                }
            }
            
            public string EMAT_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableCARRERAS_ESTADOS.EMAT_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.EMAT_TDESCColumn] = value;
                }
            }
            
            public System.Decimal N_PAGARES {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.N_PAGARESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.N_PAGARESColumn] = value;
                }
            }
            
            public System.Decimal NUEVOS_UF {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.NUEVOS_UFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.NUEVOS_UFColumn] = value;
                }
            }
            
            public System.Decimal NUEVOS_PESOS {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.NUEVOS_PESOSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.NUEVOS_PESOSColumn] = value;
                }
            }
            
            public System.Decimal ANTIGUOS_UF {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.ANTIGUOS_UFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.ANTIGUOS_UFColumn] = value;
                }
            }
            
            public System.Decimal ANTIGUOS_PESOS {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.ANTIGUOS_PESOSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.ANTIGUOS_PESOSColumn] = value;
                }
            }
            
            public System.Decimal TOTAL_UF {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.TOTAL_UFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.TOTAL_UFColumn] = value;
                }
            }
            
            public System.Decimal TOTAL_PESOS {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.TOTAL_PESOSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.TOTAL_PESOSColumn] = value;
                }
            }
            
            public System.Decimal PORC_NUEVOS {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.PORC_NUEVOSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.PORC_NUEVOSColumn] = value;
                }
            }
            
            public System.Decimal PORC_ANTIGUOS {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.PORC_ANTIGUOSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.PORC_ANTIGUOSColumn] = value;
                }
            }
            
            public System.Decimal NCARRERA {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.NCARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.NCARRERAColumn] = value;
                }
            }
            
            public System.Decimal PAGINA {
                get {
                    return ((System.Decimal)(this[this.tableCARRERAS_ESTADOS.PAGINAColumn]));
                }
                set {
                    this[this.tableCARRERAS_ESTADOS.PAGINAColumn] = value;
                }
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableCARRERAS_ESTADOS.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsEMAT_TDESCNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.EMAT_TDESCColumn);
            }
            
            public void SetEMAT_TDESCNull() {
                this[this.tableCARRERAS_ESTADOS.EMAT_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsN_PAGARESNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.N_PAGARESColumn);
            }
            
            public void SetN_PAGARESNull() {
                this[this.tableCARRERAS_ESTADOS.N_PAGARESColumn] = System.Convert.DBNull;
            }
            
            public bool IsNUEVOS_UFNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.NUEVOS_UFColumn);
            }
            
            public void SetNUEVOS_UFNull() {
                this[this.tableCARRERAS_ESTADOS.NUEVOS_UFColumn] = System.Convert.DBNull;
            }
            
            public bool IsNUEVOS_PESOSNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.NUEVOS_PESOSColumn);
            }
            
            public void SetNUEVOS_PESOSNull() {
                this[this.tableCARRERAS_ESTADOS.NUEVOS_PESOSColumn] = System.Convert.DBNull;
            }
            
            public bool IsANTIGUOS_UFNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.ANTIGUOS_UFColumn);
            }
            
            public void SetANTIGUOS_UFNull() {
                this[this.tableCARRERAS_ESTADOS.ANTIGUOS_UFColumn] = System.Convert.DBNull;
            }
            
            public bool IsANTIGUOS_PESOSNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.ANTIGUOS_PESOSColumn);
            }
            
            public void SetANTIGUOS_PESOSNull() {
                this[this.tableCARRERAS_ESTADOS.ANTIGUOS_PESOSColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_UFNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.TOTAL_UFColumn);
            }
            
            public void SetTOTAL_UFNull() {
                this[this.tableCARRERAS_ESTADOS.TOTAL_UFColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_PESOSNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.TOTAL_PESOSColumn);
            }
            
            public void SetTOTAL_PESOSNull() {
                this[this.tableCARRERAS_ESTADOS.TOTAL_PESOSColumn] = System.Convert.DBNull;
            }
            
            public bool IsPORC_NUEVOSNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.PORC_NUEVOSColumn);
            }
            
            public void SetPORC_NUEVOSNull() {
                this[this.tableCARRERAS_ESTADOS.PORC_NUEVOSColumn] = System.Convert.DBNull;
            }
            
            public bool IsPORC_ANTIGUOSNull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.PORC_ANTIGUOSColumn);
            }
            
            public void SetPORC_ANTIGUOSNull() {
                this[this.tableCARRERAS_ESTADOS.PORC_ANTIGUOSColumn] = System.Convert.DBNull;
            }
            
            public bool IsNCARRERANull() {
                return this.IsNull(this.tableCARRERAS_ESTADOS.NCARRERAColumn);
            }
            
            public void SetNCARRERANull() {
                this[this.tableCARRERAS_ESTADOS.NCARRERAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CARRERAS_ESTADOSRowChangeEvent : EventArgs {
            
            private CARRERAS_ESTADOSRow eventRow;
            
            private DataRowAction eventAction;
            
            public CARRERAS_ESTADOSRowChangeEvent(CARRERAS_ESTADOSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CARRERAS_ESTADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADODataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSEDE_TDESC;
            
            private DataColumn columnANOS_CCOD;
            
            private DataColumn columnSEDE_CCOD;
            
            internal ENCABEZADODataTable() : 
                    base("ENCABEZADO") {
                this.InitClass();
            }
            
            internal ENCABEZADODataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SEDE_TDESCColumn {
                get {
                    return this.columnSEDE_TDESC;
                }
            }
            
            internal DataColumn ANOS_CCODColumn {
                get {
                    return this.columnANOS_CCOD;
                }
            }
            
            internal DataColumn SEDE_CCODColumn {
                get {
                    return this.columnSEDE_CCOD;
                }
            }
            
            public ENCABEZADORow this[int index] {
                get {
                    return ((ENCABEZADORow)(this.Rows[index]));
                }
            }
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanged;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanging;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleted;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleting;
            
            public void AddENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Add(row);
            }
            
            public ENCABEZADORow AddENCABEZADORow(string SEDE_TDESC, System.Decimal ANOS_CCOD, System.Decimal SEDE_CCOD) {
                ENCABEZADORow rowENCABEZADORow = ((ENCABEZADORow)(this.NewRow()));
                rowENCABEZADORow.ItemArray = new object[] {
                        SEDE_TDESC,
                        ANOS_CCOD,
                        SEDE_CCOD};
                this.Rows.Add(rowENCABEZADORow);
                return rowENCABEZADORow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ENCABEZADODataTable cln = ((ENCABEZADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ENCABEZADODataTable();
            }
            
            internal void InitVars() {
                this.columnSEDE_TDESC = this.Columns["SEDE_TDESC"];
                this.columnANOS_CCOD = this.Columns["ANOS_CCOD"];
                this.columnSEDE_CCOD = this.Columns["SEDE_CCOD"];
            }
            
            private void InitClass() {
                this.columnSEDE_TDESC = new DataColumn("SEDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TDESC);
                this.columnANOS_CCOD = new DataColumn("ANOS_CCOD", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANOS_CCOD);
                this.columnSEDE_CCOD = new DataColumn("SEDE_CCOD", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_CCOD);
                this.columnANOS_CCOD.AllowDBNull = false;
                this.columnSEDE_CCOD.AllowDBNull = false;
            }
            
            public ENCABEZADORow NewENCABEZADORow() {
                return ((ENCABEZADORow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ENCABEZADORow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ENCABEZADORow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENCABEZADORowChanged != null)) {
                    this.ENCABEZADORowChanged(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENCABEZADORowChanging != null)) {
                    this.ENCABEZADORowChanging(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENCABEZADORowDeleted != null)) {
                    this.ENCABEZADORowDeleted(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENCABEZADORowDeleting != null)) {
                    this.ENCABEZADORowDeleting(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORow : DataRow {
            
            private ENCABEZADODataTable tableENCABEZADO;
            
            internal ENCABEZADORow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Table));
            }
            
            public string SEDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.SEDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.SEDE_TDESCColumn] = value;
                }
            }
            
            public System.Decimal ANOS_CCOD {
                get {
                    return ((System.Decimal)(this[this.tableENCABEZADO.ANOS_CCODColumn]));
                }
                set {
                    this[this.tableENCABEZADO.ANOS_CCODColumn] = value;
                }
            }
            
            public System.Decimal SEDE_CCOD {
                get {
                    return ((System.Decimal)(this[this.tableENCABEZADO.SEDE_CCODColumn]));
                }
                set {
                    this[this.tableENCABEZADO.SEDE_CCODColumn] = value;
                }
            }
            
            public bool IsSEDE_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.SEDE_TDESCColumn);
            }
            
            public void SetSEDE_TDESCNull() {
                this[this.tableENCABEZADO.SEDE_TDESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORowChangeEvent : EventArgs {
            
            private ENCABEZADORow eventRow;
            
            private DataRowAction eventAction;
            
            public ENCABEZADORowChangeEvent(ENCABEZADORow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ENCABEZADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
