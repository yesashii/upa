//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.6060
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace acta_final {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private PERSONASDataTable tablePERSONAS;
        
        private ENCABEZADODataTable tableENCABEZADO;
        
        private ALUMNOSDataTable tableALUMNOS;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["PERSONAS"] != null)) {
                    this.Tables.Add(new PERSONASDataTable(ds.Tables["PERSONAS"]));
                }
                if ((ds.Tables["ENCABEZADO"] != null)) {
                    this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
                }
                if ((ds.Tables["ALUMNOS"] != null)) {
                    this.Tables.Add(new ALUMNOSDataTable(ds.Tables["ALUMNOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PERSONASDataTable PERSONAS {
            get {
                return this.tablePERSONAS;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENCABEZADODataTable ENCABEZADO {
            get {
                return this.tableENCABEZADO;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ALUMNOSDataTable ALUMNOS {
            get {
                return this.tableALUMNOS;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["PERSONAS"] != null)) {
                this.Tables.Add(new PERSONASDataTable(ds.Tables["PERSONAS"]));
            }
            if ((ds.Tables["ENCABEZADO"] != null)) {
                this.Tables.Add(new ENCABEZADODataTable(ds.Tables["ENCABEZADO"]));
            }
            if ((ds.Tables["ALUMNOS"] != null)) {
                this.Tables.Add(new ALUMNOSDataTable(ds.Tables["ALUMNOS"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablePERSONAS = ((PERSONASDataTable)(this.Tables["PERSONAS"]));
            if ((this.tablePERSONAS != null)) {
                this.tablePERSONAS.InitVars();
            }
            this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Tables["ENCABEZADO"]));
            if ((this.tableENCABEZADO != null)) {
                this.tableENCABEZADO.InitVars();
            }
            this.tableALUMNOS = ((ALUMNOSDataTable)(this.Tables["ALUMNOS"]));
            if ((this.tableALUMNOS != null)) {
                this.tableALUMNOS.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePERSONAS = new PERSONASDataTable();
            this.Tables.Add(this.tablePERSONAS);
            this.tableENCABEZADO = new ENCABEZADODataTable();
            this.Tables.Add(this.tableENCABEZADO);
            this.tableALUMNOS = new ALUMNOSDataTable();
            this.Tables.Add(this.tableALUMNOS);
        }
        
        private bool ShouldSerializePERSONAS() {
            return false;
        }
        
        private bool ShouldSerializeENCABEZADO() {
            return false;
        }
        
        private bool ShouldSerializeALUMNOS() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void PERSONASRowChangeEventHandler(object sender, PERSONASRowChangeEvent e);
        
        public delegate void ENCABEZADORowChangeEventHandler(object sender, ENCABEZADORowChangeEvent e);
        
        public delegate void ALUMNOSRowChangeEventHandler(object sender, ALUMNOSRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PERSONASDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRUT;
            
            private DataColumn columnPERS_NRUT;
            
            private DataColumn columnPERS_TAPE_PATERNO;
            
            private DataColumn columnPERS_TAPE_MATERNO;
            
            private DataColumn columnPERS_TNOMBRE;
            
            private DataColumn columnCARG_NNOTA_PRESENTACION;
            
            private DataColumn columnCARG_NNOTA_EXAMEN;
            
            private DataColumn columnCARG_NNOTA_REPETICION;
            
            private DataColumn columnCARG_NNOTA_FINAL;
            
            private DataColumn columnPERS_NCORR;
            
            internal PERSONASDataTable() : 
                    base("PERSONAS") {
                this.InitClass();
            }
            
            internal PERSONASDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn PERS_NRUTColumn {
                get {
                    return this.columnPERS_NRUT;
                }
            }
            
            internal DataColumn PERS_TAPE_PATERNOColumn {
                get {
                    return this.columnPERS_TAPE_PATERNO;
                }
            }
            
            internal DataColumn PERS_TAPE_MATERNOColumn {
                get {
                    return this.columnPERS_TAPE_MATERNO;
                }
            }
            
            internal DataColumn PERS_TNOMBREColumn {
                get {
                    return this.columnPERS_TNOMBRE;
                }
            }
            
            internal DataColumn CARG_NNOTA_PRESENTACIONColumn {
                get {
                    return this.columnCARG_NNOTA_PRESENTACION;
                }
            }
            
            internal DataColumn CARG_NNOTA_EXAMENColumn {
                get {
                    return this.columnCARG_NNOTA_EXAMEN;
                }
            }
            
            internal DataColumn CARG_NNOTA_REPETICIONColumn {
                get {
                    return this.columnCARG_NNOTA_REPETICION;
                }
            }
            
            internal DataColumn CARG_NNOTA_FINALColumn {
                get {
                    return this.columnCARG_NNOTA_FINAL;
                }
            }
            
            internal DataColumn PERS_NCORRColumn {
                get {
                    return this.columnPERS_NCORR;
                }
            }
            
            public PERSONASRow this[int index] {
                get {
                    return ((PERSONASRow)(this.Rows[index]));
                }
            }
            
            public event PERSONASRowChangeEventHandler PERSONASRowChanged;
            
            public event PERSONASRowChangeEventHandler PERSONASRowChanging;
            
            public event PERSONASRowChangeEventHandler PERSONASRowDeleted;
            
            public event PERSONASRowChangeEventHandler PERSONASRowDeleting;
            
            public void AddPERSONASRow(PERSONASRow row) {
                this.Rows.Add(row);
            }
            
            public PERSONASRow AddPERSONASRow(string RUT, System.Decimal PERS_NRUT, string PERS_TAPE_PATERNO, string PERS_TAPE_MATERNO, string PERS_TNOMBRE, string CARG_NNOTA_PRESENTACION, string CARG_NNOTA_EXAMEN, string CARG_NNOTA_REPETICION, string CARG_NNOTA_FINAL, System.Decimal PERS_NCORR) {
                PERSONASRow rowPERSONASRow = ((PERSONASRow)(this.NewRow()));
                rowPERSONASRow.ItemArray = new object[] {
                        RUT,
                        PERS_NRUT,
                        PERS_TAPE_PATERNO,
                        PERS_TAPE_MATERNO,
                        PERS_TNOMBRE,
                        CARG_NNOTA_PRESENTACION,
                        CARG_NNOTA_EXAMEN,
                        CARG_NNOTA_REPETICION,
                        CARG_NNOTA_FINAL,
                        PERS_NCORR};
                this.Rows.Add(rowPERSONASRow);
                return rowPERSONASRow;
            }
            
            public PERSONASRow FindByPERS_NCORR(System.Decimal PERS_NCORR) {
                return ((PERSONASRow)(this.Rows.Find(new object[] {
                            PERS_NCORR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PERSONASDataTable cln = ((PERSONASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PERSONASDataTable();
            }
            
            internal void InitVars() {
                this.columnRUT = this.Columns["RUT"];
                this.columnPERS_NRUT = this.Columns["PERS_NRUT"];
                this.columnPERS_TAPE_PATERNO = this.Columns["PERS_TAPE_PATERNO"];
                this.columnPERS_TAPE_MATERNO = this.Columns["PERS_TAPE_MATERNO"];
                this.columnPERS_TNOMBRE = this.Columns["PERS_TNOMBRE"];
                this.columnCARG_NNOTA_PRESENTACION = this.Columns["CARG_NNOTA_PRESENTACION"];
                this.columnCARG_NNOTA_EXAMEN = this.Columns["CARG_NNOTA_EXAMEN"];
                this.columnCARG_NNOTA_REPETICION = this.Columns["CARG_NNOTA_REPETICION"];
                this.columnCARG_NNOTA_FINAL = this.Columns["CARG_NNOTA_FINAL"];
                this.columnPERS_NCORR = this.Columns["PERS_NCORR"];
            }
            
            private void InitClass() {
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnPERS_NRUT = new DataColumn("PERS_NRUT", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NRUT);
                this.columnPERS_TAPE_PATERNO = new DataColumn("PERS_TAPE_PATERNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TAPE_PATERNO);
                this.columnPERS_TAPE_MATERNO = new DataColumn("PERS_TAPE_MATERNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TAPE_MATERNO);
                this.columnPERS_TNOMBRE = new DataColumn("PERS_TNOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TNOMBRE);
                this.columnCARG_NNOTA_PRESENTACION = new DataColumn("CARG_NNOTA_PRESENTACION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_PRESENTACION);
                this.columnCARG_NNOTA_EXAMEN = new DataColumn("CARG_NNOTA_EXAMEN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_EXAMEN);
                this.columnCARG_NNOTA_REPETICION = new DataColumn("CARG_NNOTA_REPETICION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_REPETICION);
                this.columnCARG_NNOTA_FINAL = new DataColumn("CARG_NNOTA_FINAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_FINAL);
                this.columnPERS_NCORR = new DataColumn("PERS_NCORR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NCORR);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnPERS_NCORR}, true));
                this.columnRUT.ReadOnly = true;
                this.columnPERS_NRUT.AllowDBNull = false;
                this.columnPERS_TAPE_PATERNO.AllowDBNull = false;
                this.columnPERS_TAPE_MATERNO.AllowDBNull = false;
                this.columnPERS_TNOMBRE.AllowDBNull = false;
                this.columnCARG_NNOTA_PRESENTACION.ReadOnly = true;
                this.columnCARG_NNOTA_EXAMEN.ReadOnly = true;
                this.columnCARG_NNOTA_REPETICION.ReadOnly = true;
                this.columnCARG_NNOTA_FINAL.ReadOnly = true;
                this.columnPERS_NCORR.AllowDBNull = false;
                this.columnPERS_NCORR.Unique = true;
            }
            
            public PERSONASRow NewPERSONASRow() {
                return ((PERSONASRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PERSONASRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PERSONASRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PERSONASRowChanged != null)) {
                    this.PERSONASRowChanged(this, new PERSONASRowChangeEvent(((PERSONASRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PERSONASRowChanging != null)) {
                    this.PERSONASRowChanging(this, new PERSONASRowChangeEvent(((PERSONASRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PERSONASRowDeleted != null)) {
                    this.PERSONASRowDeleted(this, new PERSONASRowChangeEvent(((PERSONASRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PERSONASRowDeleting != null)) {
                    this.PERSONASRowDeleting(this, new PERSONASRowChangeEvent(((PERSONASRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePERSONASRow(PERSONASRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PERSONASRow : DataRow {
            
            private PERSONASDataTable tablePERSONAS;
            
            internal PERSONASRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePERSONAS = ((PERSONASDataTable)(this.Table));
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.tablePERSONAS.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePERSONAS.RUTColumn] = value;
                }
            }
            
            public System.Decimal PERS_NRUT {
                get {
                    return ((System.Decimal)(this[this.tablePERSONAS.PERS_NRUTColumn]));
                }
                set {
                    this[this.tablePERSONAS.PERS_NRUTColumn] = value;
                }
            }
            
            public string PERS_TAPE_PATERNO {
                get {
                    return ((string)(this[this.tablePERSONAS.PERS_TAPE_PATERNOColumn]));
                }
                set {
                    this[this.tablePERSONAS.PERS_TAPE_PATERNOColumn] = value;
                }
            }
            
            public string PERS_TAPE_MATERNO {
                get {
                    return ((string)(this[this.tablePERSONAS.PERS_TAPE_MATERNOColumn]));
                }
                set {
                    this[this.tablePERSONAS.PERS_TAPE_MATERNOColumn] = value;
                }
            }
            
            public string PERS_TNOMBRE {
                get {
                    return ((string)(this[this.tablePERSONAS.PERS_TNOMBREColumn]));
                }
                set {
                    this[this.tablePERSONAS.PERS_TNOMBREColumn] = value;
                }
            }
            
            public string CARG_NNOTA_PRESENTACION {
                get {
                    try {
                        return ((string)(this[this.tablePERSONAS.CARG_NNOTA_PRESENTACIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePERSONAS.CARG_NNOTA_PRESENTACIONColumn] = value;
                }
            }
            
            public string CARG_NNOTA_EXAMEN {
                get {
                    try {
                        return ((string)(this[this.tablePERSONAS.CARG_NNOTA_EXAMENColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePERSONAS.CARG_NNOTA_EXAMENColumn] = value;
                }
            }
            
            public string CARG_NNOTA_REPETICION {
                get {
                    try {
                        return ((string)(this[this.tablePERSONAS.CARG_NNOTA_REPETICIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePERSONAS.CARG_NNOTA_REPETICIONColumn] = value;
                }
            }
            
            public string CARG_NNOTA_FINAL {
                get {
                    try {
                        return ((string)(this[this.tablePERSONAS.CARG_NNOTA_FINALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePERSONAS.CARG_NNOTA_FINALColumn] = value;
                }
            }
            
            public System.Decimal PERS_NCORR {
                get {
                    return ((System.Decimal)(this[this.tablePERSONAS.PERS_NCORRColumn]));
                }
                set {
                    this[this.tablePERSONAS.PERS_NCORRColumn] = value;
                }
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.tablePERSONAS.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.tablePERSONAS.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_PRESENTACIONNull() {
                return this.IsNull(this.tablePERSONAS.CARG_NNOTA_PRESENTACIONColumn);
            }
            
            public void SetCARG_NNOTA_PRESENTACIONNull() {
                this[this.tablePERSONAS.CARG_NNOTA_PRESENTACIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_EXAMENNull() {
                return this.IsNull(this.tablePERSONAS.CARG_NNOTA_EXAMENColumn);
            }
            
            public void SetCARG_NNOTA_EXAMENNull() {
                this[this.tablePERSONAS.CARG_NNOTA_EXAMENColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_REPETICIONNull() {
                return this.IsNull(this.tablePERSONAS.CARG_NNOTA_REPETICIONColumn);
            }
            
            public void SetCARG_NNOTA_REPETICIONNull() {
                this[this.tablePERSONAS.CARG_NNOTA_REPETICIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_FINALNull() {
                return this.IsNull(this.tablePERSONAS.CARG_NNOTA_FINALColumn);
            }
            
            public void SetCARG_NNOTA_FINALNull() {
                this[this.tablePERSONAS.CARG_NNOTA_FINALColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PERSONASRowChangeEvent : EventArgs {
            
            private PERSONASRow eventRow;
            
            private DataRowAction eventAction;
            
            public PERSONASRowChangeEvent(PERSONASRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PERSONASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADODataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnASIG_TDESC;
            
            private DataColumn columnDUAS_TDESC;
            
            private DataColumn columnSECC_TDESC;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnANOS_CCOD;
            
            private DataColumn columnPLEC_CCOD;
            
            private DataColumn columnPROFESOR;
            
            private DataColumn columnPROFESOR_MIN;
            
            private DataColumn columnDIRECTOR_CARRERA;
            
            private DataColumn columnFIRMA_COMO;
            
            private DataColumn columnSECC_CCOD;
            
            private DataColumn columnASIG_CCOD;
            
            private DataColumn columnCARR_CCOD;
            
            private DataColumn columnPERI_CCOD;
            
            internal ENCABEZADODataTable() : 
                    base("ENCABEZADO") {
                this.InitClass();
            }
            
            internal ENCABEZADODataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ASIG_TDESCColumn {
                get {
                    return this.columnASIG_TDESC;
                }
            }
            
            internal DataColumn DUAS_TDESCColumn {
                get {
                    return this.columnDUAS_TDESC;
                }
            }
            
            internal DataColumn SECC_TDESCColumn {
                get {
                    return this.columnSECC_TDESC;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn ANOS_CCODColumn {
                get {
                    return this.columnANOS_CCOD;
                }
            }
            
            internal DataColumn PLEC_CCODColumn {
                get {
                    return this.columnPLEC_CCOD;
                }
            }
            
            internal DataColumn PROFESORColumn {
                get {
                    return this.columnPROFESOR;
                }
            }
            
            internal DataColumn PROFESOR_MINColumn {
                get {
                    return this.columnPROFESOR_MIN;
                }
            }
            
            internal DataColumn DIRECTOR_CARRERAColumn {
                get {
                    return this.columnDIRECTOR_CARRERA;
                }
            }
            
            internal DataColumn FIRMA_COMOColumn {
                get {
                    return this.columnFIRMA_COMO;
                }
            }
            
            internal DataColumn SECC_CCODColumn {
                get {
                    return this.columnSECC_CCOD;
                }
            }
            
            internal DataColumn ASIG_CCODColumn {
                get {
                    return this.columnASIG_CCOD;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            internal DataColumn PERI_CCODColumn {
                get {
                    return this.columnPERI_CCOD;
                }
            }
            
            public ENCABEZADORow this[int index] {
                get {
                    return ((ENCABEZADORow)(this.Rows[index]));
                }
            }
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanged;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowChanging;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleted;
            
            public event ENCABEZADORowChangeEventHandler ENCABEZADORowDeleting;
            
            public void AddENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Add(row);
            }
            
            public ENCABEZADORow AddENCABEZADORow(string ASIG_TDESC, string DUAS_TDESC, string SECC_TDESC, string CARR_TDESC, System.Decimal ANOS_CCOD, System.Decimal PLEC_CCOD, string PROFESOR, string PROFESOR_MIN, string DIRECTOR_CARRERA, string FIRMA_COMO, System.Decimal SECC_CCOD, string ASIG_CCOD, string CARR_CCOD, System.Decimal PERI_CCOD) {
                ENCABEZADORow rowENCABEZADORow = ((ENCABEZADORow)(this.NewRow()));
                rowENCABEZADORow.ItemArray = new object[] {
                        ASIG_TDESC,
                        DUAS_TDESC,
                        SECC_TDESC,
                        CARR_TDESC,
                        ANOS_CCOD,
                        PLEC_CCOD,
                        PROFESOR,
                        PROFESOR_MIN,
                        DIRECTOR_CARRERA,
                        FIRMA_COMO,
                        SECC_CCOD,
                        ASIG_CCOD,
                        CARR_CCOD,
                        PERI_CCOD};
                this.Rows.Add(rowENCABEZADORow);
                return rowENCABEZADORow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ENCABEZADODataTable cln = ((ENCABEZADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ENCABEZADODataTable();
            }
            
            internal void InitVars() {
                this.columnASIG_TDESC = this.Columns["ASIG_TDESC"];
                this.columnDUAS_TDESC = this.Columns["DUAS_TDESC"];
                this.columnSECC_TDESC = this.Columns["SECC_TDESC"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnANOS_CCOD = this.Columns["ANOS_CCOD"];
                this.columnPLEC_CCOD = this.Columns["PLEC_CCOD"];
                this.columnPROFESOR = this.Columns["PROFESOR"];
                this.columnPROFESOR_MIN = this.Columns["PROFESOR_MIN"];
                this.columnDIRECTOR_CARRERA = this.Columns["DIRECTOR_CARRERA"];
                this.columnFIRMA_COMO = this.Columns["FIRMA_COMO"];
                this.columnSECC_CCOD = this.Columns["SECC_CCOD"];
                this.columnASIG_CCOD = this.Columns["ASIG_CCOD"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
                this.columnPERI_CCOD = this.Columns["PERI_CCOD"];
            }
            
            private void InitClass() {
                this.columnASIG_TDESC = new DataColumn("ASIG_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_TDESC);
                this.columnDUAS_TDESC = new DataColumn("DUAS_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDUAS_TDESC);
                this.columnSECC_TDESC = new DataColumn("SECC_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSECC_TDESC);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnANOS_CCOD = new DataColumn("ANOS_CCOD", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANOS_CCOD);
                this.columnPLEC_CCOD = new DataColumn("PLEC_CCOD", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPLEC_CCOD);
                this.columnPROFESOR = new DataColumn("PROFESOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROFESOR);
                this.columnPROFESOR_MIN = new DataColumn("PROFESOR_MIN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROFESOR_MIN);
                this.columnDIRECTOR_CARRERA = new DataColumn("DIRECTOR_CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECTOR_CARRERA);
                this.columnFIRMA_COMO = new DataColumn("FIRMA_COMO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFIRMA_COMO);
                this.columnSECC_CCOD = new DataColumn("SECC_CCOD", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSECC_CCOD);
                this.columnASIG_CCOD = new DataColumn("ASIG_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_CCOD);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnPERI_CCOD = new DataColumn("PERI_CCOD", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERI_CCOD);
                this.columnASIG_TDESC.AllowDBNull = false;
                this.columnDUAS_TDESC.ReadOnly = true;
                this.columnCARR_TDESC.AllowDBNull = false;
                this.columnPROFESOR.ReadOnly = true;
                this.columnPROFESOR_MIN.ReadOnly = true;
                this.columnDIRECTOR_CARRERA.ReadOnly = true;
                this.columnFIRMA_COMO.ReadOnly = true;
                this.columnSECC_CCOD.AllowDBNull = false;
                this.columnASIG_CCOD.AllowDBNull = false;
                this.columnCARR_CCOD.AllowDBNull = false;
                this.columnPERI_CCOD.AllowDBNull = false;
            }
            
            public ENCABEZADORow NewENCABEZADORow() {
                return ((ENCABEZADORow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ENCABEZADORow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ENCABEZADORow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENCABEZADORowChanged != null)) {
                    this.ENCABEZADORowChanged(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENCABEZADORowChanging != null)) {
                    this.ENCABEZADORowChanging(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENCABEZADORowDeleted != null)) {
                    this.ENCABEZADORowDeleted(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENCABEZADORowDeleting != null)) {
                    this.ENCABEZADORowDeleting(this, new ENCABEZADORowChangeEvent(((ENCABEZADORow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveENCABEZADORow(ENCABEZADORow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORow : DataRow {
            
            private ENCABEZADODataTable tableENCABEZADO;
            
            internal ENCABEZADORow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableENCABEZADO = ((ENCABEZADODataTable)(this.Table));
            }
            
            public string ASIG_TDESC {
                get {
                    return ((string)(this[this.tableENCABEZADO.ASIG_TDESCColumn]));
                }
                set {
                    this[this.tableENCABEZADO.ASIG_TDESCColumn] = value;
                }
            }
            
            public string DUAS_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.DUAS_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.DUAS_TDESCColumn] = value;
                }
            }
            
            public string SECC_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.SECC_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.SECC_TDESCColumn] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    return ((string)(this[this.tableENCABEZADO.CARR_TDESCColumn]));
                }
                set {
                    this[this.tableENCABEZADO.CARR_TDESCColumn] = value;
                }
            }
            
            public System.Decimal ANOS_CCOD {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableENCABEZADO.ANOS_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.ANOS_CCODColumn] = value;
                }
            }
            
            public System.Decimal PLEC_CCOD {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableENCABEZADO.PLEC_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.PLEC_CCODColumn] = value;
                }
            }
            
            public string PROFESOR {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.PROFESORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.PROFESORColumn] = value;
                }
            }
            
            public string PROFESOR_MIN {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.PROFESOR_MINColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.PROFESOR_MINColumn] = value;
                }
            }
            
            public string DIRECTOR_CARRERA {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.DIRECTOR_CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.DIRECTOR_CARRERAColumn] = value;
                }
            }
            
            public string FIRMA_COMO {
                get {
                    try {
                        return ((string)(this[this.tableENCABEZADO.FIRMA_COMOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableENCABEZADO.FIRMA_COMOColumn] = value;
                }
            }
            
            public System.Decimal SECC_CCOD {
                get {
                    return ((System.Decimal)(this[this.tableENCABEZADO.SECC_CCODColumn]));
                }
                set {
                    this[this.tableENCABEZADO.SECC_CCODColumn] = value;
                }
            }
            
            public string ASIG_CCOD {
                get {
                    return ((string)(this[this.tableENCABEZADO.ASIG_CCODColumn]));
                }
                set {
                    this[this.tableENCABEZADO.ASIG_CCODColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    return ((string)(this[this.tableENCABEZADO.CARR_CCODColumn]));
                }
                set {
                    this[this.tableENCABEZADO.CARR_CCODColumn] = value;
                }
            }
            
            public System.Decimal PERI_CCOD {
                get {
                    return ((System.Decimal)(this[this.tableENCABEZADO.PERI_CCODColumn]));
                }
                set {
                    this[this.tableENCABEZADO.PERI_CCODColumn] = value;
                }
            }
            
            public bool IsDUAS_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.DUAS_TDESCColumn);
            }
            
            public void SetDUAS_TDESCNull() {
                this[this.tableENCABEZADO.DUAS_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsSECC_TDESCNull() {
                return this.IsNull(this.tableENCABEZADO.SECC_TDESCColumn);
            }
            
            public void SetSECC_TDESCNull() {
                this[this.tableENCABEZADO.SECC_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsANOS_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.ANOS_CCODColumn);
            }
            
            public void SetANOS_CCODNull() {
                this[this.tableENCABEZADO.ANOS_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsPLEC_CCODNull() {
                return this.IsNull(this.tableENCABEZADO.PLEC_CCODColumn);
            }
            
            public void SetPLEC_CCODNull() {
                this[this.tableENCABEZADO.PLEC_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsPROFESORNull() {
                return this.IsNull(this.tableENCABEZADO.PROFESORColumn);
            }
            
            public void SetPROFESORNull() {
                this[this.tableENCABEZADO.PROFESORColumn] = System.Convert.DBNull;
            }
            
            public bool IsPROFESOR_MINNull() {
                return this.IsNull(this.tableENCABEZADO.PROFESOR_MINColumn);
            }
            
            public void SetPROFESOR_MINNull() {
                this[this.tableENCABEZADO.PROFESOR_MINColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECTOR_CARRERANull() {
                return this.IsNull(this.tableENCABEZADO.DIRECTOR_CARRERAColumn);
            }
            
            public void SetDIRECTOR_CARRERANull() {
                this[this.tableENCABEZADO.DIRECTOR_CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsFIRMA_COMONull() {
                return this.IsNull(this.tableENCABEZADO.FIRMA_COMOColumn);
            }
            
            public void SetFIRMA_COMONull() {
                this[this.tableENCABEZADO.FIRMA_COMOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ENCABEZADORowChangeEvent : EventArgs {
            
            private ENCABEZADORow eventRow;
            
            private DataRowAction eventAction;
            
            public ENCABEZADORowChangeEvent(ENCABEZADORow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ENCABEZADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ALUMNOSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRUT;
            
            private DataColumn columnPERS_NRUT;
            
            private DataColumn columnPERS_TAPE_PATERNO;
            
            private DataColumn columnPERS_TAPE_MATERNO;
            
            private DataColumn columnPERS_TNOMBRE;
            
            private DataColumn columnCARG_NNOTA_PRESENTACION;
            
            private DataColumn columnCARG_NNOTA_EXAMEN;
            
            private DataColumn columnCARG_NNOTA_REPETICION;
            
            private DataColumn columnCARG_NNOTA_FINAL;
            
            private DataColumn columnPERS_NCORR;
            
            private DataColumn columnSITF_CCOD;
            
            internal ALUMNOSDataTable() : 
                    base("ALUMNOS") {
                this.InitClass();
            }
            
            internal ALUMNOSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn PERS_NRUTColumn {
                get {
                    return this.columnPERS_NRUT;
                }
            }
            
            internal DataColumn PERS_TAPE_PATERNOColumn {
                get {
                    return this.columnPERS_TAPE_PATERNO;
                }
            }
            
            internal DataColumn PERS_TAPE_MATERNOColumn {
                get {
                    return this.columnPERS_TAPE_MATERNO;
                }
            }
            
            internal DataColumn PERS_TNOMBREColumn {
                get {
                    return this.columnPERS_TNOMBRE;
                }
            }
            
            internal DataColumn CARG_NNOTA_PRESENTACIONColumn {
                get {
                    return this.columnCARG_NNOTA_PRESENTACION;
                }
            }
            
            internal DataColumn CARG_NNOTA_EXAMENColumn {
                get {
                    return this.columnCARG_NNOTA_EXAMEN;
                }
            }
            
            internal DataColumn CARG_NNOTA_REPETICIONColumn {
                get {
                    return this.columnCARG_NNOTA_REPETICION;
                }
            }
            
            internal DataColumn CARG_NNOTA_FINALColumn {
                get {
                    return this.columnCARG_NNOTA_FINAL;
                }
            }
            
            internal DataColumn PERS_NCORRColumn {
                get {
                    return this.columnPERS_NCORR;
                }
            }
            
            internal DataColumn SITF_CCODColumn {
                get {
                    return this.columnSITF_CCOD;
                }
            }
            
            public ALUMNOSRow this[int index] {
                get {
                    return ((ALUMNOSRow)(this.Rows[index]));
                }
            }
            
            public event ALUMNOSRowChangeEventHandler ALUMNOSRowChanged;
            
            public event ALUMNOSRowChangeEventHandler ALUMNOSRowChanging;
            
            public event ALUMNOSRowChangeEventHandler ALUMNOSRowDeleted;
            
            public event ALUMNOSRowChangeEventHandler ALUMNOSRowDeleting;
            
            public void AddALUMNOSRow(ALUMNOSRow row) {
                this.Rows.Add(row);
            }
            
            public ALUMNOSRow AddALUMNOSRow(string RUT, string PERS_NRUT, string PERS_TAPE_PATERNO, string PERS_TAPE_MATERNO, string PERS_TNOMBRE, string CARG_NNOTA_PRESENTACION, string CARG_NNOTA_EXAMEN, string CARG_NNOTA_REPETICION, string CARG_NNOTA_FINAL, string PERS_NCORR, string SITF_CCOD) {
                ALUMNOSRow rowALUMNOSRow = ((ALUMNOSRow)(this.NewRow()));
                rowALUMNOSRow.ItemArray = new object[] {
                        RUT,
                        PERS_NRUT,
                        PERS_TAPE_PATERNO,
                        PERS_TAPE_MATERNO,
                        PERS_TNOMBRE,
                        CARG_NNOTA_PRESENTACION,
                        CARG_NNOTA_EXAMEN,
                        CARG_NNOTA_REPETICION,
                        CARG_NNOTA_FINAL,
                        PERS_NCORR,
                        SITF_CCOD};
                this.Rows.Add(rowALUMNOSRow);
                return rowALUMNOSRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ALUMNOSDataTable cln = ((ALUMNOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ALUMNOSDataTable();
            }
            
            internal void InitVars() {
                this.columnRUT = this.Columns["RUT"];
                this.columnPERS_NRUT = this.Columns["PERS_NRUT"];
                this.columnPERS_TAPE_PATERNO = this.Columns["PERS_TAPE_PATERNO"];
                this.columnPERS_TAPE_MATERNO = this.Columns["PERS_TAPE_MATERNO"];
                this.columnPERS_TNOMBRE = this.Columns["PERS_TNOMBRE"];
                this.columnCARG_NNOTA_PRESENTACION = this.Columns["CARG_NNOTA_PRESENTACION"];
                this.columnCARG_NNOTA_EXAMEN = this.Columns["CARG_NNOTA_EXAMEN"];
                this.columnCARG_NNOTA_REPETICION = this.Columns["CARG_NNOTA_REPETICION"];
                this.columnCARG_NNOTA_FINAL = this.Columns["CARG_NNOTA_FINAL"];
                this.columnPERS_NCORR = this.Columns["PERS_NCORR"];
                this.columnSITF_CCOD = this.Columns["SITF_CCOD"];
            }
            
            private void InitClass() {
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnPERS_NRUT = new DataColumn("PERS_NRUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NRUT);
                this.columnPERS_TAPE_PATERNO = new DataColumn("PERS_TAPE_PATERNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TAPE_PATERNO);
                this.columnPERS_TAPE_MATERNO = new DataColumn("PERS_TAPE_MATERNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TAPE_MATERNO);
                this.columnPERS_TNOMBRE = new DataColumn("PERS_TNOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_TNOMBRE);
                this.columnCARG_NNOTA_PRESENTACION = new DataColumn("CARG_NNOTA_PRESENTACION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_PRESENTACION);
                this.columnCARG_NNOTA_EXAMEN = new DataColumn("CARG_NNOTA_EXAMEN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_EXAMEN);
                this.columnCARG_NNOTA_REPETICION = new DataColumn("CARG_NNOTA_REPETICION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_REPETICION);
                this.columnCARG_NNOTA_FINAL = new DataColumn("CARG_NNOTA_FINAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARG_NNOTA_FINAL);
                this.columnPERS_NCORR = new DataColumn("PERS_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NCORR);
                this.columnSITF_CCOD = new DataColumn("SITF_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSITF_CCOD);
                this.columnRUT.ReadOnly = true;
                this.columnPERS_NRUT.ReadOnly = true;
                this.columnPERS_TAPE_PATERNO.ReadOnly = true;
                this.columnPERS_TAPE_MATERNO.ReadOnly = true;
                this.columnPERS_TNOMBRE.ReadOnly = true;
                this.columnCARG_NNOTA_PRESENTACION.ReadOnly = true;
                this.columnCARG_NNOTA_EXAMEN.ReadOnly = true;
                this.columnCARG_NNOTA_REPETICION.ReadOnly = true;
                this.columnCARG_NNOTA_FINAL.ReadOnly = true;
                this.columnPERS_NCORR.ReadOnly = true;
                this.columnSITF_CCOD.ReadOnly = true;
            }
            
            public ALUMNOSRow NewALUMNOSRow() {
                return ((ALUMNOSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ALUMNOSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ALUMNOSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ALUMNOSRowChanged != null)) {
                    this.ALUMNOSRowChanged(this, new ALUMNOSRowChangeEvent(((ALUMNOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ALUMNOSRowChanging != null)) {
                    this.ALUMNOSRowChanging(this, new ALUMNOSRowChangeEvent(((ALUMNOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ALUMNOSRowDeleted != null)) {
                    this.ALUMNOSRowDeleted(this, new ALUMNOSRowChangeEvent(((ALUMNOSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ALUMNOSRowDeleting != null)) {
                    this.ALUMNOSRowDeleting(this, new ALUMNOSRowChangeEvent(((ALUMNOSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveALUMNOSRow(ALUMNOSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ALUMNOSRow : DataRow {
            
            private ALUMNOSDataTable tableALUMNOS;
            
            internal ALUMNOSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableALUMNOS = ((ALUMNOSDataTable)(this.Table));
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.RUTColumn] = value;
                }
            }
            
            public string PERS_NRUT {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.PERS_NRUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.PERS_NRUTColumn] = value;
                }
            }
            
            public string PERS_TAPE_PATERNO {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.PERS_TAPE_PATERNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.PERS_TAPE_PATERNOColumn] = value;
                }
            }
            
            public string PERS_TAPE_MATERNO {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.PERS_TAPE_MATERNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.PERS_TAPE_MATERNOColumn] = value;
                }
            }
            
            public string PERS_TNOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.PERS_TNOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.PERS_TNOMBREColumn] = value;
                }
            }
            
            public string CARG_NNOTA_PRESENTACION {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.CARG_NNOTA_PRESENTACIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.CARG_NNOTA_PRESENTACIONColumn] = value;
                }
            }
            
            public string CARG_NNOTA_EXAMEN {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.CARG_NNOTA_EXAMENColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.CARG_NNOTA_EXAMENColumn] = value;
                }
            }
            
            public string CARG_NNOTA_REPETICION {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.CARG_NNOTA_REPETICIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.CARG_NNOTA_REPETICIONColumn] = value;
                }
            }
            
            public string CARG_NNOTA_FINAL {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.CARG_NNOTA_FINALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.CARG_NNOTA_FINALColumn] = value;
                }
            }
            
            public string PERS_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.PERS_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.PERS_NCORRColumn] = value;
                }
            }
            
            public string SITF_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableALUMNOS.SITF_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMNOS.SITF_CCODColumn] = value;
                }
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.tableALUMNOS.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.tableALUMNOS.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_NRUTNull() {
                return this.IsNull(this.tableALUMNOS.PERS_NRUTColumn);
            }
            
            public void SetPERS_NRUTNull() {
                this[this.tableALUMNOS.PERS_NRUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_TAPE_PATERNONull() {
                return this.IsNull(this.tableALUMNOS.PERS_TAPE_PATERNOColumn);
            }
            
            public void SetPERS_TAPE_PATERNONull() {
                this[this.tableALUMNOS.PERS_TAPE_PATERNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_TAPE_MATERNONull() {
                return this.IsNull(this.tableALUMNOS.PERS_TAPE_MATERNOColumn);
            }
            
            public void SetPERS_TAPE_MATERNONull() {
                this[this.tableALUMNOS.PERS_TAPE_MATERNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_TNOMBRENull() {
                return this.IsNull(this.tableALUMNOS.PERS_TNOMBREColumn);
            }
            
            public void SetPERS_TNOMBRENull() {
                this[this.tableALUMNOS.PERS_TNOMBREColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_PRESENTACIONNull() {
                return this.IsNull(this.tableALUMNOS.CARG_NNOTA_PRESENTACIONColumn);
            }
            
            public void SetCARG_NNOTA_PRESENTACIONNull() {
                this[this.tableALUMNOS.CARG_NNOTA_PRESENTACIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_EXAMENNull() {
                return this.IsNull(this.tableALUMNOS.CARG_NNOTA_EXAMENColumn);
            }
            
            public void SetCARG_NNOTA_EXAMENNull() {
                this[this.tableALUMNOS.CARG_NNOTA_EXAMENColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_REPETICIONNull() {
                return this.IsNull(this.tableALUMNOS.CARG_NNOTA_REPETICIONColumn);
            }
            
            public void SetCARG_NNOTA_REPETICIONNull() {
                this[this.tableALUMNOS.CARG_NNOTA_REPETICIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARG_NNOTA_FINALNull() {
                return this.IsNull(this.tableALUMNOS.CARG_NNOTA_FINALColumn);
            }
            
            public void SetCARG_NNOTA_FINALNull() {
                this[this.tableALUMNOS.CARG_NNOTA_FINALColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_NCORRNull() {
                return this.IsNull(this.tableALUMNOS.PERS_NCORRColumn);
            }
            
            public void SetPERS_NCORRNull() {
                this[this.tableALUMNOS.PERS_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsSITF_CCODNull() {
                return this.IsNull(this.tableALUMNOS.SITF_CCODColumn);
            }
            
            public void SetSITF_CCODNull() {
                this[this.tableALUMNOS.SITF_CCODColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ALUMNOSRowChangeEvent : EventArgs {
            
            private ALUMNOSRow eventRow;
            
            private DataRowAction eventAction;
            
            public ALUMNOSRowChangeEvent(ALUMNOSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ALUMNOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
