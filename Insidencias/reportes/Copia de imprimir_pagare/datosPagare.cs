//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace imprimir_pagare {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class datosPagare : DataSet {
        
        private PAGAREDataTable tablePAGARE;
        
        public datosPagare() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected datosPagare(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["PAGARE"] != null)) {
                    this.Tables.Add(new PAGAREDataTable(ds.Tables["PAGARE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PAGAREDataTable PAGARE {
            get {
                return this.tablePAGARE;
            }
        }
        
        public override DataSet Clone() {
            datosPagare cln = ((datosPagare)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["PAGARE"] != null)) {
                this.Tables.Add(new PAGAREDataTable(ds.Tables["PAGARE"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablePAGARE = ((PAGAREDataTable)(this.Tables["PAGARE"]));
            if ((this.tablePAGARE != null)) {
                this.tablePAGARE.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "datosPagare";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/datosPagare.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePAGARE = new PAGAREDataTable();
            this.Tables.Add(this.tablePAGARE);
        }
        
        private bool ShouldSerializePAGARE() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void PAGARERowChangeEventHandler(object sender, PAGARERowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PAGAREDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCIUDAD_SEDE;
            
            private DataColumn columnNRO_PAGARE;
            
            private DataColumn columnVALOR_PAGAR;
            
            private DataColumn columnDD_HOY;
            
            private DataColumn columnMM_HOY;
            
            private DataColumn columnYY_HOY;
            
            private DataColumn columnPERIODO_ACADEMICO;
            
            private DataColumn columnINICIO_VENCIMIENTO;
            
            private DataColumn columnFINAL_VENCIMIENTO;
            
            private DataColumn columnRUT_POST;
            
            private DataColumn columnNOMBRE_ALUMNO;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnRUT_CODEUDOR;
            
            private DataColumn columnNOMBRE_CODEUDOR;
            
            private DataColumn columnDIRECCION_CODEUDOR;
            
            private DataColumn columnCIUDAD_CODEUDOR;
            
            private DataColumn columnDIRECCION_POSTULANTE;
            
            private DataColumn columnCIUDAD_CODEUDOR1;
            
            private DataColumn columnVALOR_CUOTA;
            
            private DataColumn columnNUMERO_CUOTAS;
            
            private DataColumn columnFECHA_PAGO;
            
            private DataColumn columnBANCO;
            
            private DataColumn columnCUENTA_CTE;
            
            private DataColumn columnCOMUNA_CODEUDOR;
            
            internal PAGAREDataTable() : 
                    base("PAGARE") {
                this.InitClass();
            }
            
            internal PAGAREDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CIUDAD_SEDEColumn {
                get {
                    return this.columnCIUDAD_SEDE;
                }
            }
            
            internal DataColumn NRO_PAGAREColumn {
                get {
                    return this.columnNRO_PAGARE;
                }
            }
            
            internal DataColumn VALOR_PAGARColumn {
                get {
                    return this.columnVALOR_PAGAR;
                }
            }
            
            internal DataColumn DD_HOYColumn {
                get {
                    return this.columnDD_HOY;
                }
            }
            
            internal DataColumn MM_HOYColumn {
                get {
                    return this.columnMM_HOY;
                }
            }
            
            internal DataColumn YY_HOYColumn {
                get {
                    return this.columnYY_HOY;
                }
            }
            
            internal DataColumn PERIODO_ACADEMICOColumn {
                get {
                    return this.columnPERIODO_ACADEMICO;
                }
            }
            
            internal DataColumn INICIO_VENCIMIENTOColumn {
                get {
                    return this.columnINICIO_VENCIMIENTO;
                }
            }
            
            internal DataColumn FINAL_VENCIMIENTOColumn {
                get {
                    return this.columnFINAL_VENCIMIENTO;
                }
            }
            
            internal DataColumn RUT_POSTColumn {
                get {
                    return this.columnRUT_POST;
                }
            }
            
            internal DataColumn NOMBRE_ALUMNOColumn {
                get {
                    return this.columnNOMBRE_ALUMNO;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn RUT_CODEUDORColumn {
                get {
                    return this.columnRUT_CODEUDOR;
                }
            }
            
            internal DataColumn NOMBRE_CODEUDORColumn {
                get {
                    return this.columnNOMBRE_CODEUDOR;
                }
            }
            
            internal DataColumn DIRECCION_CODEUDORColumn {
                get {
                    return this.columnDIRECCION_CODEUDOR;
                }
            }
            
            internal DataColumn CIUDAD_CODEUDORColumn {
                get {
                    return this.columnCIUDAD_CODEUDOR;
                }
            }
            
            internal DataColumn DIRECCION_POSTULANTEColumn {
                get {
                    return this.columnDIRECCION_POSTULANTE;
                }
            }
            
            internal DataColumn CIUDAD_CODEUDOR1Column {
                get {
                    return this.columnCIUDAD_CODEUDOR1;
                }
            }
            
            internal DataColumn VALOR_CUOTAColumn {
                get {
                    return this.columnVALOR_CUOTA;
                }
            }
            
            internal DataColumn NUMERO_CUOTASColumn {
                get {
                    return this.columnNUMERO_CUOTAS;
                }
            }
            
            internal DataColumn FECHA_PAGOColumn {
                get {
                    return this.columnFECHA_PAGO;
                }
            }
            
            internal DataColumn BANCOColumn {
                get {
                    return this.columnBANCO;
                }
            }
            
            internal DataColumn CUENTA_CTEColumn {
                get {
                    return this.columnCUENTA_CTE;
                }
            }
            
            internal DataColumn COMUNA_CODEUDORColumn {
                get {
                    return this.columnCOMUNA_CODEUDOR;
                }
            }
            
            public PAGARERow this[int index] {
                get {
                    return ((PAGARERow)(this.Rows[index]));
                }
            }
            
            public event PAGARERowChangeEventHandler PAGARERowChanged;
            
            public event PAGARERowChangeEventHandler PAGARERowChanging;
            
            public event PAGARERowChangeEventHandler PAGARERowDeleted;
            
            public event PAGARERowChangeEventHandler PAGARERowDeleting;
            
            public void AddPAGARERow(PAGARERow row) {
                this.Rows.Add(row);
            }
            
            public PAGARERow AddPAGARERow(
                        string CIUDAD_SEDE, 
                        string NRO_PAGARE, 
                        string VALOR_PAGAR, 
                        string DD_HOY, 
                        string MM_HOY, 
                        string YY_HOY, 
                        string PERIODO_ACADEMICO, 
                        string INICIO_VENCIMIENTO, 
                        string FINAL_VENCIMIENTO, 
                        string RUT_POST, 
                        string NOMBRE_ALUMNO, 
                        string CARRERA, 
                        string RUT_CODEUDOR, 
                        string NOMBRE_CODEUDOR, 
                        string DIRECCION_CODEUDOR, 
                        string CIUDAD_CODEUDOR, 
                        string DIRECCION_POSTULANTE, 
                        string CIUDAD_CODEUDOR1, 
                        string VALOR_CUOTA, 
                        string NUMERO_CUOTAS, 
                        string FECHA_PAGO, 
                        string BANCO, 
                        string CUENTA_CTE, 
                        string COMUNA_CODEUDOR) {
                PAGARERow rowPAGARERow = ((PAGARERow)(this.NewRow()));
                rowPAGARERow.ItemArray = new object[] {
                        CIUDAD_SEDE,
                        NRO_PAGARE,
                        VALOR_PAGAR,
                        DD_HOY,
                        MM_HOY,
                        YY_HOY,
                        PERIODO_ACADEMICO,
                        INICIO_VENCIMIENTO,
                        FINAL_VENCIMIENTO,
                        RUT_POST,
                        NOMBRE_ALUMNO,
                        CARRERA,
                        RUT_CODEUDOR,
                        NOMBRE_CODEUDOR,
                        DIRECCION_CODEUDOR,
                        CIUDAD_CODEUDOR,
                        DIRECCION_POSTULANTE,
                        CIUDAD_CODEUDOR1,
                        VALOR_CUOTA,
                        NUMERO_CUOTAS,
                        FECHA_PAGO,
                        BANCO,
                        CUENTA_CTE,
                        COMUNA_CODEUDOR};
                this.Rows.Add(rowPAGARERow);
                return rowPAGARERow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PAGAREDataTable cln = ((PAGAREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PAGAREDataTable();
            }
            
            internal void InitVars() {
                this.columnCIUDAD_SEDE = this.Columns["CIUDAD_SEDE"];
                this.columnNRO_PAGARE = this.Columns["NRO_PAGARE"];
                this.columnVALOR_PAGAR = this.Columns["VALOR_PAGAR"];
                this.columnDD_HOY = this.Columns["DD_HOY"];
                this.columnMM_HOY = this.Columns["MM_HOY"];
                this.columnYY_HOY = this.Columns["YY_HOY"];
                this.columnPERIODO_ACADEMICO = this.Columns["PERIODO_ACADEMICO"];
                this.columnINICIO_VENCIMIENTO = this.Columns["INICIO_VENCIMIENTO"];
                this.columnFINAL_VENCIMIENTO = this.Columns["FINAL_VENCIMIENTO"];
                this.columnRUT_POST = this.Columns["RUT_POST"];
                this.columnNOMBRE_ALUMNO = this.Columns["NOMBRE_ALUMNO"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnRUT_CODEUDOR = this.Columns["RUT_CODEUDOR"];
                this.columnNOMBRE_CODEUDOR = this.Columns["NOMBRE_CODEUDOR"];
                this.columnDIRECCION_CODEUDOR = this.Columns["DIRECCION_CODEUDOR"];
                this.columnCIUDAD_CODEUDOR = this.Columns["CIUDAD_CODEUDOR"];
                this.columnDIRECCION_POSTULANTE = this.Columns["DIRECCION_POSTULANTE"];
                this.columnCIUDAD_CODEUDOR1 = this.Columns["CIUDAD_CODEUDOR1"];
                this.columnVALOR_CUOTA = this.Columns["VALOR_CUOTA"];
                this.columnNUMERO_CUOTAS = this.Columns["NUMERO_CUOTAS"];
                this.columnFECHA_PAGO = this.Columns["FECHA_PAGO"];
                this.columnBANCO = this.Columns["BANCO"];
                this.columnCUENTA_CTE = this.Columns["CUENTA_CTE"];
                this.columnCOMUNA_CODEUDOR = this.Columns["COMUNA_CODEUDOR"];
            }
            
            private void InitClass() {
                this.columnCIUDAD_SEDE = new DataColumn("CIUDAD_SEDE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD_SEDE);
                this.columnNRO_PAGARE = new DataColumn("NRO_PAGARE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNRO_PAGARE);
                this.columnVALOR_PAGAR = new DataColumn("VALOR_PAGAR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVALOR_PAGAR);
                this.columnDD_HOY = new DataColumn("DD_HOY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDD_HOY);
                this.columnMM_HOY = new DataColumn("MM_HOY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMM_HOY);
                this.columnYY_HOY = new DataColumn("YY_HOY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYY_HOY);
                this.columnPERIODO_ACADEMICO = new DataColumn("PERIODO_ACADEMICO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO_ACADEMICO);
                this.columnINICIO_VENCIMIENTO = new DataColumn("INICIO_VENCIMIENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINICIO_VENCIMIENTO);
                this.columnFINAL_VENCIMIENTO = new DataColumn("FINAL_VENCIMIENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFINAL_VENCIMIENTO);
                this.columnRUT_POST = new DataColumn("RUT_POST", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_POST);
                this.columnNOMBRE_ALUMNO = new DataColumn("NOMBRE_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_ALUMNO);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnRUT_CODEUDOR = new DataColumn("RUT_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_CODEUDOR);
                this.columnNOMBRE_CODEUDOR = new DataColumn("NOMBRE_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_CODEUDOR);
                this.columnDIRECCION_CODEUDOR = new DataColumn("DIRECCION_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECCION_CODEUDOR);
                this.columnCIUDAD_CODEUDOR = new DataColumn("CIUDAD_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD_CODEUDOR);
                this.columnDIRECCION_POSTULANTE = new DataColumn("DIRECCION_POSTULANTE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIRECCION_POSTULANTE);
                this.columnCIUDAD_CODEUDOR1 = new DataColumn("CIUDAD_CODEUDOR1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD_CODEUDOR1);
                this.columnVALOR_CUOTA = new DataColumn("VALOR_CUOTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVALOR_CUOTA);
                this.columnNUMERO_CUOTAS = new DataColumn("NUMERO_CUOTAS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUMERO_CUOTAS);
                this.columnFECHA_PAGO = new DataColumn("FECHA_PAGO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_PAGO);
                this.columnBANCO = new DataColumn("BANCO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBANCO);
                this.columnCUENTA_CTE = new DataColumn("CUENTA_CTE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCUENTA_CTE);
                this.columnCOMUNA_CODEUDOR = new DataColumn("COMUNA_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMUNA_CODEUDOR);
                this.columnCIUDAD_SEDE.ReadOnly = true;
                this.columnNRO_PAGARE.ReadOnly = true;
                this.columnVALOR_PAGAR.ReadOnly = true;
                this.columnDD_HOY.ReadOnly = true;
                this.columnMM_HOY.ReadOnly = true;
                this.columnYY_HOY.ReadOnly = true;
                this.columnPERIODO_ACADEMICO.ReadOnly = true;
                this.columnINICIO_VENCIMIENTO.ReadOnly = true;
                this.columnFINAL_VENCIMIENTO.ReadOnly = true;
                this.columnRUT_POST.ReadOnly = true;
                this.columnNOMBRE_ALUMNO.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnRUT_CODEUDOR.ReadOnly = true;
                this.columnNOMBRE_CODEUDOR.ReadOnly = true;
                this.columnDIRECCION_CODEUDOR.ReadOnly = true;
                this.columnCIUDAD_CODEUDOR.ReadOnly = true;
                this.columnDIRECCION_POSTULANTE.ReadOnly = true;
                this.columnCIUDAD_CODEUDOR1.ReadOnly = true;
                this.columnVALOR_CUOTA.ReadOnly = true;
                this.columnNUMERO_CUOTAS.ReadOnly = true;
                this.columnFECHA_PAGO.ReadOnly = true;
                this.columnBANCO.ReadOnly = true;
                this.columnCUENTA_CTE.ReadOnly = true;
                this.columnCOMUNA_CODEUDOR.ReadOnly = true;
            }
            
            public PAGARERow NewPAGARERow() {
                return ((PAGARERow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PAGARERow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PAGARERow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PAGARERowChanged != null)) {
                    this.PAGARERowChanged(this, new PAGARERowChangeEvent(((PAGARERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PAGARERowChanging != null)) {
                    this.PAGARERowChanging(this, new PAGARERowChangeEvent(((PAGARERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PAGARERowDeleted != null)) {
                    this.PAGARERowDeleted(this, new PAGARERowChangeEvent(((PAGARERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PAGARERowDeleting != null)) {
                    this.PAGARERowDeleting(this, new PAGARERowChangeEvent(((PAGARERow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePAGARERow(PAGARERow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PAGARERow : DataRow {
            
            private PAGAREDataTable tablePAGARE;
            
            internal PAGARERow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePAGARE = ((PAGAREDataTable)(this.Table));
            }
            
            public string CIUDAD_SEDE {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.CIUDAD_SEDEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.CIUDAD_SEDEColumn] = value;
                }
            }
            
            public string NRO_PAGARE {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.NRO_PAGAREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.NRO_PAGAREColumn] = value;
                }
            }
            
            public string VALOR_PAGAR {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.VALOR_PAGARColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.VALOR_PAGARColumn] = value;
                }
            }
            
            public string DD_HOY {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.DD_HOYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.DD_HOYColumn] = value;
                }
            }
            
            public string MM_HOY {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.MM_HOYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.MM_HOYColumn] = value;
                }
            }
            
            public string YY_HOY {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.YY_HOYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.YY_HOYColumn] = value;
                }
            }
            
            public string PERIODO_ACADEMICO {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.PERIODO_ACADEMICOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.PERIODO_ACADEMICOColumn] = value;
                }
            }
            
            public string INICIO_VENCIMIENTO {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.INICIO_VENCIMIENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.INICIO_VENCIMIENTOColumn] = value;
                }
            }
            
            public string FINAL_VENCIMIENTO {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.FINAL_VENCIMIENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.FINAL_VENCIMIENTOColumn] = value;
                }
            }
            
            public string RUT_POST {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.RUT_POSTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.RUT_POSTColumn] = value;
                }
            }
            
            public string NOMBRE_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.NOMBRE_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.NOMBRE_ALUMNOColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.CARRERAColumn] = value;
                }
            }
            
            public string RUT_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.RUT_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.RUT_CODEUDORColumn] = value;
                }
            }
            
            public string NOMBRE_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.NOMBRE_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.NOMBRE_CODEUDORColumn] = value;
                }
            }
            
            public string DIRECCION_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.DIRECCION_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.DIRECCION_CODEUDORColumn] = value;
                }
            }
            
            public string CIUDAD_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.CIUDAD_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.CIUDAD_CODEUDORColumn] = value;
                }
            }
            
            public string DIRECCION_POSTULANTE {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.DIRECCION_POSTULANTEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.DIRECCION_POSTULANTEColumn] = value;
                }
            }
            
            public string CIUDAD_CODEUDOR1 {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.CIUDAD_CODEUDOR1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.CIUDAD_CODEUDOR1Column] = value;
                }
            }
            
            public string VALOR_CUOTA {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.VALOR_CUOTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.VALOR_CUOTAColumn] = value;
                }
            }
            
            public string NUMERO_CUOTAS {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.NUMERO_CUOTASColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.NUMERO_CUOTASColumn] = value;
                }
            }
            
            public string FECHA_PAGO {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.FECHA_PAGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.FECHA_PAGOColumn] = value;
                }
            }
            
            public string BANCO {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.BANCOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.BANCOColumn] = value;
                }
            }
            
            public string CUENTA_CTE {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.CUENTA_CTEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.CUENTA_CTEColumn] = value;
                }
            }
            
            public string COMUNA_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.tablePAGARE.COMUNA_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePAGARE.COMUNA_CODEUDORColumn] = value;
                }
            }
            
            public bool IsCIUDAD_SEDENull() {
                return this.IsNull(this.tablePAGARE.CIUDAD_SEDEColumn);
            }
            
            public void SetCIUDAD_SEDENull() {
                this[this.tablePAGARE.CIUDAD_SEDEColumn] = System.Convert.DBNull;
            }
            
            public bool IsNRO_PAGARENull() {
                return this.IsNull(this.tablePAGARE.NRO_PAGAREColumn);
            }
            
            public void SetNRO_PAGARENull() {
                this[this.tablePAGARE.NRO_PAGAREColumn] = System.Convert.DBNull;
            }
            
            public bool IsVALOR_PAGARNull() {
                return this.IsNull(this.tablePAGARE.VALOR_PAGARColumn);
            }
            
            public void SetVALOR_PAGARNull() {
                this[this.tablePAGARE.VALOR_PAGARColumn] = System.Convert.DBNull;
            }
            
            public bool IsDD_HOYNull() {
                return this.IsNull(this.tablePAGARE.DD_HOYColumn);
            }
            
            public void SetDD_HOYNull() {
                this[this.tablePAGARE.DD_HOYColumn] = System.Convert.DBNull;
            }
            
            public bool IsMM_HOYNull() {
                return this.IsNull(this.tablePAGARE.MM_HOYColumn);
            }
            
            public void SetMM_HOYNull() {
                this[this.tablePAGARE.MM_HOYColumn] = System.Convert.DBNull;
            }
            
            public bool IsYY_HOYNull() {
                return this.IsNull(this.tablePAGARE.YY_HOYColumn);
            }
            
            public void SetYY_HOYNull() {
                this[this.tablePAGARE.YY_HOYColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODO_ACADEMICONull() {
                return this.IsNull(this.tablePAGARE.PERIODO_ACADEMICOColumn);
            }
            
            public void SetPERIODO_ACADEMICONull() {
                this[this.tablePAGARE.PERIODO_ACADEMICOColumn] = System.Convert.DBNull;
            }
            
            public bool IsINICIO_VENCIMIENTONull() {
                return this.IsNull(this.tablePAGARE.INICIO_VENCIMIENTOColumn);
            }
            
            public void SetINICIO_VENCIMIENTONull() {
                this[this.tablePAGARE.INICIO_VENCIMIENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFINAL_VENCIMIENTONull() {
                return this.IsNull(this.tablePAGARE.FINAL_VENCIMIENTOColumn);
            }
            
            public void SetFINAL_VENCIMIENTONull() {
                this[this.tablePAGARE.FINAL_VENCIMIENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_POSTNull() {
                return this.IsNull(this.tablePAGARE.RUT_POSTColumn);
            }
            
            public void SetRUT_POSTNull() {
                this[this.tablePAGARE.RUT_POSTColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_ALUMNONull() {
                return this.IsNull(this.tablePAGARE.NOMBRE_ALUMNOColumn);
            }
            
            public void SetNOMBRE_ALUMNONull() {
                this[this.tablePAGARE.NOMBRE_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.tablePAGARE.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.tablePAGARE.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_CODEUDORNull() {
                return this.IsNull(this.tablePAGARE.RUT_CODEUDORColumn);
            }
            
            public void SetRUT_CODEUDORNull() {
                this[this.tablePAGARE.RUT_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_CODEUDORNull() {
                return this.IsNull(this.tablePAGARE.NOMBRE_CODEUDORColumn);
            }
            
            public void SetNOMBRE_CODEUDORNull() {
                this[this.tablePAGARE.NOMBRE_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECCION_CODEUDORNull() {
                return this.IsNull(this.tablePAGARE.DIRECCION_CODEUDORColumn);
            }
            
            public void SetDIRECCION_CODEUDORNull() {
                this[this.tablePAGARE.DIRECCION_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDAD_CODEUDORNull() {
                return this.IsNull(this.tablePAGARE.CIUDAD_CODEUDORColumn);
            }
            
            public void SetCIUDAD_CODEUDORNull() {
                this[this.tablePAGARE.CIUDAD_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIRECCION_POSTULANTENull() {
                return this.IsNull(this.tablePAGARE.DIRECCION_POSTULANTEColumn);
            }
            
            public void SetDIRECCION_POSTULANTENull() {
                this[this.tablePAGARE.DIRECCION_POSTULANTEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDAD_CODEUDOR1Null() {
                return this.IsNull(this.tablePAGARE.CIUDAD_CODEUDOR1Column);
            }
            
            public void SetCIUDAD_CODEUDOR1Null() {
                this[this.tablePAGARE.CIUDAD_CODEUDOR1Column] = System.Convert.DBNull;
            }
            
            public bool IsVALOR_CUOTANull() {
                return this.IsNull(this.tablePAGARE.VALOR_CUOTAColumn);
            }
            
            public void SetVALOR_CUOTANull() {
                this[this.tablePAGARE.VALOR_CUOTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsNUMERO_CUOTASNull() {
                return this.IsNull(this.tablePAGARE.NUMERO_CUOTASColumn);
            }
            
            public void SetNUMERO_CUOTASNull() {
                this[this.tablePAGARE.NUMERO_CUOTASColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_PAGONull() {
                return this.IsNull(this.tablePAGARE.FECHA_PAGOColumn);
            }
            
            public void SetFECHA_PAGONull() {
                this[this.tablePAGARE.FECHA_PAGOColumn] = System.Convert.DBNull;
            }
            
            public bool IsBANCONull() {
                return this.IsNull(this.tablePAGARE.BANCOColumn);
            }
            
            public void SetBANCONull() {
                this[this.tablePAGARE.BANCOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCUENTA_CTENull() {
                return this.IsNull(this.tablePAGARE.CUENTA_CTEColumn);
            }
            
            public void SetCUENTA_CTENull() {
                this[this.tablePAGARE.CUENTA_CTEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMUNA_CODEUDORNull() {
                return this.IsNull(this.tablePAGARE.COMUNA_CODEUDORColumn);
            }
            
            public void SetCOMUNA_CODEUDORNull() {
                this[this.tablePAGARE.COMUNA_CODEUDORColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PAGARERowChangeEvent : EventArgs {
            
            private PAGARERow eventRow;
            
            private DataRowAction eventAction;
            
            public PAGARERowChangeEvent(PAGARERow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PAGARERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
