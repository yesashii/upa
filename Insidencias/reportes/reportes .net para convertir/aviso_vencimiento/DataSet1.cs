//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace aviso_vencimiento {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private _TableDataTable table_Table;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnnumero_letra;
            
            private DataColumn columnvencimiento;
            
            private DataColumn columnmonto;
            
            private DataColumn columnabonado;
            
            private DataColumn columnsaldo_letra;
            
            private DataColumn columnestado;
            
            private DataColumn columnrut_alumno;
            
            private DataColumn columnrut_apoderado;
            
            private DataColumn columncomuna;
            
            private DataColumn columnciudad;
            
            private DataColumn columnnombre_apoderado;
            
            private DataColumn columnpers_tape_paterno;
            
            private DataColumn columnpers_tape_materno;
            
            private DataColumn columndireccion;
            
            private DataColumn columntelefono;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn numero_letraColumn {
                get {
                    return this.columnnumero_letra;
                }
            }
            
            internal DataColumn vencimientoColumn {
                get {
                    return this.columnvencimiento;
                }
            }
            
            internal DataColumn montoColumn {
                get {
                    return this.columnmonto;
                }
            }
            
            internal DataColumn abonadoColumn {
                get {
                    return this.columnabonado;
                }
            }
            
            internal DataColumn saldo_letraColumn {
                get {
                    return this.columnsaldo_letra;
                }
            }
            
            internal DataColumn estadoColumn {
                get {
                    return this.columnestado;
                }
            }
            
            internal DataColumn rut_alumnoColumn {
                get {
                    return this.columnrut_alumno;
                }
            }
            
            internal DataColumn rut_apoderadoColumn {
                get {
                    return this.columnrut_apoderado;
                }
            }
            
            internal DataColumn comunaColumn {
                get {
                    return this.columncomuna;
                }
            }
            
            internal DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            internal DataColumn nombre_apoderadoColumn {
                get {
                    return this.columnnombre_apoderado;
                }
            }
            
            internal DataColumn pers_tape_paternoColumn {
                get {
                    return this.columnpers_tape_paterno;
                }
            }
            
            internal DataColumn pers_tape_maternoColumn {
                get {
                    return this.columnpers_tape_materno;
                }
            }
            
            internal DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            internal DataColumn telefonoColumn {
                get {
                    return this.columntelefono;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(string numero_letra, string vencimiento, string monto, string abonado, string saldo_letra, string estado, string rut_alumno, string rut_apoderado, string comuna, string ciudad, string nombre_apoderado, string pers_tape_paterno, string pers_tape_materno, string direccion, string telefono) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        numero_letra,
                        vencimiento,
                        monto,
                        abonado,
                        saldo_letra,
                        estado,
                        rut_alumno,
                        rut_apoderado,
                        comuna,
                        ciudad,
                        nombre_apoderado,
                        pers_tape_paterno,
                        pers_tape_materno,
                        direccion,
                        telefono};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnnumero_letra = this.Columns["numero_letra"];
                this.columnvencimiento = this.Columns["vencimiento"];
                this.columnmonto = this.Columns["monto"];
                this.columnabonado = this.Columns["abonado"];
                this.columnsaldo_letra = this.Columns["saldo_letra"];
                this.columnestado = this.Columns["estado"];
                this.columnrut_alumno = this.Columns["rut_alumno"];
                this.columnrut_apoderado = this.Columns["rut_apoderado"];
                this.columncomuna = this.Columns["comuna"];
                this.columnciudad = this.Columns["ciudad"];
                this.columnnombre_apoderado = this.Columns["nombre_apoderado"];
                this.columnpers_tape_paterno = this.Columns["pers_tape_paterno"];
                this.columnpers_tape_materno = this.Columns["pers_tape_materno"];
                this.columndireccion = this.Columns["direccion"];
                this.columntelefono = this.Columns["telefono"];
            }
            
            private void InitClass() {
                this.columnnumero_letra = new DataColumn("numero_letra", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnumero_letra);
                this.columnvencimiento = new DataColumn("vencimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnvencimiento);
                this.columnmonto = new DataColumn("monto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmonto);
                this.columnabonado = new DataColumn("abonado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnabonado);
                this.columnsaldo_letra = new DataColumn("saldo_letra", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsaldo_letra);
                this.columnestado = new DataColumn("estado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnestado);
                this.columnrut_alumno = new DataColumn("rut_alumno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrut_alumno);
                this.columnrut_apoderado = new DataColumn("rut_apoderado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrut_apoderado);
                this.columncomuna = new DataColumn("comuna", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncomuna);
                this.columnciudad = new DataColumn("ciudad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnciudad);
                this.columnnombre_apoderado = new DataColumn("nombre_apoderado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnombre_apoderado);
                this.columnpers_tape_paterno = new DataColumn("pers_tape_paterno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpers_tape_paterno);
                this.columnpers_tape_materno = new DataColumn("pers_tape_materno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpers_tape_materno);
                this.columndireccion = new DataColumn("direccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndireccion);
                this.columntelefono = new DataColumn("telefono", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntelefono);
                this.columnnumero_letra.ReadOnly = true;
                this.columnvencimiento.ReadOnly = true;
                this.columnmonto.ReadOnly = true;
                this.columnabonado.ReadOnly = true;
                this.columnsaldo_letra.ReadOnly = true;
                this.columnestado.ReadOnly = true;
                this.columnrut_alumno.ReadOnly = true;
                this.columnrut_apoderado.ReadOnly = true;
                this.columncomuna.ReadOnly = true;
                this.columnciudad.ReadOnly = true;
                this.columnnombre_apoderado.ReadOnly = true;
                this.columnpers_tape_paterno.ReadOnly = true;
                this.columnpers_tape_materno.ReadOnly = true;
                this.columndireccion.ReadOnly = true;
                this.columntelefono.ReadOnly = true;
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public string numero_letra {
                get {
                    try {
                        return ((string)(this[this.table_Table.numero_letraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.numero_letraColumn] = value;
                }
            }
            
            public string vencimiento {
                get {
                    try {
                        return ((string)(this[this.table_Table.vencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.vencimientoColumn] = value;
                }
            }
            
            public string monto {
                get {
                    try {
                        return ((string)(this[this.table_Table.montoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.montoColumn] = value;
                }
            }
            
            public string abonado {
                get {
                    try {
                        return ((string)(this[this.table_Table.abonadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.abonadoColumn] = value;
                }
            }
            
            public string saldo_letra {
                get {
                    try {
                        return ((string)(this[this.table_Table.saldo_letraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.saldo_letraColumn] = value;
                }
            }
            
            public string estado {
                get {
                    try {
                        return ((string)(this[this.table_Table.estadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.estadoColumn] = value;
                }
            }
            
            public string rut_alumno {
                get {
                    try {
                        return ((string)(this[this.table_Table.rut_alumnoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.rut_alumnoColumn] = value;
                }
            }
            
            public string rut_apoderado {
                get {
                    try {
                        return ((string)(this[this.table_Table.rut_apoderadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.rut_apoderadoColumn] = value;
                }
            }
            
            public string comuna {
                get {
                    try {
                        return ((string)(this[this.table_Table.comunaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.comunaColumn] = value;
                }
            }
            
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.table_Table.ciudadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ciudadColumn] = value;
                }
            }
            
            public string nombre_apoderado {
                get {
                    try {
                        return ((string)(this[this.table_Table.nombre_apoderadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.nombre_apoderadoColumn] = value;
                }
            }
            
            public string pers_tape_paterno {
                get {
                    try {
                        return ((string)(this[this.table_Table.pers_tape_paternoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.pers_tape_paternoColumn] = value;
                }
            }
            
            public string pers_tape_materno {
                get {
                    try {
                        return ((string)(this[this.table_Table.pers_tape_maternoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.pers_tape_maternoColumn] = value;
                }
            }
            
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.table_Table.direccionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.direccionColumn] = value;
                }
            }
            
            public string telefono {
                get {
                    try {
                        return ((string)(this[this.table_Table.telefonoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.telefonoColumn] = value;
                }
            }
            
            public bool Isnumero_letraNull() {
                return this.IsNull(this.table_Table.numero_letraColumn);
            }
            
            public void Setnumero_letraNull() {
                this[this.table_Table.numero_letraColumn] = System.Convert.DBNull;
            }
            
            public bool IsvencimientoNull() {
                return this.IsNull(this.table_Table.vencimientoColumn);
            }
            
            public void SetvencimientoNull() {
                this[this.table_Table.vencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsmontoNull() {
                return this.IsNull(this.table_Table.montoColumn);
            }
            
            public void SetmontoNull() {
                this[this.table_Table.montoColumn] = System.Convert.DBNull;
            }
            
            public bool IsabonadoNull() {
                return this.IsNull(this.table_Table.abonadoColumn);
            }
            
            public void SetabonadoNull() {
                this[this.table_Table.abonadoColumn] = System.Convert.DBNull;
            }
            
            public bool Issaldo_letraNull() {
                return this.IsNull(this.table_Table.saldo_letraColumn);
            }
            
            public void Setsaldo_letraNull() {
                this[this.table_Table.saldo_letraColumn] = System.Convert.DBNull;
            }
            
            public bool IsestadoNull() {
                return this.IsNull(this.table_Table.estadoColumn);
            }
            
            public void SetestadoNull() {
                this[this.table_Table.estadoColumn] = System.Convert.DBNull;
            }
            
            public bool Isrut_alumnoNull() {
                return this.IsNull(this.table_Table.rut_alumnoColumn);
            }
            
            public void Setrut_alumnoNull() {
                this[this.table_Table.rut_alumnoColumn] = System.Convert.DBNull;
            }
            
            public bool Isrut_apoderadoNull() {
                return this.IsNull(this.table_Table.rut_apoderadoColumn);
            }
            
            public void Setrut_apoderadoNull() {
                this[this.table_Table.rut_apoderadoColumn] = System.Convert.DBNull;
            }
            
            public bool IscomunaNull() {
                return this.IsNull(this.table_Table.comunaColumn);
            }
            
            public void SetcomunaNull() {
                this[this.table_Table.comunaColumn] = System.Convert.DBNull;
            }
            
            public bool IsciudadNull() {
                return this.IsNull(this.table_Table.ciudadColumn);
            }
            
            public void SetciudadNull() {
                this[this.table_Table.ciudadColumn] = System.Convert.DBNull;
            }
            
            public bool Isnombre_apoderadoNull() {
                return this.IsNull(this.table_Table.nombre_apoderadoColumn);
            }
            
            public void Setnombre_apoderadoNull() {
                this[this.table_Table.nombre_apoderadoColumn] = System.Convert.DBNull;
            }
            
            public bool Ispers_tape_paternoNull() {
                return this.IsNull(this.table_Table.pers_tape_paternoColumn);
            }
            
            public void Setpers_tape_paternoNull() {
                this[this.table_Table.pers_tape_paternoColumn] = System.Convert.DBNull;
            }
            
            public bool Ispers_tape_maternoNull() {
                return this.IsNull(this.table_Table.pers_tape_maternoColumn);
            }
            
            public void Setpers_tape_maternoNull() {
                this[this.table_Table.pers_tape_maternoColumn] = System.Convert.DBNull;
            }
            
            public bool IsdireccionNull() {
                return this.IsNull(this.table_Table.direccionColumn);
            }
            
            public void SetdireccionNull() {
                this[this.table_Table.direccionColumn] = System.Convert.DBNull;
            }
            
            public bool IstelefonoNull() {
                return this.IsNull(this.table_Table.telefonoColumn);
            }
            
            public void SettelefonoNull() {
                this[this.table_Table.telefonoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
