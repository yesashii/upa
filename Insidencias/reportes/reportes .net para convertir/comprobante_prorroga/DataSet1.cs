//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace comprobante_prorroga {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private _TableDataTable table_Table;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRECA_NCORR;
            
            private DataColumn columnVENCIMIENTO_ORIGINAL;
            
            private DataColumn columnTING_TDESC;
            
            private DataColumn columnDING_NDOCTO;
            
            private DataColumn columnNUEVA_FECHA;
            
            private DataColumn columnNOMBRE_ALUMNO;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnDING_TCUENTA_CORRIENTE;
            
            private DataColumn columnBANC_TDESC;
            
            private DataColumn columnDING_MDOCTO;
            
            private DataColumn columnINTERES;
            
            private DataColumn columnRUT_ALUMNO;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RECA_NCORRColumn {
                get {
                    return this.columnRECA_NCORR;
                }
            }
            
            internal DataColumn VENCIMIENTO_ORIGINALColumn {
                get {
                    return this.columnVENCIMIENTO_ORIGINAL;
                }
            }
            
            internal DataColumn TING_TDESCColumn {
                get {
                    return this.columnTING_TDESC;
                }
            }
            
            internal DataColumn DING_NDOCTOColumn {
                get {
                    return this.columnDING_NDOCTO;
                }
            }
            
            internal DataColumn NUEVA_FECHAColumn {
                get {
                    return this.columnNUEVA_FECHA;
                }
            }
            
            internal DataColumn NOMBRE_ALUMNOColumn {
                get {
                    return this.columnNOMBRE_ALUMNO;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn DING_TCUENTA_CORRIENTEColumn {
                get {
                    return this.columnDING_TCUENTA_CORRIENTE;
                }
            }
            
            internal DataColumn BANC_TDESCColumn {
                get {
                    return this.columnBANC_TDESC;
                }
            }
            
            internal DataColumn DING_MDOCTOColumn {
                get {
                    return this.columnDING_MDOCTO;
                }
            }
            
            internal DataColumn INTERESColumn {
                get {
                    return this.columnINTERES;
                }
            }
            
            internal DataColumn RUT_ALUMNOColumn {
                get {
                    return this.columnRUT_ALUMNO;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(string RECA_NCORR, string VENCIMIENTO_ORIGINAL, string TING_TDESC, string DING_NDOCTO, string NUEVA_FECHA, string NOMBRE_ALUMNO, string CARRERA, string DING_TCUENTA_CORRIENTE, string BANC_TDESC, string DING_MDOCTO, string INTERES, string RUT_ALUMNO) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        RECA_NCORR,
                        VENCIMIENTO_ORIGINAL,
                        TING_TDESC,
                        DING_NDOCTO,
                        NUEVA_FECHA,
                        NOMBRE_ALUMNO,
                        CARRERA,
                        DING_TCUENTA_CORRIENTE,
                        BANC_TDESC,
                        DING_MDOCTO,
                        INTERES,
                        RUT_ALUMNO};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnRECA_NCORR = this.Columns["RECA_NCORR"];
                this.columnVENCIMIENTO_ORIGINAL = this.Columns["VENCIMIENTO_ORIGINAL"];
                this.columnTING_TDESC = this.Columns["TING_TDESC"];
                this.columnDING_NDOCTO = this.Columns["DING_NDOCTO"];
                this.columnNUEVA_FECHA = this.Columns["NUEVA_FECHA"];
                this.columnNOMBRE_ALUMNO = this.Columns["NOMBRE_ALUMNO"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnDING_TCUENTA_CORRIENTE = this.Columns["DING_TCUENTA_CORRIENTE"];
                this.columnBANC_TDESC = this.Columns["BANC_TDESC"];
                this.columnDING_MDOCTO = this.Columns["DING_MDOCTO"];
                this.columnINTERES = this.Columns["INTERES"];
                this.columnRUT_ALUMNO = this.Columns["RUT_ALUMNO"];
            }
            
            private void InitClass() {
                this.columnRECA_NCORR = new DataColumn("RECA_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRECA_NCORR);
                this.columnVENCIMIENTO_ORIGINAL = new DataColumn("VENCIMIENTO_ORIGINAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVENCIMIENTO_ORIGINAL);
                this.columnTING_TDESC = new DataColumn("TING_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTING_TDESC);
                this.columnDING_NDOCTO = new DataColumn("DING_NDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDING_NDOCTO);
                this.columnNUEVA_FECHA = new DataColumn("NUEVA_FECHA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUEVA_FECHA);
                this.columnNOMBRE_ALUMNO = new DataColumn("NOMBRE_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_ALUMNO);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnDING_TCUENTA_CORRIENTE = new DataColumn("DING_TCUENTA_CORRIENTE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDING_TCUENTA_CORRIENTE);
                this.columnBANC_TDESC = new DataColumn("BANC_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBANC_TDESC);
                this.columnDING_MDOCTO = new DataColumn("DING_MDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDING_MDOCTO);
                this.columnINTERES = new DataColumn("INTERES", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINTERES);
                this.columnRUT_ALUMNO = new DataColumn("RUT_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_ALUMNO);
                this.columnRECA_NCORR.ReadOnly = true;
                this.columnVENCIMIENTO_ORIGINAL.ReadOnly = true;
                this.columnTING_TDESC.ReadOnly = true;
                this.columnDING_NDOCTO.ReadOnly = true;
                this.columnNUEVA_FECHA.ReadOnly = true;
                this.columnNOMBRE_ALUMNO.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnDING_TCUENTA_CORRIENTE.ReadOnly = true;
                this.columnBANC_TDESC.ReadOnly = true;
                this.columnDING_MDOCTO.ReadOnly = true;
                this.columnINTERES.ReadOnly = true;
                this.columnRUT_ALUMNO.ReadOnly = true;
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public string RECA_NCORR {
                get {
                    try {
                        return ((string)(this[this.table_Table.RECA_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RECA_NCORRColumn] = value;
                }
            }
            
            public string VENCIMIENTO_ORIGINAL {
                get {
                    try {
                        return ((string)(this[this.table_Table.VENCIMIENTO_ORIGINALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VENCIMIENTO_ORIGINALColumn] = value;
                }
            }
            
            public string TING_TDESC {
                get {
                    try {
                        return ((string)(this[this.table_Table.TING_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TING_TDESCColumn] = value;
                }
            }
            
            public string DING_NDOCTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.DING_NDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DING_NDOCTOColumn] = value;
                }
            }
            
            public string NUEVA_FECHA {
                get {
                    try {
                        return ((string)(this[this.table_Table.NUEVA_FECHAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NUEVA_FECHAColumn] = value;
                }
            }
            
            public string NOMBRE_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.table_Table.NOMBRE_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NOMBRE_ALUMNOColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.table_Table.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CARRERAColumn] = value;
                }
            }
            
            public string DING_TCUENTA_CORRIENTE {
                get {
                    try {
                        return ((string)(this[this.table_Table.DING_TCUENTA_CORRIENTEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DING_TCUENTA_CORRIENTEColumn] = value;
                }
            }
            
            public string BANC_TDESC {
                get {
                    try {
                        return ((string)(this[this.table_Table.BANC_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.BANC_TDESCColumn] = value;
                }
            }
            
            public string DING_MDOCTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.DING_MDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DING_MDOCTOColumn] = value;
                }
            }
            
            public string INTERES {
                get {
                    try {
                        return ((string)(this[this.table_Table.INTERESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.INTERESColumn] = value;
                }
            }
            
            public string RUT_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.table_Table.RUT_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RUT_ALUMNOColumn] = value;
                }
            }
            
            public bool IsRECA_NCORRNull() {
                return this.IsNull(this.table_Table.RECA_NCORRColumn);
            }
            
            public void SetRECA_NCORRNull() {
                this[this.table_Table.RECA_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsVENCIMIENTO_ORIGINALNull() {
                return this.IsNull(this.table_Table.VENCIMIENTO_ORIGINALColumn);
            }
            
            public void SetVENCIMIENTO_ORIGINALNull() {
                this[this.table_Table.VENCIMIENTO_ORIGINALColumn] = System.Convert.DBNull;
            }
            
            public bool IsTING_TDESCNull() {
                return this.IsNull(this.table_Table.TING_TDESCColumn);
            }
            
            public void SetTING_TDESCNull() {
                this[this.table_Table.TING_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsDING_NDOCTONull() {
                return this.IsNull(this.table_Table.DING_NDOCTOColumn);
            }
            
            public void SetDING_NDOCTONull() {
                this[this.table_Table.DING_NDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNUEVA_FECHANull() {
                return this.IsNull(this.table_Table.NUEVA_FECHAColumn);
            }
            
            public void SetNUEVA_FECHANull() {
                this[this.table_Table.NUEVA_FECHAColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_ALUMNONull() {
                return this.IsNull(this.table_Table.NOMBRE_ALUMNOColumn);
            }
            
            public void SetNOMBRE_ALUMNONull() {
                this[this.table_Table.NOMBRE_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.table_Table.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.table_Table.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsDING_TCUENTA_CORRIENTENull() {
                return this.IsNull(this.table_Table.DING_TCUENTA_CORRIENTEColumn);
            }
            
            public void SetDING_TCUENTA_CORRIENTENull() {
                this[this.table_Table.DING_TCUENTA_CORRIENTEColumn] = System.Convert.DBNull;
            }
            
            public bool IsBANC_TDESCNull() {
                return this.IsNull(this.table_Table.BANC_TDESCColumn);
            }
            
            public void SetBANC_TDESCNull() {
                this[this.table_Table.BANC_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsDING_MDOCTONull() {
                return this.IsNull(this.table_Table.DING_MDOCTOColumn);
            }
            
            public void SetDING_MDOCTONull() {
                this[this.table_Table.DING_MDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsINTERESNull() {
                return this.IsNull(this.table_Table.INTERESColumn);
            }
            
            public void SetINTERESNull() {
                this[this.table_Table.INTERESColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_ALUMNONull() {
                return this.IsNull(this.table_Table.RUT_ALUMNOColumn);
            }
            
            public void SetRUT_ALUMNONull() {
                this[this.table_Table.RUT_ALUMNOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
