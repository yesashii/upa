//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace FlujoVencimiento {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class FlujoVencimientoData : DataSet {
        
        private flujoVencimientoDataTable tableflujoVencimiento;
        
        public FlujoVencimientoData() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected FlujoVencimientoData(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["flujoVencimiento"] != null)) {
                    this.Tables.Add(new flujoVencimientoDataTable(ds.Tables["flujoVencimiento"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public flujoVencimientoDataTable flujoVencimiento {
            get {
                return this.tableflujoVencimiento;
            }
        }
        
        public override DataSet Clone() {
            FlujoVencimientoData cln = ((FlujoVencimientoData)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["flujoVencimiento"] != null)) {
                this.Tables.Add(new flujoVencimientoDataTable(ds.Tables["flujoVencimiento"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableflujoVencimiento = ((flujoVencimientoDataTable)(this.Tables["flujoVencimiento"]));
            if ((this.tableflujoVencimiento != null)) {
                this.tableflujoVencimiento.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "FlujoVencimientoData";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/FlujoVencimientoData.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableflujoVencimiento = new flujoVencimientoDataTable();
            this.Tables.Add(this.tableflujoVencimiento);
        }
        
        private bool ShouldSerializeflujoVencimiento() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void flujoVencimientoRowChangeEventHandler(object sender, flujoVencimientoRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class flujoVencimientoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnCARR_CCOD;
            
            private DataColumn columnTOTAL_CHEQUE_A;
            
            private DataColumn columnTOTAL_LETRA_A;
            
            private DataColumn columnTOTAL_CHEQUE_N;
            
            private DataColumn columnTOTAL_LETRA_N;
            
            private DataColumn columnEFECTIVO_A;
            
            private DataColumn columnEFECTIVO_N;
            
            private DataColumn columnTOTAL_CREDITO_A;
            
            private DataColumn columnTOTAL_BECA_A;
            
            private DataColumn columnTOTAL_DESCUENTO_A;
            
            private DataColumn columnTOTAL_CREDITO_N;
            
            private DataColumn columnTOTAL_BECA_N;
            
            private DataColumn columnTOTAL_DESCUENTO_N;
            
            private DataColumn columnTOTAL_MATR_CHEQUE_A;
            
            private DataColumn columnTOTAL_MATR_LETRA_A;
            
            private DataColumn columnTOTAL_COL_LETRA_A;
            
            private DataColumn columnTOTAL_COL_CHEQUE_A;
            
            private DataColumn columnTOTAL_MATR_CHEQUE_N;
            
            private DataColumn columnTOTAL_MATR_LETRA_N;
            
            private DataColumn columnTOTAL_COL_LETRA_N;
            
            private DataColumn columnTOTAL_COL_CHEQUE_N;
            
            private DataColumn columnTOTAL_MATR_EFECTIVO_A;
            
            private DataColumn columnTOTAL_COL_EFECTIVO_A;
            
            private DataColumn columnTOTAL_MATR_EFECTIVO_N;
            
            private DataColumn columnTOTAL_COL_EFECTIVO_N;
            
            internal flujoVencimientoDataTable() : 
                    base("flujoVencimiento") {
                this.InitClass();
            }
            
            internal flujoVencimientoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            internal DataColumn TOTAL_CHEQUE_AColumn {
                get {
                    return this.columnTOTAL_CHEQUE_A;
                }
            }
            
            internal DataColumn TOTAL_LETRA_AColumn {
                get {
                    return this.columnTOTAL_LETRA_A;
                }
            }
            
            internal DataColumn TOTAL_CHEQUE_NColumn {
                get {
                    return this.columnTOTAL_CHEQUE_N;
                }
            }
            
            internal DataColumn TOTAL_LETRA_NColumn {
                get {
                    return this.columnTOTAL_LETRA_N;
                }
            }
            
            internal DataColumn EFECTIVO_AColumn {
                get {
                    return this.columnEFECTIVO_A;
                }
            }
            
            internal DataColumn EFECTIVO_NColumn {
                get {
                    return this.columnEFECTIVO_N;
                }
            }
            
            internal DataColumn TOTAL_CREDITO_AColumn {
                get {
                    return this.columnTOTAL_CREDITO_A;
                }
            }
            
            internal DataColumn TOTAL_BECA_AColumn {
                get {
                    return this.columnTOTAL_BECA_A;
                }
            }
            
            internal DataColumn TOTAL_DESCUENTO_AColumn {
                get {
                    return this.columnTOTAL_DESCUENTO_A;
                }
            }
            
            internal DataColumn TOTAL_CREDITO_NColumn {
                get {
                    return this.columnTOTAL_CREDITO_N;
                }
            }
            
            internal DataColumn TOTAL_BECA_NColumn {
                get {
                    return this.columnTOTAL_BECA_N;
                }
            }
            
            internal DataColumn TOTAL_DESCUENTO_NColumn {
                get {
                    return this.columnTOTAL_DESCUENTO_N;
                }
            }
            
            internal DataColumn TOTAL_MATR_CHEQUE_AColumn {
                get {
                    return this.columnTOTAL_MATR_CHEQUE_A;
                }
            }
            
            internal DataColumn TOTAL_MATR_LETRA_AColumn {
                get {
                    return this.columnTOTAL_MATR_LETRA_A;
                }
            }
            
            internal DataColumn TOTAL_COL_LETRA_AColumn {
                get {
                    return this.columnTOTAL_COL_LETRA_A;
                }
            }
            
            internal DataColumn TOTAL_COL_CHEQUE_AColumn {
                get {
                    return this.columnTOTAL_COL_CHEQUE_A;
                }
            }
            
            internal DataColumn TOTAL_MATR_CHEQUE_NColumn {
                get {
                    return this.columnTOTAL_MATR_CHEQUE_N;
                }
            }
            
            internal DataColumn TOTAL_MATR_LETRA_NColumn {
                get {
                    return this.columnTOTAL_MATR_LETRA_N;
                }
            }
            
            internal DataColumn TOTAL_COL_LETRA_NColumn {
                get {
                    return this.columnTOTAL_COL_LETRA_N;
                }
            }
            
            internal DataColumn TOTAL_COL_CHEQUE_NColumn {
                get {
                    return this.columnTOTAL_COL_CHEQUE_N;
                }
            }
            
            internal DataColumn TOTAL_MATR_EFECTIVO_AColumn {
                get {
                    return this.columnTOTAL_MATR_EFECTIVO_A;
                }
            }
            
            internal DataColumn TOTAL_COL_EFECTIVO_AColumn {
                get {
                    return this.columnTOTAL_COL_EFECTIVO_A;
                }
            }
            
            internal DataColumn TOTAL_MATR_EFECTIVO_NColumn {
                get {
                    return this.columnTOTAL_MATR_EFECTIVO_N;
                }
            }
            
            internal DataColumn TOTAL_COL_EFECTIVO_NColumn {
                get {
                    return this.columnTOTAL_COL_EFECTIVO_N;
                }
            }
            
            public flujoVencimientoRow this[int index] {
                get {
                    return ((flujoVencimientoRow)(this.Rows[index]));
                }
            }
            
            public event flujoVencimientoRowChangeEventHandler flujoVencimientoRowChanged;
            
            public event flujoVencimientoRowChangeEventHandler flujoVencimientoRowChanging;
            
            public event flujoVencimientoRowChangeEventHandler flujoVencimientoRowDeleted;
            
            public event flujoVencimientoRowChangeEventHandler flujoVencimientoRowDeleting;
            
            public void AddflujoVencimientoRow(flujoVencimientoRow row) {
                this.Rows.Add(row);
            }
            
            public flujoVencimientoRow AddflujoVencimientoRow(
                        string CARR_TDESC, 
                        string CARR_CCOD, 
                        string TOTAL_CHEQUE_A, 
                        string TOTAL_LETRA_A, 
                        string TOTAL_CHEQUE_N, 
                        string TOTAL_LETRA_N, 
                        string EFECTIVO_A, 
                        string EFECTIVO_N, 
                        string TOTAL_CREDITO_A, 
                        string TOTAL_BECA_A, 
                        string TOTAL_DESCUENTO_A, 
                        string TOTAL_CREDITO_N, 
                        string TOTAL_BECA_N, 
                        string TOTAL_DESCUENTO_N, 
                        string TOTAL_MATR_CHEQUE_A, 
                        string TOTAL_MATR_LETRA_A, 
                        string TOTAL_COL_LETRA_A, 
                        string TOTAL_COL_CHEQUE_A, 
                        string TOTAL_MATR_CHEQUE_N, 
                        string TOTAL_MATR_LETRA_N, 
                        string TOTAL_COL_LETRA_N, 
                        string TOTAL_COL_CHEQUE_N, 
                        string TOTAL_MATR_EFECTIVO_A, 
                        string TOTAL_COL_EFECTIVO_A, 
                        string TOTAL_MATR_EFECTIVO_N, 
                        string TOTAL_COL_EFECTIVO_N) {
                flujoVencimientoRow rowflujoVencimientoRow = ((flujoVencimientoRow)(this.NewRow()));
                rowflujoVencimientoRow.ItemArray = new object[] {
                        CARR_TDESC,
                        CARR_CCOD,
                        TOTAL_CHEQUE_A,
                        TOTAL_LETRA_A,
                        TOTAL_CHEQUE_N,
                        TOTAL_LETRA_N,
                        EFECTIVO_A,
                        EFECTIVO_N,
                        TOTAL_CREDITO_A,
                        TOTAL_BECA_A,
                        TOTAL_DESCUENTO_A,
                        TOTAL_CREDITO_N,
                        TOTAL_BECA_N,
                        TOTAL_DESCUENTO_N,
                        TOTAL_MATR_CHEQUE_A,
                        TOTAL_MATR_LETRA_A,
                        TOTAL_COL_LETRA_A,
                        TOTAL_COL_CHEQUE_A,
                        TOTAL_MATR_CHEQUE_N,
                        TOTAL_MATR_LETRA_N,
                        TOTAL_COL_LETRA_N,
                        TOTAL_COL_CHEQUE_N,
                        TOTAL_MATR_EFECTIVO_A,
                        TOTAL_COL_EFECTIVO_A,
                        TOTAL_MATR_EFECTIVO_N,
                        TOTAL_COL_EFECTIVO_N};
                this.Rows.Add(rowflujoVencimientoRow);
                return rowflujoVencimientoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                flujoVencimientoDataTable cln = ((flujoVencimientoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new flujoVencimientoDataTable();
            }
            
            internal void InitVars() {
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
                this.columnTOTAL_CHEQUE_A = this.Columns["TOTAL_CHEQUE_A"];
                this.columnTOTAL_LETRA_A = this.Columns["TOTAL_LETRA_A"];
                this.columnTOTAL_CHEQUE_N = this.Columns["TOTAL_CHEQUE_N"];
                this.columnTOTAL_LETRA_N = this.Columns["TOTAL_LETRA_N"];
                this.columnEFECTIVO_A = this.Columns["EFECTIVO_A"];
                this.columnEFECTIVO_N = this.Columns["EFECTIVO_N"];
                this.columnTOTAL_CREDITO_A = this.Columns["TOTAL_CREDITO_A"];
                this.columnTOTAL_BECA_A = this.Columns["TOTAL_BECA_A"];
                this.columnTOTAL_DESCUENTO_A = this.Columns["TOTAL_DESCUENTO_A"];
                this.columnTOTAL_CREDITO_N = this.Columns["TOTAL_CREDITO_N"];
                this.columnTOTAL_BECA_N = this.Columns["TOTAL_BECA_N"];
                this.columnTOTAL_DESCUENTO_N = this.Columns["TOTAL_DESCUENTO_N"];
                this.columnTOTAL_MATR_CHEQUE_A = this.Columns["TOTAL_MATR_CHEQUE_A"];
                this.columnTOTAL_MATR_LETRA_A = this.Columns["TOTAL_MATR_LETRA_A"];
                this.columnTOTAL_COL_LETRA_A = this.Columns["TOTAL_COL_LETRA_A"];
                this.columnTOTAL_COL_CHEQUE_A = this.Columns["TOTAL_COL_CHEQUE_A"];
                this.columnTOTAL_MATR_CHEQUE_N = this.Columns["TOTAL_MATR_CHEQUE_N"];
                this.columnTOTAL_MATR_LETRA_N = this.Columns["TOTAL_MATR_LETRA_N"];
                this.columnTOTAL_COL_LETRA_N = this.Columns["TOTAL_COL_LETRA_N"];
                this.columnTOTAL_COL_CHEQUE_N = this.Columns["TOTAL_COL_CHEQUE_N"];
                this.columnTOTAL_MATR_EFECTIVO_A = this.Columns["TOTAL_MATR_EFECTIVO_A"];
                this.columnTOTAL_COL_EFECTIVO_A = this.Columns["TOTAL_COL_EFECTIVO_A"];
                this.columnTOTAL_MATR_EFECTIVO_N = this.Columns["TOTAL_MATR_EFECTIVO_N"];
                this.columnTOTAL_COL_EFECTIVO_N = this.Columns["TOTAL_COL_EFECTIVO_N"];
            }
            
            private void InitClass() {
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnTOTAL_CHEQUE_A = new DataColumn("TOTAL_CHEQUE_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_CHEQUE_A);
                this.columnTOTAL_LETRA_A = new DataColumn("TOTAL_LETRA_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_LETRA_A);
                this.columnTOTAL_CHEQUE_N = new DataColumn("TOTAL_CHEQUE_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_CHEQUE_N);
                this.columnTOTAL_LETRA_N = new DataColumn("TOTAL_LETRA_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_LETRA_N);
                this.columnEFECTIVO_A = new DataColumn("EFECTIVO_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEFECTIVO_A);
                this.columnEFECTIVO_N = new DataColumn("EFECTIVO_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEFECTIVO_N);
                this.columnTOTAL_CREDITO_A = new DataColumn("TOTAL_CREDITO_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_CREDITO_A);
                this.columnTOTAL_BECA_A = new DataColumn("TOTAL_BECA_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_BECA_A);
                this.columnTOTAL_DESCUENTO_A = new DataColumn("TOTAL_DESCUENTO_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_DESCUENTO_A);
                this.columnTOTAL_CREDITO_N = new DataColumn("TOTAL_CREDITO_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_CREDITO_N);
                this.columnTOTAL_BECA_N = new DataColumn("TOTAL_BECA_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_BECA_N);
                this.columnTOTAL_DESCUENTO_N = new DataColumn("TOTAL_DESCUENTO_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_DESCUENTO_N);
                this.columnTOTAL_MATR_CHEQUE_A = new DataColumn("TOTAL_MATR_CHEQUE_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_CHEQUE_A);
                this.columnTOTAL_MATR_LETRA_A = new DataColumn("TOTAL_MATR_LETRA_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_LETRA_A);
                this.columnTOTAL_COL_LETRA_A = new DataColumn("TOTAL_COL_LETRA_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_LETRA_A);
                this.columnTOTAL_COL_CHEQUE_A = new DataColumn("TOTAL_COL_CHEQUE_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_CHEQUE_A);
                this.columnTOTAL_MATR_CHEQUE_N = new DataColumn("TOTAL_MATR_CHEQUE_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_CHEQUE_N);
                this.columnTOTAL_MATR_LETRA_N = new DataColumn("TOTAL_MATR_LETRA_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_LETRA_N);
                this.columnTOTAL_COL_LETRA_N = new DataColumn("TOTAL_COL_LETRA_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_LETRA_N);
                this.columnTOTAL_COL_CHEQUE_N = new DataColumn("TOTAL_COL_CHEQUE_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_CHEQUE_N);
                this.columnTOTAL_MATR_EFECTIVO_A = new DataColumn("TOTAL_MATR_EFECTIVO_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_EFECTIVO_A);
                this.columnTOTAL_COL_EFECTIVO_A = new DataColumn("TOTAL_COL_EFECTIVO_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_EFECTIVO_A);
                this.columnTOTAL_MATR_EFECTIVO_N = new DataColumn("TOTAL_MATR_EFECTIVO_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_MATR_EFECTIVO_N);
                this.columnTOTAL_COL_EFECTIVO_N = new DataColumn("TOTAL_COL_EFECTIVO_N", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_COL_EFECTIVO_N);
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
                this.columnTOTAL_CHEQUE_A.ReadOnly = true;
                this.columnTOTAL_LETRA_A.ReadOnly = true;
                this.columnTOTAL_CHEQUE_N.ReadOnly = true;
                this.columnTOTAL_LETRA_N.ReadOnly = true;
                this.columnEFECTIVO_A.ReadOnly = true;
                this.columnEFECTIVO_N.ReadOnly = true;
                this.columnTOTAL_CREDITO_A.ReadOnly = true;
                this.columnTOTAL_BECA_A.ReadOnly = true;
                this.columnTOTAL_DESCUENTO_A.ReadOnly = true;
                this.columnTOTAL_CREDITO_N.ReadOnly = true;
                this.columnTOTAL_BECA_N.ReadOnly = true;
                this.columnTOTAL_DESCUENTO_N.ReadOnly = true;
                this.columnTOTAL_MATR_CHEQUE_A.ReadOnly = true;
                this.columnTOTAL_MATR_LETRA_A.ReadOnly = true;
                this.columnTOTAL_COL_LETRA_A.ReadOnly = true;
                this.columnTOTAL_COL_CHEQUE_A.ReadOnly = true;
                this.columnTOTAL_MATR_CHEQUE_N.ReadOnly = true;
                this.columnTOTAL_MATR_LETRA_N.ReadOnly = true;
                this.columnTOTAL_COL_LETRA_N.ReadOnly = true;
                this.columnTOTAL_COL_CHEQUE_N.ReadOnly = true;
                this.columnTOTAL_MATR_EFECTIVO_A.ReadOnly = true;
                this.columnTOTAL_COL_EFECTIVO_A.ReadOnly = true;
                this.columnTOTAL_MATR_EFECTIVO_N.ReadOnly = true;
                this.columnTOTAL_COL_EFECTIVO_N.ReadOnly = true;
            }
            
            public flujoVencimientoRow NewflujoVencimientoRow() {
                return ((flujoVencimientoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new flujoVencimientoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(flujoVencimientoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.flujoVencimientoRowChanged != null)) {
                    this.flujoVencimientoRowChanged(this, new flujoVencimientoRowChangeEvent(((flujoVencimientoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.flujoVencimientoRowChanging != null)) {
                    this.flujoVencimientoRowChanging(this, new flujoVencimientoRowChangeEvent(((flujoVencimientoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.flujoVencimientoRowDeleted != null)) {
                    this.flujoVencimientoRowDeleted(this, new flujoVencimientoRowChangeEvent(((flujoVencimientoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.flujoVencimientoRowDeleting != null)) {
                    this.flujoVencimientoRowDeleting(this, new flujoVencimientoRowChangeEvent(((flujoVencimientoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveflujoVencimientoRow(flujoVencimientoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class flujoVencimientoRow : DataRow {
            
            private flujoVencimientoDataTable tableflujoVencimiento;
            
            internal flujoVencimientoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableflujoVencimiento = ((flujoVencimientoDataTable)(this.Table));
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.CARR_TDESCColumn] = value;
                }
            }
            
            public string CARR_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.CARR_CCODColumn] = value;
                }
            }
            
            public string TOTAL_CHEQUE_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_CHEQUE_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_CHEQUE_AColumn] = value;
                }
            }
            
            public string TOTAL_LETRA_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_LETRA_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_LETRA_AColumn] = value;
                }
            }
            
            public string TOTAL_CHEQUE_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_CHEQUE_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_CHEQUE_NColumn] = value;
                }
            }
            
            public string TOTAL_LETRA_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_LETRA_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_LETRA_NColumn] = value;
                }
            }
            
            public string EFECTIVO_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.EFECTIVO_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.EFECTIVO_AColumn] = value;
                }
            }
            
            public string EFECTIVO_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.EFECTIVO_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.EFECTIVO_NColumn] = value;
                }
            }
            
            public string TOTAL_CREDITO_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_CREDITO_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_CREDITO_AColumn] = value;
                }
            }
            
            public string TOTAL_BECA_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_BECA_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_BECA_AColumn] = value;
                }
            }
            
            public string TOTAL_DESCUENTO_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_DESCUENTO_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_DESCUENTO_AColumn] = value;
                }
            }
            
            public string TOTAL_CREDITO_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_CREDITO_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_CREDITO_NColumn] = value;
                }
            }
            
            public string TOTAL_BECA_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_BECA_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_BECA_NColumn] = value;
                }
            }
            
            public string TOTAL_DESCUENTO_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_DESCUENTO_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_DESCUENTO_NColumn] = value;
                }
            }
            
            public string TOTAL_MATR_CHEQUE_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_AColumn] = value;
                }
            }
            
            public string TOTAL_MATR_LETRA_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_MATR_LETRA_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_MATR_LETRA_AColumn] = value;
                }
            }
            
            public string TOTAL_COL_LETRA_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_COL_LETRA_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_COL_LETRA_AColumn] = value;
                }
            }
            
            public string TOTAL_COL_CHEQUE_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_COL_CHEQUE_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_COL_CHEQUE_AColumn] = value;
                }
            }
            
            public string TOTAL_MATR_CHEQUE_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_NColumn] = value;
                }
            }
            
            public string TOTAL_MATR_LETRA_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_MATR_LETRA_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_MATR_LETRA_NColumn] = value;
                }
            }
            
            public string TOTAL_COL_LETRA_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_COL_LETRA_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_COL_LETRA_NColumn] = value;
                }
            }
            
            public string TOTAL_COL_CHEQUE_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_COL_CHEQUE_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_COL_CHEQUE_NColumn] = value;
                }
            }
            
            public string TOTAL_MATR_EFECTIVO_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_AColumn] = value;
                }
            }
            
            public string TOTAL_COL_EFECTIVO_A {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_AColumn] = value;
                }
            }
            
            public string TOTAL_MATR_EFECTIVO_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_NColumn] = value;
                }
            }
            
            public string TOTAL_COL_EFECTIVO_N {
                get {
                    try {
                        return ((string)(this[this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_NColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_NColumn] = value;
                }
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableflujoVencimiento.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableflujoVencimiento.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tableflujoVencimiento.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tableflujoVencimiento.CARR_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_CHEQUE_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_CHEQUE_AColumn);
            }
            
            public void SetTOTAL_CHEQUE_ANull() {
                this[this.tableflujoVencimiento.TOTAL_CHEQUE_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_LETRA_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_LETRA_AColumn);
            }
            
            public void SetTOTAL_LETRA_ANull() {
                this[this.tableflujoVencimiento.TOTAL_LETRA_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_CHEQUE_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_CHEQUE_NColumn);
            }
            
            public void SetTOTAL_CHEQUE_NNull() {
                this[this.tableflujoVencimiento.TOTAL_CHEQUE_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_LETRA_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_LETRA_NColumn);
            }
            
            public void SetTOTAL_LETRA_NNull() {
                this[this.tableflujoVencimiento.TOTAL_LETRA_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsEFECTIVO_ANull() {
                return this.IsNull(this.tableflujoVencimiento.EFECTIVO_AColumn);
            }
            
            public void SetEFECTIVO_ANull() {
                this[this.tableflujoVencimiento.EFECTIVO_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsEFECTIVO_NNull() {
                return this.IsNull(this.tableflujoVencimiento.EFECTIVO_NColumn);
            }
            
            public void SetEFECTIVO_NNull() {
                this[this.tableflujoVencimiento.EFECTIVO_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_CREDITO_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_CREDITO_AColumn);
            }
            
            public void SetTOTAL_CREDITO_ANull() {
                this[this.tableflujoVencimiento.TOTAL_CREDITO_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_BECA_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_BECA_AColumn);
            }
            
            public void SetTOTAL_BECA_ANull() {
                this[this.tableflujoVencimiento.TOTAL_BECA_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_DESCUENTO_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_DESCUENTO_AColumn);
            }
            
            public void SetTOTAL_DESCUENTO_ANull() {
                this[this.tableflujoVencimiento.TOTAL_DESCUENTO_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_CREDITO_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_CREDITO_NColumn);
            }
            
            public void SetTOTAL_CREDITO_NNull() {
                this[this.tableflujoVencimiento.TOTAL_CREDITO_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_BECA_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_BECA_NColumn);
            }
            
            public void SetTOTAL_BECA_NNull() {
                this[this.tableflujoVencimiento.TOTAL_BECA_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_DESCUENTO_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_DESCUENTO_NColumn);
            }
            
            public void SetTOTAL_DESCUENTO_NNull() {
                this[this.tableflujoVencimiento.TOTAL_DESCUENTO_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_CHEQUE_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_AColumn);
            }
            
            public void SetTOTAL_MATR_CHEQUE_ANull() {
                this[this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_LETRA_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_MATR_LETRA_AColumn);
            }
            
            public void SetTOTAL_MATR_LETRA_ANull() {
                this[this.tableflujoVencimiento.TOTAL_MATR_LETRA_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_LETRA_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_COL_LETRA_AColumn);
            }
            
            public void SetTOTAL_COL_LETRA_ANull() {
                this[this.tableflujoVencimiento.TOTAL_COL_LETRA_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_CHEQUE_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_COL_CHEQUE_AColumn);
            }
            
            public void SetTOTAL_COL_CHEQUE_ANull() {
                this[this.tableflujoVencimiento.TOTAL_COL_CHEQUE_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_CHEQUE_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_NColumn);
            }
            
            public void SetTOTAL_MATR_CHEQUE_NNull() {
                this[this.tableflujoVencimiento.TOTAL_MATR_CHEQUE_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_LETRA_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_MATR_LETRA_NColumn);
            }
            
            public void SetTOTAL_MATR_LETRA_NNull() {
                this[this.tableflujoVencimiento.TOTAL_MATR_LETRA_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_LETRA_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_COL_LETRA_NColumn);
            }
            
            public void SetTOTAL_COL_LETRA_NNull() {
                this[this.tableflujoVencimiento.TOTAL_COL_LETRA_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_CHEQUE_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_COL_CHEQUE_NColumn);
            }
            
            public void SetTOTAL_COL_CHEQUE_NNull() {
                this[this.tableflujoVencimiento.TOTAL_COL_CHEQUE_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_EFECTIVO_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_AColumn);
            }
            
            public void SetTOTAL_MATR_EFECTIVO_ANull() {
                this[this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_EFECTIVO_ANull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_AColumn);
            }
            
            public void SetTOTAL_COL_EFECTIVO_ANull() {
                this[this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_MATR_EFECTIVO_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_NColumn);
            }
            
            public void SetTOTAL_MATR_EFECTIVO_NNull() {
                this[this.tableflujoVencimiento.TOTAL_MATR_EFECTIVO_NColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTAL_COL_EFECTIVO_NNull() {
                return this.IsNull(this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_NColumn);
            }
            
            public void SetTOTAL_COL_EFECTIVO_NNull() {
                this[this.tableflujoVencimiento.TOTAL_COL_EFECTIVO_NColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class flujoVencimientoRowChangeEvent : EventArgs {
            
            private flujoVencimientoRow eventRow;
            
            private DataRowAction eventAction;
            
            public flujoVencimientoRowChangeEvent(flujoVencimientoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public flujoVencimientoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
