//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace comp_cajas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class datos_comprobante : DataSet {
        
        private t_alumnoDataTable tablet_alumno;
        
        private t_compromisosDataTable tablet_compromisos;
        
        private t_documentoDataTable tablet_documento;
        
        public datos_comprobante() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected datos_comprobante(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["t_alumno"] != null)) {
                    this.Tables.Add(new t_alumnoDataTable(ds.Tables["t_alumno"]));
                }
                if ((ds.Tables["t_compromisos"] != null)) {
                    this.Tables.Add(new t_compromisosDataTable(ds.Tables["t_compromisos"]));
                }
                if ((ds.Tables["t_documento"] != null)) {
                    this.Tables.Add(new t_documentoDataTable(ds.Tables["t_documento"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public t_alumnoDataTable t_alumno {
            get {
                return this.tablet_alumno;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public t_compromisosDataTable t_compromisos {
            get {
                return this.tablet_compromisos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public t_documentoDataTable t_documento {
            get {
                return this.tablet_documento;
            }
        }
        
        public override DataSet Clone() {
            datos_comprobante cln = ((datos_comprobante)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["t_alumno"] != null)) {
                this.Tables.Add(new t_alumnoDataTable(ds.Tables["t_alumno"]));
            }
            if ((ds.Tables["t_compromisos"] != null)) {
                this.Tables.Add(new t_compromisosDataTable(ds.Tables["t_compromisos"]));
            }
            if ((ds.Tables["t_documento"] != null)) {
                this.Tables.Add(new t_documentoDataTable(ds.Tables["t_documento"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablet_alumno = ((t_alumnoDataTable)(this.Tables["t_alumno"]));
            if ((this.tablet_alumno != null)) {
                this.tablet_alumno.InitVars();
            }
            this.tablet_compromisos = ((t_compromisosDataTable)(this.Tables["t_compromisos"]));
            if ((this.tablet_compromisos != null)) {
                this.tablet_compromisos.InitVars();
            }
            this.tablet_documento = ((t_documentoDataTable)(this.Tables["t_documento"]));
            if ((this.tablet_documento != null)) {
                this.tablet_documento.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "datos_comprobante";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/datos_comprobante.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablet_alumno = new t_alumnoDataTable();
            this.Tables.Add(this.tablet_alumno);
            this.tablet_compromisos = new t_compromisosDataTable();
            this.Tables.Add(this.tablet_compromisos);
            this.tablet_documento = new t_documentoDataTable();
            this.Tables.Add(this.tablet_documento);
        }
        
        private bool ShouldSerializet_alumno() {
            return false;
        }
        
        private bool ShouldSerializet_compromisos() {
            return false;
        }
        
        private bool ShouldSerializet_documento() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void t_alumnoRowChangeEventHandler(object sender, t_alumnoRowChangeEvent e);
        
        public delegate void t_compromisosRowChangeEventHandler(object sender, t_compromisosRowChangeEvent e);
        
        public delegate void t_documentoRowChangeEventHandler(object sender, t_documentoRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_alumnoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCODIGO_ALUMNO;
            
            private DataColumn columnNOMBRE_CARRERA;
            
            private DataColumn columnOFERTA;
            
            private DataColumn columnNOMBRE_ALUMNO;
            
            private DataColumn columnRUT_ALUMNO;
            
            private DataColumn columnFECHA_DIA;
            
            private DataColumn columnNOMBRE_CODEUDOR;
            
            private DataColumn columnRUT_CODEUDOR;
            
            private DataColumn columnpers_ncorr;
            
            internal t_alumnoDataTable() : 
                    base("t_alumno") {
                this.InitClass();
            }
            
            internal t_alumnoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CODIGO_ALUMNOColumn {
                get {
                    return this.columnCODIGO_ALUMNO;
                }
            }
            
            internal DataColumn NOMBRE_CARRERAColumn {
                get {
                    return this.columnNOMBRE_CARRERA;
                }
            }
            
            internal DataColumn OFERTAColumn {
                get {
                    return this.columnOFERTA;
                }
            }
            
            internal DataColumn NOMBRE_ALUMNOColumn {
                get {
                    return this.columnNOMBRE_ALUMNO;
                }
            }
            
            internal DataColumn RUT_ALUMNOColumn {
                get {
                    return this.columnRUT_ALUMNO;
                }
            }
            
            internal DataColumn FECHA_DIAColumn {
                get {
                    return this.columnFECHA_DIA;
                }
            }
            
            internal DataColumn NOMBRE_CODEUDORColumn {
                get {
                    return this.columnNOMBRE_CODEUDOR;
                }
            }
            
            internal DataColumn RUT_CODEUDORColumn {
                get {
                    return this.columnRUT_CODEUDOR;
                }
            }
            
            internal DataColumn pers_ncorrColumn {
                get {
                    return this.columnpers_ncorr;
                }
            }
            
            public t_alumnoRow this[int index] {
                get {
                    return ((t_alumnoRow)(this.Rows[index]));
                }
            }
            
            public event t_alumnoRowChangeEventHandler t_alumnoRowChanged;
            
            public event t_alumnoRowChangeEventHandler t_alumnoRowChanging;
            
            public event t_alumnoRowChangeEventHandler t_alumnoRowDeleted;
            
            public event t_alumnoRowChangeEventHandler t_alumnoRowDeleting;
            
            public void Addt_alumnoRow(t_alumnoRow row) {
                this.Rows.Add(row);
            }
            
            public t_alumnoRow Addt_alumnoRow(string CODIGO_ALUMNO, string NOMBRE_CARRERA, string OFERTA, string NOMBRE_ALUMNO, string RUT_ALUMNO, string FECHA_DIA, string NOMBRE_CODEUDOR, string RUT_CODEUDOR, string pers_ncorr) {
                t_alumnoRow rowt_alumnoRow = ((t_alumnoRow)(this.NewRow()));
                rowt_alumnoRow.ItemArray = new object[] {
                        CODIGO_ALUMNO,
                        NOMBRE_CARRERA,
                        OFERTA,
                        NOMBRE_ALUMNO,
                        RUT_ALUMNO,
                        FECHA_DIA,
                        NOMBRE_CODEUDOR,
                        RUT_CODEUDOR,
                        pers_ncorr};
                this.Rows.Add(rowt_alumnoRow);
                return rowt_alumnoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                t_alumnoDataTable cln = ((t_alumnoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new t_alumnoDataTable();
            }
            
            internal void InitVars() {
                this.columnCODIGO_ALUMNO = this.Columns["CODIGO_ALUMNO"];
                this.columnNOMBRE_CARRERA = this.Columns["NOMBRE_CARRERA"];
                this.columnOFERTA = this.Columns["OFERTA"];
                this.columnNOMBRE_ALUMNO = this.Columns["NOMBRE_ALUMNO"];
                this.columnRUT_ALUMNO = this.Columns["RUT_ALUMNO"];
                this.columnFECHA_DIA = this.Columns["FECHA_DIA"];
                this.columnNOMBRE_CODEUDOR = this.Columns["NOMBRE_CODEUDOR"];
                this.columnRUT_CODEUDOR = this.Columns["RUT_CODEUDOR"];
                this.columnpers_ncorr = this.Columns["pers_ncorr"];
            }
            
            private void InitClass() {
                this.columnCODIGO_ALUMNO = new DataColumn("CODIGO_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODIGO_ALUMNO);
                this.columnNOMBRE_CARRERA = new DataColumn("NOMBRE_CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_CARRERA);
                this.columnOFERTA = new DataColumn("OFERTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOFERTA);
                this.columnNOMBRE_ALUMNO = new DataColumn("NOMBRE_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_ALUMNO);
                this.columnRUT_ALUMNO = new DataColumn("RUT_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_ALUMNO);
                this.columnFECHA_DIA = new DataColumn("FECHA_DIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_DIA);
                this.columnNOMBRE_CODEUDOR = new DataColumn("NOMBRE_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_CODEUDOR);
                this.columnRUT_CODEUDOR = new DataColumn("RUT_CODEUDOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_CODEUDOR);
                this.columnpers_ncorr = new DataColumn("pers_ncorr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpers_ncorr);
                this.columnCODIGO_ALUMNO.ReadOnly = true;
                this.columnNOMBRE_CARRERA.ReadOnly = true;
                this.columnOFERTA.ReadOnly = true;
                this.columnNOMBRE_ALUMNO.ReadOnly = true;
                this.columnRUT_ALUMNO.ReadOnly = true;
                this.columnFECHA_DIA.ReadOnly = true;
                this.columnNOMBRE_CODEUDOR.ReadOnly = true;
                this.columnRUT_CODEUDOR.ReadOnly = true;
            }
            
            public t_alumnoRow Newt_alumnoRow() {
                return ((t_alumnoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new t_alumnoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(t_alumnoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.t_alumnoRowChanged != null)) {
                    this.t_alumnoRowChanged(this, new t_alumnoRowChangeEvent(((t_alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.t_alumnoRowChanging != null)) {
                    this.t_alumnoRowChanging(this, new t_alumnoRowChangeEvent(((t_alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.t_alumnoRowDeleted != null)) {
                    this.t_alumnoRowDeleted(this, new t_alumnoRowChangeEvent(((t_alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.t_alumnoRowDeleting != null)) {
                    this.t_alumnoRowDeleting(this, new t_alumnoRowChangeEvent(((t_alumnoRow)(e.Row)), e.Action));
                }
            }
            
            public void Removet_alumnoRow(t_alumnoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_alumnoRow : DataRow {
            
            private t_alumnoDataTable tablet_alumno;
            
            internal t_alumnoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablet_alumno = ((t_alumnoDataTable)(this.Table));
            }
            
            public string CODIGO_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.CODIGO_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.CODIGO_ALUMNOColumn] = value;
                }
            }
            
            public string NOMBRE_CARRERA {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.NOMBRE_CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.NOMBRE_CARRERAColumn] = value;
                }
            }
            
            public string OFERTA {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.OFERTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.OFERTAColumn] = value;
                }
            }
            
            public string NOMBRE_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.NOMBRE_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.NOMBRE_ALUMNOColumn] = value;
                }
            }
            
            public string RUT_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.RUT_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.RUT_ALUMNOColumn] = value;
                }
            }
            
            public string FECHA_DIA {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.FECHA_DIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.FECHA_DIAColumn] = value;
                }
            }
            
            public string NOMBRE_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.NOMBRE_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.NOMBRE_CODEUDORColumn] = value;
                }
            }
            
            public string RUT_CODEUDOR {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.RUT_CODEUDORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.RUT_CODEUDORColumn] = value;
                }
            }
            
            public string pers_ncorr {
                get {
                    try {
                        return ((string)(this[this.tablet_alumno.pers_ncorrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_alumno.pers_ncorrColumn] = value;
                }
            }
            
            public bool IsCODIGO_ALUMNONull() {
                return this.IsNull(this.tablet_alumno.CODIGO_ALUMNOColumn);
            }
            
            public void SetCODIGO_ALUMNONull() {
                this[this.tablet_alumno.CODIGO_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_CARRERANull() {
                return this.IsNull(this.tablet_alumno.NOMBRE_CARRERAColumn);
            }
            
            public void SetNOMBRE_CARRERANull() {
                this[this.tablet_alumno.NOMBRE_CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsOFERTANull() {
                return this.IsNull(this.tablet_alumno.OFERTAColumn);
            }
            
            public void SetOFERTANull() {
                this[this.tablet_alumno.OFERTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_ALUMNONull() {
                return this.IsNull(this.tablet_alumno.NOMBRE_ALUMNOColumn);
            }
            
            public void SetNOMBRE_ALUMNONull() {
                this[this.tablet_alumno.NOMBRE_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_ALUMNONull() {
                return this.IsNull(this.tablet_alumno.RUT_ALUMNOColumn);
            }
            
            public void SetRUT_ALUMNONull() {
                this[this.tablet_alumno.RUT_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_DIANull() {
                return this.IsNull(this.tablet_alumno.FECHA_DIAColumn);
            }
            
            public void SetFECHA_DIANull() {
                this[this.tablet_alumno.FECHA_DIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_CODEUDORNull() {
                return this.IsNull(this.tablet_alumno.NOMBRE_CODEUDORColumn);
            }
            
            public void SetNOMBRE_CODEUDORNull() {
                this[this.tablet_alumno.NOMBRE_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_CODEUDORNull() {
                return this.IsNull(this.tablet_alumno.RUT_CODEUDORColumn);
            }
            
            public void SetRUT_CODEUDORNull() {
                this[this.tablet_alumno.RUT_CODEUDORColumn] = System.Convert.DBNull;
            }
            
            public bool Ispers_ncorrNull() {
                return this.IsNull(this.tablet_alumno.pers_ncorrColumn);
            }
            
            public void Setpers_ncorrNull() {
                this[this.tablet_alumno.pers_ncorrColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_alumnoRowChangeEvent : EventArgs {
            
            private t_alumnoRow eventRow;
            
            private DataRowAction eventAction;
            
            public t_alumnoRowChangeEvent(t_alumnoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public t_alumnoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_compromisosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNRO_DOCUMENTO;
            
            private DataColumn columnFECHA_VENCIMIENTO;
            
            private DataColumn columnTIPO_COMPROMISO;
            
            private DataColumn columnMONTO_ABONO;
            
            private DataColumn columnTING_TDESC;
            
            private DataColumn columnDING_NDOCTO;
            
            private DataColumn columntipo_detalle;
            
            private DataColumn columndetalle;
            
            internal t_compromisosDataTable() : 
                    base("t_compromisos") {
                this.InitClass();
            }
            
            internal t_compromisosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NRO_DOCUMENTOColumn {
                get {
                    return this.columnNRO_DOCUMENTO;
                }
            }
            
            internal DataColumn FECHA_VENCIMIENTOColumn {
                get {
                    return this.columnFECHA_VENCIMIENTO;
                }
            }
            
            internal DataColumn TIPO_COMPROMISOColumn {
                get {
                    return this.columnTIPO_COMPROMISO;
                }
            }
            
            internal DataColumn MONTO_ABONOColumn {
                get {
                    return this.columnMONTO_ABONO;
                }
            }
            
            internal DataColumn TING_TDESCColumn {
                get {
                    return this.columnTING_TDESC;
                }
            }
            
            internal DataColumn DING_NDOCTOColumn {
                get {
                    return this.columnDING_NDOCTO;
                }
            }
            
            internal DataColumn tipo_detalleColumn {
                get {
                    return this.columntipo_detalle;
                }
            }
            
            internal DataColumn detalleColumn {
                get {
                    return this.columndetalle;
                }
            }
            
            public t_compromisosRow this[int index] {
                get {
                    return ((t_compromisosRow)(this.Rows[index]));
                }
            }
            
            public event t_compromisosRowChangeEventHandler t_compromisosRowChanged;
            
            public event t_compromisosRowChangeEventHandler t_compromisosRowChanging;
            
            public event t_compromisosRowChangeEventHandler t_compromisosRowDeleted;
            
            public event t_compromisosRowChangeEventHandler t_compromisosRowDeleting;
            
            public void Addt_compromisosRow(t_compromisosRow row) {
                this.Rows.Add(row);
            }
            
            public t_compromisosRow Addt_compromisosRow(string NRO_DOCUMENTO, string FECHA_VENCIMIENTO, string TIPO_COMPROMISO, string MONTO_ABONO, string TING_TDESC, string DING_NDOCTO, string tipo_detalle, string detalle) {
                t_compromisosRow rowt_compromisosRow = ((t_compromisosRow)(this.NewRow()));
                rowt_compromisosRow.ItemArray = new object[] {
                        NRO_DOCUMENTO,
                        FECHA_VENCIMIENTO,
                        TIPO_COMPROMISO,
                        MONTO_ABONO,
                        TING_TDESC,
                        DING_NDOCTO,
                        tipo_detalle,
                        detalle};
                this.Rows.Add(rowt_compromisosRow);
                return rowt_compromisosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                t_compromisosDataTable cln = ((t_compromisosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new t_compromisosDataTable();
            }
            
            internal void InitVars() {
                this.columnNRO_DOCUMENTO = this.Columns["NRO_DOCUMENTO"];
                this.columnFECHA_VENCIMIENTO = this.Columns["FECHA_VENCIMIENTO"];
                this.columnTIPO_COMPROMISO = this.Columns["TIPO_COMPROMISO"];
                this.columnMONTO_ABONO = this.Columns["MONTO_ABONO"];
                this.columnTING_TDESC = this.Columns["TING_TDESC"];
                this.columnDING_NDOCTO = this.Columns["DING_NDOCTO"];
                this.columntipo_detalle = this.Columns["tipo_detalle"];
                this.columndetalle = this.Columns["detalle"];
            }
            
            private void InitClass() {
                this.columnNRO_DOCUMENTO = new DataColumn("NRO_DOCUMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNRO_DOCUMENTO);
                this.columnFECHA_VENCIMIENTO = new DataColumn("FECHA_VENCIMIENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_VENCIMIENTO);
                this.columnTIPO_COMPROMISO = new DataColumn("TIPO_COMPROMISO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPO_COMPROMISO);
                this.columnMONTO_ABONO = new DataColumn("MONTO_ABONO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO_ABONO);
                this.columnTING_TDESC = new DataColumn("TING_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTING_TDESC);
                this.columnDING_NDOCTO = new DataColumn("DING_NDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDING_NDOCTO);
                this.columntipo_detalle = new DataColumn("tipo_detalle", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntipo_detalle);
                this.columndetalle = new DataColumn("detalle", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndetalle);
                this.columnNRO_DOCUMENTO.ReadOnly = true;
                this.columnFECHA_VENCIMIENTO.ReadOnly = true;
                this.columnTIPO_COMPROMISO.ReadOnly = true;
                this.columnMONTO_ABONO.ReadOnly = true;
            }
            
            public t_compromisosRow Newt_compromisosRow() {
                return ((t_compromisosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new t_compromisosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(t_compromisosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.t_compromisosRowChanged != null)) {
                    this.t_compromisosRowChanged(this, new t_compromisosRowChangeEvent(((t_compromisosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.t_compromisosRowChanging != null)) {
                    this.t_compromisosRowChanging(this, new t_compromisosRowChangeEvent(((t_compromisosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.t_compromisosRowDeleted != null)) {
                    this.t_compromisosRowDeleted(this, new t_compromisosRowChangeEvent(((t_compromisosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.t_compromisosRowDeleting != null)) {
                    this.t_compromisosRowDeleting(this, new t_compromisosRowChangeEvent(((t_compromisosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removet_compromisosRow(t_compromisosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_compromisosRow : DataRow {
            
            private t_compromisosDataTable tablet_compromisos;
            
            internal t_compromisosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablet_compromisos = ((t_compromisosDataTable)(this.Table));
            }
            
            public string NRO_DOCUMENTO {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.NRO_DOCUMENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.NRO_DOCUMENTOColumn] = value;
                }
            }
            
            public string FECHA_VENCIMIENTO {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.FECHA_VENCIMIENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.FECHA_VENCIMIENTOColumn] = value;
                }
            }
            
            public string TIPO_COMPROMISO {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.TIPO_COMPROMISOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.TIPO_COMPROMISOColumn] = value;
                }
            }
            
            public string MONTO_ABONO {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.MONTO_ABONOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.MONTO_ABONOColumn] = value;
                }
            }
            
            public string TING_TDESC {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.TING_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.TING_TDESCColumn] = value;
                }
            }
            
            public string DING_NDOCTO {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.DING_NDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.DING_NDOCTOColumn] = value;
                }
            }
            
            public string tipo_detalle {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.tipo_detalleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.tipo_detalleColumn] = value;
                }
            }
            
            public string detalle {
                get {
                    try {
                        return ((string)(this[this.tablet_compromisos.detalleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_compromisos.detalleColumn] = value;
                }
            }
            
            public bool IsNRO_DOCUMENTONull() {
                return this.IsNull(this.tablet_compromisos.NRO_DOCUMENTOColumn);
            }
            
            public void SetNRO_DOCUMENTONull() {
                this[this.tablet_compromisos.NRO_DOCUMENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_VENCIMIENTONull() {
                return this.IsNull(this.tablet_compromisos.FECHA_VENCIMIENTOColumn);
            }
            
            public void SetFECHA_VENCIMIENTONull() {
                this[this.tablet_compromisos.FECHA_VENCIMIENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPO_COMPROMISONull() {
                return this.IsNull(this.tablet_compromisos.TIPO_COMPROMISOColumn);
            }
            
            public void SetTIPO_COMPROMISONull() {
                this[this.tablet_compromisos.TIPO_COMPROMISOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTO_ABONONull() {
                return this.IsNull(this.tablet_compromisos.MONTO_ABONOColumn);
            }
            
            public void SetMONTO_ABONONull() {
                this[this.tablet_compromisos.MONTO_ABONOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTING_TDESCNull() {
                return this.IsNull(this.tablet_compromisos.TING_TDESCColumn);
            }
            
            public void SetTING_TDESCNull() {
                this[this.tablet_compromisos.TING_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsDING_NDOCTONull() {
                return this.IsNull(this.tablet_compromisos.DING_NDOCTOColumn);
            }
            
            public void SetDING_NDOCTONull() {
                this[this.tablet_compromisos.DING_NDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool Istipo_detalleNull() {
                return this.IsNull(this.tablet_compromisos.tipo_detalleColumn);
            }
            
            public void Settipo_detalleNull() {
                this[this.tablet_compromisos.tipo_detalleColumn] = System.Convert.DBNull;
            }
            
            public bool IsdetalleNull() {
                return this.IsNull(this.tablet_compromisos.detalleColumn);
            }
            
            public void SetdetalleNull() {
                this[this.tablet_compromisos.detalleColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_compromisosRowChangeEvent : EventArgs {
            
            private t_compromisosRow eventRow;
            
            private DataRowAction eventAction;
            
            public t_compromisosRowChangeEvent(t_compromisosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public t_compromisosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_documentoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNRO_DOCUMENTO;
            
            private DataColumn columnFECHA_DOCUMENTO;
            
            private DataColumn columnNOMBRE_BANCO;
            
            private DataColumn columnNFOLIO;
            
            private DataColumn columnTIPO_PAGO;
            
            private DataColumn columnMONTO_DOC;
            
            private DataColumn columnDETALLES_COMPROMISO;
            
            private DataColumn columnTOTAL;
            
            private DataColumn columnTDOCUMENTO;
            
            private DataColumn columnpers_ncorr;
            
            private DataColumn columnINGR_FPAGO;
            
            private DataColumn columnOTRO;
            
            private DataColumn columningr_ncorrelativo_caja;
            
            internal t_documentoDataTable() : 
                    base("t_documento") {
                this.InitClass();
            }
            
            internal t_documentoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NRO_DOCUMENTOColumn {
                get {
                    return this.columnNRO_DOCUMENTO;
                }
            }
            
            internal DataColumn FECHA_DOCUMENTOColumn {
                get {
                    return this.columnFECHA_DOCUMENTO;
                }
            }
            
            internal DataColumn NOMBRE_BANCOColumn {
                get {
                    return this.columnNOMBRE_BANCO;
                }
            }
            
            internal DataColumn NFOLIOColumn {
                get {
                    return this.columnNFOLIO;
                }
            }
            
            internal DataColumn TIPO_PAGOColumn {
                get {
                    return this.columnTIPO_PAGO;
                }
            }
            
            internal DataColumn MONTO_DOCColumn {
                get {
                    return this.columnMONTO_DOC;
                }
            }
            
            internal DataColumn DETALLES_COMPROMISOColumn {
                get {
                    return this.columnDETALLES_COMPROMISO;
                }
            }
            
            internal DataColumn TOTALColumn {
                get {
                    return this.columnTOTAL;
                }
            }
            
            internal DataColumn TDOCUMENTOColumn {
                get {
                    return this.columnTDOCUMENTO;
                }
            }
            
            internal DataColumn pers_ncorrColumn {
                get {
                    return this.columnpers_ncorr;
                }
            }
            
            internal DataColumn INGR_FPAGOColumn {
                get {
                    return this.columnINGR_FPAGO;
                }
            }
            
            internal DataColumn OTROColumn {
                get {
                    return this.columnOTRO;
                }
            }
            
            internal DataColumn ingr_ncorrelativo_cajaColumn {
                get {
                    return this.columningr_ncorrelativo_caja;
                }
            }
            
            public t_documentoRow this[int index] {
                get {
                    return ((t_documentoRow)(this.Rows[index]));
                }
            }
            
            public event t_documentoRowChangeEventHandler t_documentoRowChanged;
            
            public event t_documentoRowChangeEventHandler t_documentoRowChanging;
            
            public event t_documentoRowChangeEventHandler t_documentoRowDeleted;
            
            public event t_documentoRowChangeEventHandler t_documentoRowDeleting;
            
            public void Addt_documentoRow(t_documentoRow row) {
                this.Rows.Add(row);
            }
            
            public t_documentoRow Addt_documentoRow(string NRO_DOCUMENTO, string FECHA_DOCUMENTO, string NOMBRE_BANCO, string NFOLIO, string TIPO_PAGO, string MONTO_DOC, string DETALLES_COMPROMISO, string TOTAL, string TDOCUMENTO, string pers_ncorr, string INGR_FPAGO, string OTRO, string ingr_ncorrelativo_caja) {
                t_documentoRow rowt_documentoRow = ((t_documentoRow)(this.NewRow()));
                rowt_documentoRow.ItemArray = new object[] {
                        NRO_DOCUMENTO,
                        FECHA_DOCUMENTO,
                        NOMBRE_BANCO,
                        NFOLIO,
                        TIPO_PAGO,
                        MONTO_DOC,
                        DETALLES_COMPROMISO,
                        TOTAL,
                        TDOCUMENTO,
                        pers_ncorr,
                        INGR_FPAGO,
                        OTRO,
                        ingr_ncorrelativo_caja};
                this.Rows.Add(rowt_documentoRow);
                return rowt_documentoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                t_documentoDataTable cln = ((t_documentoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new t_documentoDataTable();
            }
            
            internal void InitVars() {
                this.columnNRO_DOCUMENTO = this.Columns["NRO_DOCUMENTO"];
                this.columnFECHA_DOCUMENTO = this.Columns["FECHA_DOCUMENTO"];
                this.columnNOMBRE_BANCO = this.Columns["NOMBRE_BANCO"];
                this.columnNFOLIO = this.Columns["NFOLIO"];
                this.columnTIPO_PAGO = this.Columns["TIPO_PAGO"];
                this.columnMONTO_DOC = this.Columns["MONTO_DOC"];
                this.columnDETALLES_COMPROMISO = this.Columns["DETALLES_COMPROMISO"];
                this.columnTOTAL = this.Columns["TOTAL"];
                this.columnTDOCUMENTO = this.Columns["TDOCUMENTO"];
                this.columnpers_ncorr = this.Columns["pers_ncorr"];
                this.columnINGR_FPAGO = this.Columns["INGR_FPAGO"];
                this.columnOTRO = this.Columns["OTRO"];
                this.columningr_ncorrelativo_caja = this.Columns["ingr_ncorrelativo_caja"];
            }
            
            private void InitClass() {
                this.columnNRO_DOCUMENTO = new DataColumn("NRO_DOCUMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNRO_DOCUMENTO);
                this.columnFECHA_DOCUMENTO = new DataColumn("FECHA_DOCUMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_DOCUMENTO);
                this.columnNOMBRE_BANCO = new DataColumn("NOMBRE_BANCO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_BANCO);
                this.columnNFOLIO = new DataColumn("NFOLIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNFOLIO);
                this.columnTIPO_PAGO = new DataColumn("TIPO_PAGO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPO_PAGO);
                this.columnMONTO_DOC = new DataColumn("MONTO_DOC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO_DOC);
                this.columnDETALLES_COMPROMISO = new DataColumn("DETALLES_COMPROMISO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDETALLES_COMPROMISO);
                this.columnTOTAL = new DataColumn("TOTAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL);
                this.columnTDOCUMENTO = new DataColumn("TDOCUMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTDOCUMENTO);
                this.columnpers_ncorr = new DataColumn("pers_ncorr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpers_ncorr);
                this.columnINGR_FPAGO = new DataColumn("INGR_FPAGO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINGR_FPAGO);
                this.columnOTRO = new DataColumn("OTRO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOTRO);
                this.columningr_ncorrelativo_caja = new DataColumn("ingr_ncorrelativo_caja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columningr_ncorrelativo_caja);
                this.columnNRO_DOCUMENTO.ReadOnly = true;
                this.columnFECHA_DOCUMENTO.ReadOnly = true;
                this.columnNOMBRE_BANCO.ReadOnly = true;
                this.columnNFOLIO.ReadOnly = true;
                this.columnTIPO_PAGO.ReadOnly = true;
                this.columnMONTO_DOC.ReadOnly = true;
                this.columnDETALLES_COMPROMISO.ReadOnly = true;
                this.columnTOTAL.ReadOnly = true;
                this.columnTDOCUMENTO.ReadOnly = true;
                this.columnpers_ncorr.ReadOnly = true;
                this.columnINGR_FPAGO.ReadOnly = true;
                this.columnOTRO.ReadOnly = true;
                this.columningr_ncorrelativo_caja.ReadOnly = true;
            }
            
            public t_documentoRow Newt_documentoRow() {
                return ((t_documentoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new t_documentoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(t_documentoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.t_documentoRowChanged != null)) {
                    this.t_documentoRowChanged(this, new t_documentoRowChangeEvent(((t_documentoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.t_documentoRowChanging != null)) {
                    this.t_documentoRowChanging(this, new t_documentoRowChangeEvent(((t_documentoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.t_documentoRowDeleted != null)) {
                    this.t_documentoRowDeleted(this, new t_documentoRowChangeEvent(((t_documentoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.t_documentoRowDeleting != null)) {
                    this.t_documentoRowDeleting(this, new t_documentoRowChangeEvent(((t_documentoRow)(e.Row)), e.Action));
                }
            }
            
            public void Removet_documentoRow(t_documentoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_documentoRow : DataRow {
            
            private t_documentoDataTable tablet_documento;
            
            internal t_documentoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablet_documento = ((t_documentoDataTable)(this.Table));
            }
            
            public string NRO_DOCUMENTO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.NRO_DOCUMENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.NRO_DOCUMENTOColumn] = value;
                }
            }
            
            public string FECHA_DOCUMENTO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.FECHA_DOCUMENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.FECHA_DOCUMENTOColumn] = value;
                }
            }
            
            public string NOMBRE_BANCO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.NOMBRE_BANCOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.NOMBRE_BANCOColumn] = value;
                }
            }
            
            public string NFOLIO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.NFOLIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.NFOLIOColumn] = value;
                }
            }
            
            public string TIPO_PAGO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.TIPO_PAGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.TIPO_PAGOColumn] = value;
                }
            }
            
            public string MONTO_DOC {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.MONTO_DOCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.MONTO_DOCColumn] = value;
                }
            }
            
            public string DETALLES_COMPROMISO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.DETALLES_COMPROMISOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.DETALLES_COMPROMISOColumn] = value;
                }
            }
            
            public string TOTAL {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.TOTALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.TOTALColumn] = value;
                }
            }
            
            public string TDOCUMENTO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.TDOCUMENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.TDOCUMENTOColumn] = value;
                }
            }
            
            public string pers_ncorr {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.pers_ncorrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.pers_ncorrColumn] = value;
                }
            }
            
            public string INGR_FPAGO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.INGR_FPAGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.INGR_FPAGOColumn] = value;
                }
            }
            
            public string OTRO {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.OTROColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.OTROColumn] = value;
                }
            }
            
            public string ingr_ncorrelativo_caja {
                get {
                    try {
                        return ((string)(this[this.tablet_documento.ingr_ncorrelativo_cajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablet_documento.ingr_ncorrelativo_cajaColumn] = value;
                }
            }
            
            public bool IsNRO_DOCUMENTONull() {
                return this.IsNull(this.tablet_documento.NRO_DOCUMENTOColumn);
            }
            
            public void SetNRO_DOCUMENTONull() {
                this[this.tablet_documento.NRO_DOCUMENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_DOCUMENTONull() {
                return this.IsNull(this.tablet_documento.FECHA_DOCUMENTOColumn);
            }
            
            public void SetFECHA_DOCUMENTONull() {
                this[this.tablet_documento.FECHA_DOCUMENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_BANCONull() {
                return this.IsNull(this.tablet_documento.NOMBRE_BANCOColumn);
            }
            
            public void SetNOMBRE_BANCONull() {
                this[this.tablet_documento.NOMBRE_BANCOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNFOLIONull() {
                return this.IsNull(this.tablet_documento.NFOLIOColumn);
            }
            
            public void SetNFOLIONull() {
                this[this.tablet_documento.NFOLIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPO_PAGONull() {
                return this.IsNull(this.tablet_documento.TIPO_PAGOColumn);
            }
            
            public void SetTIPO_PAGONull() {
                this[this.tablet_documento.TIPO_PAGOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTO_DOCNull() {
                return this.IsNull(this.tablet_documento.MONTO_DOCColumn);
            }
            
            public void SetMONTO_DOCNull() {
                this[this.tablet_documento.MONTO_DOCColumn] = System.Convert.DBNull;
            }
            
            public bool IsDETALLES_COMPROMISONull() {
                return this.IsNull(this.tablet_documento.DETALLES_COMPROMISOColumn);
            }
            
            public void SetDETALLES_COMPROMISONull() {
                this[this.tablet_documento.DETALLES_COMPROMISOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTALNull() {
                return this.IsNull(this.tablet_documento.TOTALColumn);
            }
            
            public void SetTOTALNull() {
                this[this.tablet_documento.TOTALColumn] = System.Convert.DBNull;
            }
            
            public bool IsTDOCUMENTONull() {
                return this.IsNull(this.tablet_documento.TDOCUMENTOColumn);
            }
            
            public void SetTDOCUMENTONull() {
                this[this.tablet_documento.TDOCUMENTOColumn] = System.Convert.DBNull;
            }
            
            public bool Ispers_ncorrNull() {
                return this.IsNull(this.tablet_documento.pers_ncorrColumn);
            }
            
            public void Setpers_ncorrNull() {
                this[this.tablet_documento.pers_ncorrColumn] = System.Convert.DBNull;
            }
            
            public bool IsINGR_FPAGONull() {
                return this.IsNull(this.tablet_documento.INGR_FPAGOColumn);
            }
            
            public void SetINGR_FPAGONull() {
                this[this.tablet_documento.INGR_FPAGOColumn] = System.Convert.DBNull;
            }
            
            public bool IsOTRONull() {
                return this.IsNull(this.tablet_documento.OTROColumn);
            }
            
            public void SetOTRONull() {
                this[this.tablet_documento.OTROColumn] = System.Convert.DBNull;
            }
            
            public bool Isingr_ncorrelativo_cajaNull() {
                return this.IsNull(this.tablet_documento.ingr_ncorrelativo_cajaColumn);
            }
            
            public void Setingr_ncorrelativo_cajaNull() {
                this[this.tablet_documento.ingr_ncorrelativo_cajaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class t_documentoRowChangeEvent : EventArgs {
            
            private t_documentoRow eventRow;
            
            private DataRowAction eventAction;
            
            public t_documentoRowChangeEvent(t_documentoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public t_documentoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
