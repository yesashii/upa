//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.6018
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace contrato_docente {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class Contrato_Docente14 : DataSet {
        
        private contratoDataTable tablecontrato;
        
        public Contrato_Docente14() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected Contrato_Docente14(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["contrato"] != null)) {
                    this.Tables.Add(new contratoDataTable(ds.Tables["contrato"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public contratoDataTable contrato {
            get {
                return this.tablecontrato;
            }
        }
        
        public override DataSet Clone() {
            Contrato_Docente14 cln = ((Contrato_Docente14)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["contrato"] != null)) {
                this.Tables.Add(new contratoDataTable(ds.Tables["contrato"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablecontrato = ((contratoDataTable)(this.Tables["contrato"]));
            if ((this.tablecontrato != null)) {
                this.tablecontrato.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "Contrato_Docente14";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/Contrato_Docente14.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablecontrato = new contratoDataTable();
            this.Tables.Add(this.tablecontrato);
        }
        
        private bool ShouldSerializecontrato() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void contratoRowChangeEventHandler(object sender, contratoRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class contratoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCDOC_NCORR;
            
            private DataColumn columnpers_ncorr;
            
            private DataColumn columnNombre_Docente;
            
            private DataColumn columnRut_Docente;
            
            private DataColumn columnFecha_Nac;
            
            private DataColumn columnEstado_Civil;
            
            private DataColumn columnDireccion;
            
            private DataColumn columnComuna;
            
            private DataColumn columnCiudad;
            
            private DataColumn columnPROFESION;
            
            private DataColumn columnBLOQ_ANEXO;
            
            private DataColumn columnCARR_CCOD;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnASIG_CCOD;
            
            private DataColumn columnASIG_NHORAS;
            
            private DataColumn columnASIG_TDESC;
            
            private DataColumn columnDUAS_TDESC;
            
            private DataColumn columnBPRO_MVALOR;
            
            private DataColumn columnValor;
            
            private DataColumn columnINST_TRAZON_SOCIAL;
            
            private DataColumn columnMombreRepLeg;
            
            private DataColumn columnTipoDocente;
            
            private DataColumn columnNacionalidad;
            
            private DataColumn columnFechaI;
            
            private DataColumn columnFechaF;
            
            private DataColumn columnHOR_COORDINACION1;
            
            private DataColumn columnHOR_COORDINACION2;
            
            private DataColumn columnDV;
            
            private DataColumn columnFechaF1;
            
            private DataColumn columnSECC_TDESC;
            
            private DataColumn columnPORCENTAJE;
            
            private DataColumn columnMONTOMC;
            
            private DataColumn columnsede_tdesc;
            
            private DataColumn columnnum_cuotas;
            
            private DataColumn columnfecha_inicio;
            
            private DataColumn columnfecha_fin;
            
            private DataColumn columntipo_profesor;
            
            internal contratoDataTable() : 
                    base("contrato") {
                this.InitClass();
            }
            
            internal contratoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CDOC_NCORRColumn {
                get {
                    return this.columnCDOC_NCORR;
                }
            }
            
            internal DataColumn pers_ncorrColumn {
                get {
                    return this.columnpers_ncorr;
                }
            }
            
            internal DataColumn Nombre_DocenteColumn {
                get {
                    return this.columnNombre_Docente;
                }
            }
            
            internal DataColumn Rut_DocenteColumn {
                get {
                    return this.columnRut_Docente;
                }
            }
            
            internal DataColumn Fecha_NacColumn {
                get {
                    return this.columnFecha_Nac;
                }
            }
            
            internal DataColumn Estado_CivilColumn {
                get {
                    return this.columnEstado_Civil;
                }
            }
            
            internal DataColumn DireccionColumn {
                get {
                    return this.columnDireccion;
                }
            }
            
            internal DataColumn ComunaColumn {
                get {
                    return this.columnComuna;
                }
            }
            
            internal DataColumn CiudadColumn {
                get {
                    return this.columnCiudad;
                }
            }
            
            internal DataColumn PROFESIONColumn {
                get {
                    return this.columnPROFESION;
                }
            }
            
            internal DataColumn BLOQ_ANEXOColumn {
                get {
                    return this.columnBLOQ_ANEXO;
                }
            }
            
            internal DataColumn CARR_CCODColumn {
                get {
                    return this.columnCARR_CCOD;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn ASIG_CCODColumn {
                get {
                    return this.columnASIG_CCOD;
                }
            }
            
            internal DataColumn ASIG_NHORASColumn {
                get {
                    return this.columnASIG_NHORAS;
                }
            }
            
            internal DataColumn ASIG_TDESCColumn {
                get {
                    return this.columnASIG_TDESC;
                }
            }
            
            internal DataColumn DUAS_TDESCColumn {
                get {
                    return this.columnDUAS_TDESC;
                }
            }
            
            internal DataColumn BPRO_MVALORColumn {
                get {
                    return this.columnBPRO_MVALOR;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn INST_TRAZON_SOCIALColumn {
                get {
                    return this.columnINST_TRAZON_SOCIAL;
                }
            }
            
            internal DataColumn MombreRepLegColumn {
                get {
                    return this.columnMombreRepLeg;
                }
            }
            
            internal DataColumn TipoDocenteColumn {
                get {
                    return this.columnTipoDocente;
                }
            }
            
            internal DataColumn NacionalidadColumn {
                get {
                    return this.columnNacionalidad;
                }
            }
            
            internal DataColumn FechaIColumn {
                get {
                    return this.columnFechaI;
                }
            }
            
            internal DataColumn FechaFColumn {
                get {
                    return this.columnFechaF;
                }
            }
            
            internal DataColumn HOR_COORDINACION1Column {
                get {
                    return this.columnHOR_COORDINACION1;
                }
            }
            
            internal DataColumn HOR_COORDINACION2Column {
                get {
                    return this.columnHOR_COORDINACION2;
                }
            }
            
            internal DataColumn DVColumn {
                get {
                    return this.columnDV;
                }
            }
            
            internal DataColumn FechaF1Column {
                get {
                    return this.columnFechaF1;
                }
            }
            
            internal DataColumn SECC_TDESCColumn {
                get {
                    return this.columnSECC_TDESC;
                }
            }
            
            internal DataColumn PORCENTAJEColumn {
                get {
                    return this.columnPORCENTAJE;
                }
            }
            
            internal DataColumn MONTOMCColumn {
                get {
                    return this.columnMONTOMC;
                }
            }
            
            internal DataColumn sede_tdescColumn {
                get {
                    return this.columnsede_tdesc;
                }
            }
            
            internal DataColumn num_cuotasColumn {
                get {
                    return this.columnnum_cuotas;
                }
            }
            
            internal DataColumn fecha_inicioColumn {
                get {
                    return this.columnfecha_inicio;
                }
            }
            
            internal DataColumn fecha_finColumn {
                get {
                    return this.columnfecha_fin;
                }
            }
            
            internal DataColumn tipo_profesorColumn {
                get {
                    return this.columntipo_profesor;
                }
            }
            
            public contratoRow this[int index] {
                get {
                    return ((contratoRow)(this.Rows[index]));
                }
            }
            
            public event contratoRowChangeEventHandler contratoRowChanged;
            
            public event contratoRowChangeEventHandler contratoRowChanging;
            
            public event contratoRowChangeEventHandler contratoRowDeleted;
            
            public event contratoRowChangeEventHandler contratoRowDeleting;
            
            public void AddcontratoRow(contratoRow row) {
                this.Rows.Add(row);
            }
            
            public contratoRow AddcontratoRow(
                        int CDOC_NCORR, 
                        int pers_ncorr, 
                        string Nombre_Docente, 
                        int Rut_Docente, 
                        string Fecha_Nac, 
                        string Estado_Civil, 
                        string Direccion, 
                        string Comuna, 
                        string Ciudad, 
                        string PROFESION, 
                        int BLOQ_ANEXO, 
                        int CARR_CCOD, 
                        string CARR_TDESC, 
                        string ASIG_CCOD, 
                        int ASIG_NHORAS, 
                        string ASIG_TDESC, 
                        string DUAS_TDESC, 
                        int BPRO_MVALOR, 
                        int Valor, 
                        string INST_TRAZON_SOCIAL, 
                        string MombreRepLeg, 
                        string TipoDocente, 
                        string Nacionalidad, 
                        string FechaI, 
                        string FechaF, 
                        int HOR_COORDINACION1, 
                        int HOR_COORDINACION2, 
                        string DV, 
                        string FechaF1, 
                        string SECC_TDESC, 
                        string PORCENTAJE, 
                        string MONTOMC, 
                        string sede_tdesc, 
                        string num_cuotas, 
                        string fecha_inicio, 
                        string fecha_fin, 
                        string tipo_profesor) {
                contratoRow rowcontratoRow = ((contratoRow)(this.NewRow()));
                rowcontratoRow.ItemArray = new object[] {
                        CDOC_NCORR,
                        pers_ncorr,
                        Nombre_Docente,
                        Rut_Docente,
                        Fecha_Nac,
                        Estado_Civil,
                        Direccion,
                        Comuna,
                        Ciudad,
                        PROFESION,
                        BLOQ_ANEXO,
                        CARR_CCOD,
                        CARR_TDESC,
                        ASIG_CCOD,
                        ASIG_NHORAS,
                        ASIG_TDESC,
                        DUAS_TDESC,
                        BPRO_MVALOR,
                        Valor,
                        INST_TRAZON_SOCIAL,
                        MombreRepLeg,
                        TipoDocente,
                        Nacionalidad,
                        FechaI,
                        FechaF,
                        HOR_COORDINACION1,
                        HOR_COORDINACION2,
                        DV,
                        FechaF1,
                        SECC_TDESC,
                        PORCENTAJE,
                        MONTOMC,
                        sede_tdesc,
                        num_cuotas,
                        fecha_inicio,
                        fecha_fin,
                        tipo_profesor};
                this.Rows.Add(rowcontratoRow);
                return rowcontratoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                contratoDataTable cln = ((contratoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new contratoDataTable();
            }
            
            internal void InitVars() {
                this.columnCDOC_NCORR = this.Columns["CDOC_NCORR"];
                this.columnpers_ncorr = this.Columns["pers_ncorr"];
                this.columnNombre_Docente = this.Columns["Nombre_Docente"];
                this.columnRut_Docente = this.Columns["Rut_Docente"];
                this.columnFecha_Nac = this.Columns["Fecha_Nac"];
                this.columnEstado_Civil = this.Columns["Estado_Civil"];
                this.columnDireccion = this.Columns["Direccion"];
                this.columnComuna = this.Columns["Comuna"];
                this.columnCiudad = this.Columns["Ciudad"];
                this.columnPROFESION = this.Columns["PROFESION"];
                this.columnBLOQ_ANEXO = this.Columns["BLOQ_ANEXO"];
                this.columnCARR_CCOD = this.Columns["CARR_CCOD"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnASIG_CCOD = this.Columns["ASIG_CCOD"];
                this.columnASIG_NHORAS = this.Columns["ASIG_NHORAS"];
                this.columnASIG_TDESC = this.Columns["ASIG_TDESC"];
                this.columnDUAS_TDESC = this.Columns["DUAS_TDESC"];
                this.columnBPRO_MVALOR = this.Columns["BPRO_MVALOR"];
                this.columnValor = this.Columns["Valor"];
                this.columnINST_TRAZON_SOCIAL = this.Columns["INST_TRAZON_SOCIAL"];
                this.columnMombreRepLeg = this.Columns["MombreRepLeg"];
                this.columnTipoDocente = this.Columns["TipoDocente"];
                this.columnNacionalidad = this.Columns["Nacionalidad"];
                this.columnFechaI = this.Columns["FechaI"];
                this.columnFechaF = this.Columns["FechaF"];
                this.columnHOR_COORDINACION1 = this.Columns["HOR_COORDINACION1"];
                this.columnHOR_COORDINACION2 = this.Columns["HOR_COORDINACION2"];
                this.columnDV = this.Columns["DV"];
                this.columnFechaF1 = this.Columns["FechaF1"];
                this.columnSECC_TDESC = this.Columns["SECC_TDESC"];
                this.columnPORCENTAJE = this.Columns["PORCENTAJE"];
                this.columnMONTOMC = this.Columns["MONTOMC"];
                this.columnsede_tdesc = this.Columns["sede_tdesc"];
                this.columnnum_cuotas = this.Columns["num_cuotas"];
                this.columnfecha_inicio = this.Columns["fecha_inicio"];
                this.columnfecha_fin = this.Columns["fecha_fin"];
                this.columntipo_profesor = this.Columns["tipo_profesor"];
            }
            
            private void InitClass() {
                this.columnCDOC_NCORR = new DataColumn("CDOC_NCORR", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCDOC_NCORR);
                this.columnpers_ncorr = new DataColumn("pers_ncorr", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpers_ncorr);
                this.columnNombre_Docente = new DataColumn("Nombre_Docente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombre_Docente);
                this.columnRut_Docente = new DataColumn("Rut_Docente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRut_Docente);
                this.columnFecha_Nac = new DataColumn("Fecha_Nac", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha_Nac);
                this.columnEstado_Civil = new DataColumn("Estado_Civil", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEstado_Civil);
                this.columnDireccion = new DataColumn("Direccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDireccion);
                this.columnComuna = new DataColumn("Comuna", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComuna);
                this.columnCiudad = new DataColumn("Ciudad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCiudad);
                this.columnPROFESION = new DataColumn("PROFESION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROFESION);
                this.columnBLOQ_ANEXO = new DataColumn("BLOQ_ANEXO", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBLOQ_ANEXO);
                this.columnCARR_CCOD = new DataColumn("CARR_CCOD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_CCOD);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnASIG_CCOD = new DataColumn("ASIG_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_CCOD);
                this.columnASIG_NHORAS = new DataColumn("ASIG_NHORAS", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_NHORAS);
                this.columnASIG_TDESC = new DataColumn("ASIG_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnASIG_TDESC);
                this.columnDUAS_TDESC = new DataColumn("DUAS_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDUAS_TDESC);
                this.columnBPRO_MVALOR = new DataColumn("BPRO_MVALOR", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBPRO_MVALOR);
                this.columnValor = new DataColumn("Valor", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnINST_TRAZON_SOCIAL = new DataColumn("INST_TRAZON_SOCIAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINST_TRAZON_SOCIAL);
                this.columnMombreRepLeg = new DataColumn("MombreRepLeg", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMombreRepLeg);
                this.columnTipoDocente = new DataColumn("TipoDocente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipoDocente);
                this.columnNacionalidad = new DataColumn("Nacionalidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNacionalidad);
                this.columnFechaI = new DataColumn("FechaI", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaI);
                this.columnFechaF = new DataColumn("FechaF", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaF);
                this.columnHOR_COORDINACION1 = new DataColumn("HOR_COORDINACION1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHOR_COORDINACION1);
                this.columnHOR_COORDINACION2 = new DataColumn("HOR_COORDINACION2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHOR_COORDINACION2);
                this.columnDV = new DataColumn("DV", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDV);
                this.columnFechaF1 = new DataColumn("FechaF1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaF1);
                this.columnSECC_TDESC = new DataColumn("SECC_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSECC_TDESC);
                this.columnPORCENTAJE = new DataColumn("PORCENTAJE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPORCENTAJE);
                this.columnMONTOMC = new DataColumn("MONTOMC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTOMC);
                this.columnsede_tdesc = new DataColumn("sede_tdesc", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsede_tdesc);
                this.columnnum_cuotas = new DataColumn("num_cuotas", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnum_cuotas);
                this.columnfecha_inicio = new DataColumn("fecha_inicio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfecha_inicio);
                this.columnfecha_fin = new DataColumn("fecha_fin", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfecha_fin);
                this.columntipo_profesor = new DataColumn("tipo_profesor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntipo_profesor);
                this.columnCDOC_NCORR.ReadOnly = true;
                this.columnpers_ncorr.ReadOnly = true;
                this.columnNombre_Docente.ReadOnly = true;
                this.columnRut_Docente.ReadOnly = true;
                this.columnFecha_Nac.ReadOnly = true;
                this.columnEstado_Civil.ReadOnly = true;
                this.columnDireccion.ReadOnly = true;
                this.columnComuna.ReadOnly = true;
                this.columnCiudad.ReadOnly = true;
                this.columnPROFESION.ReadOnly = true;
                this.columnBLOQ_ANEXO.ReadOnly = true;
                this.columnCARR_CCOD.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnASIG_CCOD.ReadOnly = true;
                this.columnASIG_NHORAS.ReadOnly = true;
                this.columnASIG_TDESC.ReadOnly = true;
                this.columnDUAS_TDESC.ReadOnly = true;
                this.columnBPRO_MVALOR.ReadOnly = true;
                this.columnValor.ReadOnly = true;
                this.columnINST_TRAZON_SOCIAL.ReadOnly = true;
                this.columnMombreRepLeg.ReadOnly = true;
                this.columnTipoDocente.ReadOnly = true;
                this.columnNacionalidad.ReadOnly = true;
                this.columnFechaI.ReadOnly = true;
                this.columnFechaF.ReadOnly = true;
                this.columnHOR_COORDINACION1.ReadOnly = true;
                this.columnHOR_COORDINACION2.ReadOnly = true;
                this.columnDV.ReadOnly = true;
                this.columnFechaF1.ReadOnly = true;
                this.columnSECC_TDESC.ReadOnly = true;
                this.columnPORCENTAJE.ReadOnly = true;
                this.columnMONTOMC.ReadOnly = true;
                this.columnsede_tdesc.ReadOnly = true;
                this.columnnum_cuotas.ReadOnly = true;
                this.columnfecha_inicio.ReadOnly = true;
                this.columnfecha_fin.ReadOnly = true;
                this.columntipo_profesor.ReadOnly = true;
            }
            
            public contratoRow NewcontratoRow() {
                return ((contratoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new contratoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(contratoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.contratoRowChanged != null)) {
                    this.contratoRowChanged(this, new contratoRowChangeEvent(((contratoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.contratoRowChanging != null)) {
                    this.contratoRowChanging(this, new contratoRowChangeEvent(((contratoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.contratoRowDeleted != null)) {
                    this.contratoRowDeleted(this, new contratoRowChangeEvent(((contratoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.contratoRowDeleting != null)) {
                    this.contratoRowDeleting(this, new contratoRowChangeEvent(((contratoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovecontratoRow(contratoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class contratoRow : DataRow {
            
            private contratoDataTable tablecontrato;
            
            internal contratoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablecontrato = ((contratoDataTable)(this.Table));
            }
            
            public int CDOC_NCORR {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.CDOC_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.CDOC_NCORRColumn] = value;
                }
            }
            
            public int pers_ncorr {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.pers_ncorrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.pers_ncorrColumn] = value;
                }
            }
            
            public string Nombre_Docente {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.Nombre_DocenteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.Nombre_DocenteColumn] = value;
                }
            }
            
            public int Rut_Docente {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.Rut_DocenteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.Rut_DocenteColumn] = value;
                }
            }
            
            public string Fecha_Nac {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.Fecha_NacColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.Fecha_NacColumn] = value;
                }
            }
            
            public string Estado_Civil {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.Estado_CivilColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.Estado_CivilColumn] = value;
                }
            }
            
            public string Direccion {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.DireccionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.DireccionColumn] = value;
                }
            }
            
            public string Comuna {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.ComunaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.ComunaColumn] = value;
                }
            }
            
            public string Ciudad {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.CiudadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.CiudadColumn] = value;
                }
            }
            
            public string PROFESION {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.PROFESIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.PROFESIONColumn] = value;
                }
            }
            
            public int BLOQ_ANEXO {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.BLOQ_ANEXOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.BLOQ_ANEXOColumn] = value;
                }
            }
            
            public int CARR_CCOD {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.CARR_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.CARR_CCODColumn] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.CARR_TDESCColumn] = value;
                }
            }
            
            public string ASIG_CCOD {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.ASIG_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.ASIG_CCODColumn] = value;
                }
            }
            
            public int ASIG_NHORAS {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.ASIG_NHORASColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.ASIG_NHORASColumn] = value;
                }
            }
            
            public string ASIG_TDESC {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.ASIG_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.ASIG_TDESCColumn] = value;
                }
            }
            
            public string DUAS_TDESC {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.DUAS_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.DUAS_TDESCColumn] = value;
                }
            }
            
            public int BPRO_MVALOR {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.BPRO_MVALORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.BPRO_MVALORColumn] = value;
                }
            }
            
            public int Valor {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.ValorColumn] = value;
                }
            }
            
            public string INST_TRAZON_SOCIAL {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.INST_TRAZON_SOCIALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.INST_TRAZON_SOCIALColumn] = value;
                }
            }
            
            public string MombreRepLeg {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.MombreRepLegColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.MombreRepLegColumn] = value;
                }
            }
            
            public string TipoDocente {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.TipoDocenteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.TipoDocenteColumn] = value;
                }
            }
            
            public string Nacionalidad {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.NacionalidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.NacionalidadColumn] = value;
                }
            }
            
            public string FechaI {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.FechaIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.FechaIColumn] = value;
                }
            }
            
            public string FechaF {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.FechaFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.FechaFColumn] = value;
                }
            }
            
            public int HOR_COORDINACION1 {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.HOR_COORDINACION1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.HOR_COORDINACION1Column] = value;
                }
            }
            
            public int HOR_COORDINACION2 {
                get {
                    try {
                        return ((int)(this[this.tablecontrato.HOR_COORDINACION2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.HOR_COORDINACION2Column] = value;
                }
            }
            
            public string DV {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.DVColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.DVColumn] = value;
                }
            }
            
            public string FechaF1 {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.FechaF1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.FechaF1Column] = value;
                }
            }
            
            public string SECC_TDESC {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.SECC_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.SECC_TDESCColumn] = value;
                }
            }
            
            public string PORCENTAJE {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.PORCENTAJEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.PORCENTAJEColumn] = value;
                }
            }
            
            public string MONTOMC {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.MONTOMCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.MONTOMCColumn] = value;
                }
            }
            
            public string sede_tdesc {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.sede_tdescColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.sede_tdescColumn] = value;
                }
            }
            
            public string num_cuotas {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.num_cuotasColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.num_cuotasColumn] = value;
                }
            }
            
            public string fecha_inicio {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.fecha_inicioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.fecha_inicioColumn] = value;
                }
            }
            
            public string fecha_fin {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.fecha_finColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.fecha_finColumn] = value;
                }
            }
            
            public string tipo_profesor {
                get {
                    try {
                        return ((string)(this[this.tablecontrato.tipo_profesorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablecontrato.tipo_profesorColumn] = value;
                }
            }
            
            public bool IsCDOC_NCORRNull() {
                return this.IsNull(this.tablecontrato.CDOC_NCORRColumn);
            }
            
            public void SetCDOC_NCORRNull() {
                this[this.tablecontrato.CDOC_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool Ispers_ncorrNull() {
                return this.IsNull(this.tablecontrato.pers_ncorrColumn);
            }
            
            public void Setpers_ncorrNull() {
                this[this.tablecontrato.pers_ncorrColumn] = System.Convert.DBNull;
            }
            
            public bool IsNombre_DocenteNull() {
                return this.IsNull(this.tablecontrato.Nombre_DocenteColumn);
            }
            
            public void SetNombre_DocenteNull() {
                this[this.tablecontrato.Nombre_DocenteColumn] = System.Convert.DBNull;
            }
            
            public bool IsRut_DocenteNull() {
                return this.IsNull(this.tablecontrato.Rut_DocenteColumn);
            }
            
            public void SetRut_DocenteNull() {
                this[this.tablecontrato.Rut_DocenteColumn] = System.Convert.DBNull;
            }
            
            public bool IsFecha_NacNull() {
                return this.IsNull(this.tablecontrato.Fecha_NacColumn);
            }
            
            public void SetFecha_NacNull() {
                this[this.tablecontrato.Fecha_NacColumn] = System.Convert.DBNull;
            }
            
            public bool IsEstado_CivilNull() {
                return this.IsNull(this.tablecontrato.Estado_CivilColumn);
            }
            
            public void SetEstado_CivilNull() {
                this[this.tablecontrato.Estado_CivilColumn] = System.Convert.DBNull;
            }
            
            public bool IsDireccionNull() {
                return this.IsNull(this.tablecontrato.DireccionColumn);
            }
            
            public void SetDireccionNull() {
                this[this.tablecontrato.DireccionColumn] = System.Convert.DBNull;
            }
            
            public bool IsComunaNull() {
                return this.IsNull(this.tablecontrato.ComunaColumn);
            }
            
            public void SetComunaNull() {
                this[this.tablecontrato.ComunaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCiudadNull() {
                return this.IsNull(this.tablecontrato.CiudadColumn);
            }
            
            public void SetCiudadNull() {
                this[this.tablecontrato.CiudadColumn] = System.Convert.DBNull;
            }
            
            public bool IsPROFESIONNull() {
                return this.IsNull(this.tablecontrato.PROFESIONColumn);
            }
            
            public void SetPROFESIONNull() {
                this[this.tablecontrato.PROFESIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsBLOQ_ANEXONull() {
                return this.IsNull(this.tablecontrato.BLOQ_ANEXOColumn);
            }
            
            public void SetBLOQ_ANEXONull() {
                this[this.tablecontrato.BLOQ_ANEXOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_CCODNull() {
                return this.IsNull(this.tablecontrato.CARR_CCODColumn);
            }
            
            public void SetCARR_CCODNull() {
                this[this.tablecontrato.CARR_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tablecontrato.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tablecontrato.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_CCODNull() {
                return this.IsNull(this.tablecontrato.ASIG_CCODColumn);
            }
            
            public void SetASIG_CCODNull() {
                this[this.tablecontrato.ASIG_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_NHORASNull() {
                return this.IsNull(this.tablecontrato.ASIG_NHORASColumn);
            }
            
            public void SetASIG_NHORASNull() {
                this[this.tablecontrato.ASIG_NHORASColumn] = System.Convert.DBNull;
            }
            
            public bool IsASIG_TDESCNull() {
                return this.IsNull(this.tablecontrato.ASIG_TDESCColumn);
            }
            
            public void SetASIG_TDESCNull() {
                this[this.tablecontrato.ASIG_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsDUAS_TDESCNull() {
                return this.IsNull(this.tablecontrato.DUAS_TDESCColumn);
            }
            
            public void SetDUAS_TDESCNull() {
                this[this.tablecontrato.DUAS_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsBPRO_MVALORNull() {
                return this.IsNull(this.tablecontrato.BPRO_MVALORColumn);
            }
            
            public void SetBPRO_MVALORNull() {
                this[this.tablecontrato.BPRO_MVALORColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tablecontrato.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tablecontrato.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsINST_TRAZON_SOCIALNull() {
                return this.IsNull(this.tablecontrato.INST_TRAZON_SOCIALColumn);
            }
            
            public void SetINST_TRAZON_SOCIALNull() {
                this[this.tablecontrato.INST_TRAZON_SOCIALColumn] = System.Convert.DBNull;
            }
            
            public bool IsMombreRepLegNull() {
                return this.IsNull(this.tablecontrato.MombreRepLegColumn);
            }
            
            public void SetMombreRepLegNull() {
                this[this.tablecontrato.MombreRepLegColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipoDocenteNull() {
                return this.IsNull(this.tablecontrato.TipoDocenteColumn);
            }
            
            public void SetTipoDocenteNull() {
                this[this.tablecontrato.TipoDocenteColumn] = System.Convert.DBNull;
            }
            
            public bool IsNacionalidadNull() {
                return this.IsNull(this.tablecontrato.NacionalidadColumn);
            }
            
            public void SetNacionalidadNull() {
                this[this.tablecontrato.NacionalidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaINull() {
                return this.IsNull(this.tablecontrato.FechaIColumn);
            }
            
            public void SetFechaINull() {
                this[this.tablecontrato.FechaIColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaFNull() {
                return this.IsNull(this.tablecontrato.FechaFColumn);
            }
            
            public void SetFechaFNull() {
                this[this.tablecontrato.FechaFColumn] = System.Convert.DBNull;
            }
            
            public bool IsHOR_COORDINACION1Null() {
                return this.IsNull(this.tablecontrato.HOR_COORDINACION1Column);
            }
            
            public void SetHOR_COORDINACION1Null() {
                this[this.tablecontrato.HOR_COORDINACION1Column] = System.Convert.DBNull;
            }
            
            public bool IsHOR_COORDINACION2Null() {
                return this.IsNull(this.tablecontrato.HOR_COORDINACION2Column);
            }
            
            public void SetHOR_COORDINACION2Null() {
                this[this.tablecontrato.HOR_COORDINACION2Column] = System.Convert.DBNull;
            }
            
            public bool IsDVNull() {
                return this.IsNull(this.tablecontrato.DVColumn);
            }
            
            public void SetDVNull() {
                this[this.tablecontrato.DVColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaF1Null() {
                return this.IsNull(this.tablecontrato.FechaF1Column);
            }
            
            public void SetFechaF1Null() {
                this[this.tablecontrato.FechaF1Column] = System.Convert.DBNull;
            }
            
            public bool IsSECC_TDESCNull() {
                return this.IsNull(this.tablecontrato.SECC_TDESCColumn);
            }
            
            public void SetSECC_TDESCNull() {
                this[this.tablecontrato.SECC_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsPORCENTAJENull() {
                return this.IsNull(this.tablecontrato.PORCENTAJEColumn);
            }
            
            public void SetPORCENTAJENull() {
                this[this.tablecontrato.PORCENTAJEColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTOMCNull() {
                return this.IsNull(this.tablecontrato.MONTOMCColumn);
            }
            
            public void SetMONTOMCNull() {
                this[this.tablecontrato.MONTOMCColumn] = System.Convert.DBNull;
            }
            
            public bool Issede_tdescNull() {
                return this.IsNull(this.tablecontrato.sede_tdescColumn);
            }
            
            public void Setsede_tdescNull() {
                this[this.tablecontrato.sede_tdescColumn] = System.Convert.DBNull;
            }
            
            public bool Isnum_cuotasNull() {
                return this.IsNull(this.tablecontrato.num_cuotasColumn);
            }
            
            public void Setnum_cuotasNull() {
                this[this.tablecontrato.num_cuotasColumn] = System.Convert.DBNull;
            }
            
            public bool Isfecha_inicioNull() {
                return this.IsNull(this.tablecontrato.fecha_inicioColumn);
            }
            
            public void Setfecha_inicioNull() {
                this[this.tablecontrato.fecha_inicioColumn] = System.Convert.DBNull;
            }
            
            public bool Isfecha_finNull() {
                return this.IsNull(this.tablecontrato.fecha_finColumn);
            }
            
            public void Setfecha_finNull() {
                this[this.tablecontrato.fecha_finColumn] = System.Convert.DBNull;
            }
            
            public bool Istipo_profesorNull() {
                return this.IsNull(this.tablecontrato.tipo_profesorColumn);
            }
            
            public void Settipo_profesorNull() {
                this[this.tablecontrato.tipo_profesorColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class contratoRowChangeEvent : EventArgs {
            
            private contratoRow eventRow;
            
            private DataRowAction eventAction;
            
            public contratoRowChangeEvent(contratoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public contratoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
