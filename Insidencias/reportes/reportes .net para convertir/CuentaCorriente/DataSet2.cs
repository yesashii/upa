//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.6018
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace CuentaCorriente {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet2 : DataSet {
        
        private T_CreditosDataTable tableT_Creditos;
        
        public DataSet2() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet2(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_Creditos"] != null)) {
                    this.Tables.Add(new T_CreditosDataTable(ds.Tables["T_Creditos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CreditosDataTable T_Creditos {
            get {
                return this.tableT_Creditos;
            }
        }
        
        public override DataSet Clone() {
            DataSet2 cln = ((DataSet2)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["T_Creditos"] != null)) {
                this.Tables.Add(new T_CreditosDataTable(ds.Tables["T_Creditos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableT_Creditos = ((T_CreditosDataTable)(this.Tables["T_Creditos"]));
            if ((this.tableT_Creditos != null)) {
                this.tableT_Creditos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet2";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet2.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableT_Creditos = new T_CreditosDataTable();
            this.Tables.Add(this.tableT_Creditos);
        }
        
        private bool ShouldSerializeT_Creditos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void T_CreditosRowChangeEventHandler(object sender, T_CreditosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CreditosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnPERS_NCORR;
            
            private DataColumn columnCONT_NCORR;
            
            private DataColumn columnPAGA_NCORR;
            
            private DataColumn columnPAGA_NPAGARE;
            
            private DataColumn columnSTDE_CCOD;
            
            private DataColumn columnSTDE_TDESC;
            
            private DataColumn columnBENE_MMONTO;
            
            private DataColumn columnMONE_CCOD;
            
            private DataColumn columnBENE_NPORCENTAJE;
            
            private DataColumn columnUFOM_NCORR;
            
            private DataColumn columnTBEN_CCOD;
            
            private DataColumn columnBENE_FBENEFICIO;
            
            private DataColumn columnSDES_MCOLEGIATURA;
            
            private DataColumn columnUFOM_MVALOR;
            
            private DataColumn columnMONTO_CREDITO;
            
            private DataColumn columnEPAG_CCOD;
            
            private DataColumn columnBENE_MMONTO_ACUM_COLEGIATURA;
            
            internal T_CreditosDataTable() : 
                    base("T_Creditos") {
                this.InitClass();
            }
            
            internal T_CreditosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn PERS_NCORRColumn {
                get {
                    return this.columnPERS_NCORR;
                }
            }
            
            internal DataColumn CONT_NCORRColumn {
                get {
                    return this.columnCONT_NCORR;
                }
            }
            
            internal DataColumn PAGA_NCORRColumn {
                get {
                    return this.columnPAGA_NCORR;
                }
            }
            
            internal DataColumn PAGA_NPAGAREColumn {
                get {
                    return this.columnPAGA_NPAGARE;
                }
            }
            
            internal DataColumn STDE_CCODColumn {
                get {
                    return this.columnSTDE_CCOD;
                }
            }
            
            internal DataColumn STDE_TDESCColumn {
                get {
                    return this.columnSTDE_TDESC;
                }
            }
            
            internal DataColumn BENE_MMONTOColumn {
                get {
                    return this.columnBENE_MMONTO;
                }
            }
            
            internal DataColumn MONE_CCODColumn {
                get {
                    return this.columnMONE_CCOD;
                }
            }
            
            internal DataColumn BENE_NPORCENTAJEColumn {
                get {
                    return this.columnBENE_NPORCENTAJE;
                }
            }
            
            internal DataColumn UFOM_NCORRColumn {
                get {
                    return this.columnUFOM_NCORR;
                }
            }
            
            internal DataColumn TBEN_CCODColumn {
                get {
                    return this.columnTBEN_CCOD;
                }
            }
            
            internal DataColumn BENE_FBENEFICIOColumn {
                get {
                    return this.columnBENE_FBENEFICIO;
                }
            }
            
            internal DataColumn SDES_MCOLEGIATURAColumn {
                get {
                    return this.columnSDES_MCOLEGIATURA;
                }
            }
            
            internal DataColumn UFOM_MVALORColumn {
                get {
                    return this.columnUFOM_MVALOR;
                }
            }
            
            internal DataColumn MONTO_CREDITOColumn {
                get {
                    return this.columnMONTO_CREDITO;
                }
            }
            
            internal DataColumn EPAG_CCODColumn {
                get {
                    return this.columnEPAG_CCOD;
                }
            }
            
            internal DataColumn BENE_MMONTO_ACUM_COLEGIATURAColumn {
                get {
                    return this.columnBENE_MMONTO_ACUM_COLEGIATURA;
                }
            }
            
            public T_CreditosRow this[int index] {
                get {
                    return ((T_CreditosRow)(this.Rows[index]));
                }
            }
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowChanged;
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowChanging;
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowDeleted;
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowDeleting;
            
            public void AddT_CreditosRow(T_CreditosRow row) {
                this.Rows.Add(row);
            }
            
            public T_CreditosRow AddT_CreditosRow(
                        string PERS_NCORR, 
                        string CONT_NCORR, 
                        string PAGA_NCORR, 
                        string PAGA_NPAGARE, 
                        string STDE_CCOD, 
                        string STDE_TDESC, 
                        string BENE_MMONTO, 
                        string MONE_CCOD, 
                        string BENE_NPORCENTAJE, 
                        string UFOM_NCORR, 
                        string TBEN_CCOD, 
                        string BENE_FBENEFICIO, 
                        string SDES_MCOLEGIATURA, 
                        string UFOM_MVALOR, 
                        string MONTO_CREDITO, 
                        string EPAG_CCOD, 
                        string BENE_MMONTO_ACUM_COLEGIATURA) {
                T_CreditosRow rowT_CreditosRow = ((T_CreditosRow)(this.NewRow()));
                rowT_CreditosRow.ItemArray = new object[] {
                        PERS_NCORR,
                        CONT_NCORR,
                        PAGA_NCORR,
                        PAGA_NPAGARE,
                        STDE_CCOD,
                        STDE_TDESC,
                        BENE_MMONTO,
                        MONE_CCOD,
                        BENE_NPORCENTAJE,
                        UFOM_NCORR,
                        TBEN_CCOD,
                        BENE_FBENEFICIO,
                        SDES_MCOLEGIATURA,
                        UFOM_MVALOR,
                        MONTO_CREDITO,
                        EPAG_CCOD,
                        BENE_MMONTO_ACUM_COLEGIATURA};
                this.Rows.Add(rowT_CreditosRow);
                return rowT_CreditosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_CreditosDataTable cln = ((T_CreditosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_CreditosDataTable();
            }
            
            internal void InitVars() {
                this.columnPERS_NCORR = this.Columns["PERS_NCORR"];
                this.columnCONT_NCORR = this.Columns["CONT_NCORR"];
                this.columnPAGA_NCORR = this.Columns["PAGA_NCORR"];
                this.columnPAGA_NPAGARE = this.Columns["PAGA_NPAGARE"];
                this.columnSTDE_CCOD = this.Columns["STDE_CCOD"];
                this.columnSTDE_TDESC = this.Columns["STDE_TDESC"];
                this.columnBENE_MMONTO = this.Columns["BENE_MMONTO"];
                this.columnMONE_CCOD = this.Columns["MONE_CCOD"];
                this.columnBENE_NPORCENTAJE = this.Columns["BENE_NPORCENTAJE"];
                this.columnUFOM_NCORR = this.Columns["UFOM_NCORR"];
                this.columnTBEN_CCOD = this.Columns["TBEN_CCOD"];
                this.columnBENE_FBENEFICIO = this.Columns["BENE_FBENEFICIO"];
                this.columnSDES_MCOLEGIATURA = this.Columns["SDES_MCOLEGIATURA"];
                this.columnUFOM_MVALOR = this.Columns["UFOM_MVALOR"];
                this.columnMONTO_CREDITO = this.Columns["MONTO_CREDITO"];
                this.columnEPAG_CCOD = this.Columns["EPAG_CCOD"];
                this.columnBENE_MMONTO_ACUM_COLEGIATURA = this.Columns["BENE_MMONTO_ACUM_COLEGIATURA"];
            }
            
            private void InitClass() {
                this.columnPERS_NCORR = new DataColumn("PERS_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NCORR);
                this.columnCONT_NCORR = new DataColumn("CONT_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONT_NCORR);
                this.columnPAGA_NCORR = new DataColumn("PAGA_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPAGA_NCORR);
                this.columnPAGA_NPAGARE = new DataColumn("PAGA_NPAGARE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPAGA_NPAGARE);
                this.columnSTDE_CCOD = new DataColumn("STDE_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTDE_CCOD);
                this.columnSTDE_TDESC = new DataColumn("STDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTDE_TDESC);
                this.columnBENE_MMONTO = new DataColumn("BENE_MMONTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_MMONTO);
                this.columnMONE_CCOD = new DataColumn("MONE_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONE_CCOD);
                this.columnBENE_NPORCENTAJE = new DataColumn("BENE_NPORCENTAJE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_NPORCENTAJE);
                this.columnUFOM_NCORR = new DataColumn("UFOM_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUFOM_NCORR);
                this.columnTBEN_CCOD = new DataColumn("TBEN_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTBEN_CCOD);
                this.columnBENE_FBENEFICIO = new DataColumn("BENE_FBENEFICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_FBENEFICIO);
                this.columnSDES_MCOLEGIATURA = new DataColumn("SDES_MCOLEGIATURA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSDES_MCOLEGIATURA);
                this.columnUFOM_MVALOR = new DataColumn("UFOM_MVALOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUFOM_MVALOR);
                this.columnMONTO_CREDITO = new DataColumn("MONTO_CREDITO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO_CREDITO);
                this.columnEPAG_CCOD = new DataColumn("EPAG_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEPAG_CCOD);
                this.columnBENE_MMONTO_ACUM_COLEGIATURA = new DataColumn("BENE_MMONTO_ACUM_COLEGIATURA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_MMONTO_ACUM_COLEGIATURA);
                this.columnPERS_NCORR.ReadOnly = true;
                this.columnCONT_NCORR.ReadOnly = true;
                this.columnPAGA_NCORR.ReadOnly = true;
                this.columnPAGA_NPAGARE.ReadOnly = true;
                this.columnSTDE_CCOD.ReadOnly = true;
                this.columnSTDE_TDESC.ReadOnly = true;
                this.columnBENE_MMONTO.ReadOnly = true;
                this.columnMONE_CCOD.ReadOnly = true;
                this.columnBENE_NPORCENTAJE.ReadOnly = true;
                this.columnUFOM_NCORR.ReadOnly = true;
                this.columnTBEN_CCOD.ReadOnly = true;
                this.columnBENE_FBENEFICIO.ReadOnly = true;
                this.columnSDES_MCOLEGIATURA.ReadOnly = true;
                this.columnUFOM_MVALOR.ReadOnly = true;
                this.columnMONTO_CREDITO.ReadOnly = true;
                this.columnEPAG_CCOD.ReadOnly = true;
                this.columnBENE_MMONTO_ACUM_COLEGIATURA.ReadOnly = true;
            }
            
            public T_CreditosRow NewT_CreditosRow() {
                return ((T_CreditosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_CreditosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_CreditosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CreditosRowChanged != null)) {
                    this.T_CreditosRowChanged(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CreditosRowChanging != null)) {
                    this.T_CreditosRowChanging(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CreditosRowDeleted != null)) {
                    this.T_CreditosRowDeleted(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CreditosRowDeleting != null)) {
                    this.T_CreditosRowDeleting(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_CreditosRow(T_CreditosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CreditosRow : DataRow {
            
            private T_CreditosDataTable tableT_Creditos;
            
            internal T_CreditosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Creditos = ((T_CreditosDataTable)(this.Table));
            }
            
            public string PERS_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.PERS_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.PERS_NCORRColumn] = value;
                }
            }
            
            public string CONT_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.CONT_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.CONT_NCORRColumn] = value;
                }
            }
            
            public string PAGA_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.PAGA_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.PAGA_NCORRColumn] = value;
                }
            }
            
            public string PAGA_NPAGARE {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.PAGA_NPAGAREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.PAGA_NPAGAREColumn] = value;
                }
            }
            
            public string STDE_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.STDE_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.STDE_CCODColumn] = value;
                }
            }
            
            public string STDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.STDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.STDE_TDESCColumn] = value;
                }
            }
            
            public string BENE_MMONTO {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_MMONTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_MMONTOColumn] = value;
                }
            }
            
            public string MONE_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.MONE_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.MONE_CCODColumn] = value;
                }
            }
            
            public string BENE_NPORCENTAJE {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_NPORCENTAJEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_NPORCENTAJEColumn] = value;
                }
            }
            
            public string UFOM_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.UFOM_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.UFOM_NCORRColumn] = value;
                }
            }
            
            public string TBEN_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.TBEN_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.TBEN_CCODColumn] = value;
                }
            }
            
            public string BENE_FBENEFICIO {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_FBENEFICIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_FBENEFICIOColumn] = value;
                }
            }
            
            public string SDES_MCOLEGIATURA {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.SDES_MCOLEGIATURAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.SDES_MCOLEGIATURAColumn] = value;
                }
            }
            
            public string UFOM_MVALOR {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.UFOM_MVALORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.UFOM_MVALORColumn] = value;
                }
            }
            
            public string MONTO_CREDITO {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.MONTO_CREDITOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.MONTO_CREDITOColumn] = value;
                }
            }
            
            public string EPAG_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.EPAG_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.EPAG_CCODColumn] = value;
                }
            }
            
            public string BENE_MMONTO_ACUM_COLEGIATURA {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_MMONTO_ACUM_COLEGIATURAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_MMONTO_ACUM_COLEGIATURAColumn] = value;
                }
            }
            
            public bool IsPERS_NCORRNull() {
                return this.IsNull(this.tableT_Creditos.PERS_NCORRColumn);
            }
            
            public void SetPERS_NCORRNull() {
                this[this.tableT_Creditos.PERS_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONT_NCORRNull() {
                return this.IsNull(this.tableT_Creditos.CONT_NCORRColumn);
            }
            
            public void SetCONT_NCORRNull() {
                this[this.tableT_Creditos.CONT_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsPAGA_NCORRNull() {
                return this.IsNull(this.tableT_Creditos.PAGA_NCORRColumn);
            }
            
            public void SetPAGA_NCORRNull() {
                this[this.tableT_Creditos.PAGA_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsPAGA_NPAGARENull() {
                return this.IsNull(this.tableT_Creditos.PAGA_NPAGAREColumn);
            }
            
            public void SetPAGA_NPAGARENull() {
                this[this.tableT_Creditos.PAGA_NPAGAREColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTDE_CCODNull() {
                return this.IsNull(this.tableT_Creditos.STDE_CCODColumn);
            }
            
            public void SetSTDE_CCODNull() {
                this[this.tableT_Creditos.STDE_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTDE_TDESCNull() {
                return this.IsNull(this.tableT_Creditos.STDE_TDESCColumn);
            }
            
            public void SetSTDE_TDESCNull() {
                this[this.tableT_Creditos.STDE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_MMONTONull() {
                return this.IsNull(this.tableT_Creditos.BENE_MMONTOColumn);
            }
            
            public void SetBENE_MMONTONull() {
                this[this.tableT_Creditos.BENE_MMONTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONE_CCODNull() {
                return this.IsNull(this.tableT_Creditos.MONE_CCODColumn);
            }
            
            public void SetMONE_CCODNull() {
                this[this.tableT_Creditos.MONE_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_NPORCENTAJENull() {
                return this.IsNull(this.tableT_Creditos.BENE_NPORCENTAJEColumn);
            }
            
            public void SetBENE_NPORCENTAJENull() {
                this[this.tableT_Creditos.BENE_NPORCENTAJEColumn] = System.Convert.DBNull;
            }
            
            public bool IsUFOM_NCORRNull() {
                return this.IsNull(this.tableT_Creditos.UFOM_NCORRColumn);
            }
            
            public void SetUFOM_NCORRNull() {
                this[this.tableT_Creditos.UFOM_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsTBEN_CCODNull() {
                return this.IsNull(this.tableT_Creditos.TBEN_CCODColumn);
            }
            
            public void SetTBEN_CCODNull() {
                this[this.tableT_Creditos.TBEN_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_FBENEFICIONull() {
                return this.IsNull(this.tableT_Creditos.BENE_FBENEFICIOColumn);
            }
            
            public void SetBENE_FBENEFICIONull() {
                this[this.tableT_Creditos.BENE_FBENEFICIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSDES_MCOLEGIATURANull() {
                return this.IsNull(this.tableT_Creditos.SDES_MCOLEGIATURAColumn);
            }
            
            public void SetSDES_MCOLEGIATURANull() {
                this[this.tableT_Creditos.SDES_MCOLEGIATURAColumn] = System.Convert.DBNull;
            }
            
            public bool IsUFOM_MVALORNull() {
                return this.IsNull(this.tableT_Creditos.UFOM_MVALORColumn);
            }
            
            public void SetUFOM_MVALORNull() {
                this[this.tableT_Creditos.UFOM_MVALORColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTO_CREDITONull() {
                return this.IsNull(this.tableT_Creditos.MONTO_CREDITOColumn);
            }
            
            public void SetMONTO_CREDITONull() {
                this[this.tableT_Creditos.MONTO_CREDITOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEPAG_CCODNull() {
                return this.IsNull(this.tableT_Creditos.EPAG_CCODColumn);
            }
            
            public void SetEPAG_CCODNull() {
                this[this.tableT_Creditos.EPAG_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_MMONTO_ACUM_COLEGIATURANull() {
                return this.IsNull(this.tableT_Creditos.BENE_MMONTO_ACUM_COLEGIATURAColumn);
            }
            
            public void SetBENE_MMONTO_ACUM_COLEGIATURANull() {
                this[this.tableT_Creditos.BENE_MMONTO_ACUM_COLEGIATURAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CreditosRowChangeEvent : EventArgs {
            
            private T_CreditosRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_CreditosRowChangeEvent(T_CreditosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_CreditosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
