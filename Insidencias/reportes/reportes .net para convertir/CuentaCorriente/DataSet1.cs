//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace CuentaCorriente {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private T_detallesDataTable tableT_detalles;
        
        private ComentariosDataTable tableComentarios;
        
        private T_AlumnoDataTable tableT_Alumno;
        
        private T_CreditosDataTable tableT_Creditos;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_detalles"] != null)) {
                    this.Tables.Add(new T_detallesDataTable(ds.Tables["T_detalles"]));
                }
                if ((ds.Tables["Comentarios"] != null)) {
                    this.Tables.Add(new ComentariosDataTable(ds.Tables["Comentarios"]));
                }
                if ((ds.Tables["T_Alumno"] != null)) {
                    this.Tables.Add(new T_AlumnoDataTable(ds.Tables["T_Alumno"]));
                }
                if ((ds.Tables["T_Creditos"] != null)) {
                    this.Tables.Add(new T_CreditosDataTable(ds.Tables["T_Creditos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_detallesDataTable T_detalles {
            get {
                return this.tableT_detalles;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ComentariosDataTable Comentarios {
            get {
                return this.tableComentarios;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_AlumnoDataTable T_Alumno {
            get {
                return this.tableT_Alumno;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CreditosDataTable T_Creditos {
            get {
                return this.tableT_Creditos;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["T_detalles"] != null)) {
                this.Tables.Add(new T_detallesDataTable(ds.Tables["T_detalles"]));
            }
            if ((ds.Tables["Comentarios"] != null)) {
                this.Tables.Add(new ComentariosDataTable(ds.Tables["Comentarios"]));
            }
            if ((ds.Tables["T_Alumno"] != null)) {
                this.Tables.Add(new T_AlumnoDataTable(ds.Tables["T_Alumno"]));
            }
            if ((ds.Tables["T_Creditos"] != null)) {
                this.Tables.Add(new T_CreditosDataTable(ds.Tables["T_Creditos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableT_detalles = ((T_detallesDataTable)(this.Tables["T_detalles"]));
            if ((this.tableT_detalles != null)) {
                this.tableT_detalles.InitVars();
            }
            this.tableComentarios = ((ComentariosDataTable)(this.Tables["Comentarios"]));
            if ((this.tableComentarios != null)) {
                this.tableComentarios.InitVars();
            }
            this.tableT_Alumno = ((T_AlumnoDataTable)(this.Tables["T_Alumno"]));
            if ((this.tableT_Alumno != null)) {
                this.tableT_Alumno.InitVars();
            }
            this.tableT_Creditos = ((T_CreditosDataTable)(this.Tables["T_Creditos"]));
            if ((this.tableT_Creditos != null)) {
                this.tableT_Creditos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableT_detalles = new T_detallesDataTable();
            this.Tables.Add(this.tableT_detalles);
            this.tableComentarios = new ComentariosDataTable();
            this.Tables.Add(this.tableComentarios);
            this.tableT_Alumno = new T_AlumnoDataTable();
            this.Tables.Add(this.tableT_Alumno);
            this.tableT_Creditos = new T_CreditosDataTable();
            this.Tables.Add(this.tableT_Creditos);
        }
        
        private bool ShouldSerializeT_detalles() {
            return false;
        }
        
        private bool ShouldSerializeComentarios() {
            return false;
        }
        
        private bool ShouldSerializeT_Alumno() {
            return false;
        }
        
        private bool ShouldSerializeT_Creditos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void T_detallesRowChangeEventHandler(object sender, T_detallesRowChangeEvent e);
        
        public delegate void ComentariosRowChangeEventHandler(object sender, ComentariosRowChangeEvent e);
        
        public delegate void T_AlumnoRowChangeEventHandler(object sender, T_AlumnoRowChangeEvent e);
        
        public delegate void T_CreditosRowChangeEventHandler(object sender, T_CreditosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_detallesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnPERS_NCORR;
            
            private DataColumn columnINST_CCOD;
            
            private DataColumn columnCOMP_NDOCTO;
            
            private DataColumn columnTCOM_CCOD;
            
            private DataColumn columnDCOM_NCOMPROMISO;
            
            private DataColumn columnNCUOTA;
            
            private DataColumn columnCOMP_FDOCTO;
            
            private DataColumn columnDCOM_FCOMPROMISO;
            
            private DataColumn columnDCOM_MCOMPROMISO;
            
            private DataColumn columnTING_CCOD;
            
            private DataColumn columnDING_NDOCTO;
            
            private DataColumn columnABONOS;
            
            private DataColumn columnSALDO;
            
            private DataColumn columnEDIN_CCOD;
            
            private DataColumn columnEDIN_TDESC;
            
            private DataColumn columnTCOM_TDESC;
            
            private DataColumn columnTING_TDESC;
            
            private DataColumn columnDOCUMENTADO;
            
            internal T_detallesDataTable() : 
                    base("T_detalles") {
                this.InitClass();
            }
            
            internal T_detallesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn PERS_NCORRColumn {
                get {
                    return this.columnPERS_NCORR;
                }
            }
            
            internal DataColumn INST_CCODColumn {
                get {
                    return this.columnINST_CCOD;
                }
            }
            
            internal DataColumn COMP_NDOCTOColumn {
                get {
                    return this.columnCOMP_NDOCTO;
                }
            }
            
            internal DataColumn TCOM_CCODColumn {
                get {
                    return this.columnTCOM_CCOD;
                }
            }
            
            internal DataColumn DCOM_NCOMPROMISOColumn {
                get {
                    return this.columnDCOM_NCOMPROMISO;
                }
            }
            
            internal DataColumn NCUOTAColumn {
                get {
                    return this.columnNCUOTA;
                }
            }
            
            internal DataColumn COMP_FDOCTOColumn {
                get {
                    return this.columnCOMP_FDOCTO;
                }
            }
            
            internal DataColumn DCOM_FCOMPROMISOColumn {
                get {
                    return this.columnDCOM_FCOMPROMISO;
                }
            }
            
            internal DataColumn DCOM_MCOMPROMISOColumn {
                get {
                    return this.columnDCOM_MCOMPROMISO;
                }
            }
            
            internal DataColumn TING_CCODColumn {
                get {
                    return this.columnTING_CCOD;
                }
            }
            
            internal DataColumn DING_NDOCTOColumn {
                get {
                    return this.columnDING_NDOCTO;
                }
            }
            
            internal DataColumn ABONOSColumn {
                get {
                    return this.columnABONOS;
                }
            }
            
            internal DataColumn SALDOColumn {
                get {
                    return this.columnSALDO;
                }
            }
            
            internal DataColumn EDIN_CCODColumn {
                get {
                    return this.columnEDIN_CCOD;
                }
            }
            
            internal DataColumn EDIN_TDESCColumn {
                get {
                    return this.columnEDIN_TDESC;
                }
            }
            
            internal DataColumn TCOM_TDESCColumn {
                get {
                    return this.columnTCOM_TDESC;
                }
            }
            
            internal DataColumn TING_TDESCColumn {
                get {
                    return this.columnTING_TDESC;
                }
            }
            
            internal DataColumn DOCUMENTADOColumn {
                get {
                    return this.columnDOCUMENTADO;
                }
            }
            
            public T_detallesRow this[int index] {
                get {
                    return ((T_detallesRow)(this.Rows[index]));
                }
            }
            
            public event T_detallesRowChangeEventHandler T_detallesRowChanged;
            
            public event T_detallesRowChangeEventHandler T_detallesRowChanging;
            
            public event T_detallesRowChangeEventHandler T_detallesRowDeleted;
            
            public event T_detallesRowChangeEventHandler T_detallesRowDeleting;
            
            public void AddT_detallesRow(T_detallesRow row) {
                this.Rows.Add(row);
            }
            
            public T_detallesRow AddT_detallesRow(
                        string PERS_NCORR, 
                        string INST_CCOD, 
                        string COMP_NDOCTO, 
                        string TCOM_CCOD, 
                        string DCOM_NCOMPROMISO, 
                        string NCUOTA, 
                        string COMP_FDOCTO, 
                        string DCOM_FCOMPROMISO, 
                        string DCOM_MCOMPROMISO, 
                        string TING_CCOD, 
                        string DING_NDOCTO, 
                        string ABONOS, 
                        string SALDO, 
                        string EDIN_CCOD, 
                        string EDIN_TDESC, 
                        string TCOM_TDESC, 
                        string TING_TDESC, 
                        string DOCUMENTADO) {
                T_detallesRow rowT_detallesRow = ((T_detallesRow)(this.NewRow()));
                rowT_detallesRow.ItemArray = new object[] {
                        PERS_NCORR,
                        INST_CCOD,
                        COMP_NDOCTO,
                        TCOM_CCOD,
                        DCOM_NCOMPROMISO,
                        NCUOTA,
                        COMP_FDOCTO,
                        DCOM_FCOMPROMISO,
                        DCOM_MCOMPROMISO,
                        TING_CCOD,
                        DING_NDOCTO,
                        ABONOS,
                        SALDO,
                        EDIN_CCOD,
                        EDIN_TDESC,
                        TCOM_TDESC,
                        TING_TDESC,
                        DOCUMENTADO};
                this.Rows.Add(rowT_detallesRow);
                return rowT_detallesRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_detallesDataTable cln = ((T_detallesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_detallesDataTable();
            }
            
            internal void InitVars() {
                this.columnPERS_NCORR = this.Columns["PERS_NCORR"];
                this.columnINST_CCOD = this.Columns["INST_CCOD"];
                this.columnCOMP_NDOCTO = this.Columns["COMP_NDOCTO"];
                this.columnTCOM_CCOD = this.Columns["TCOM_CCOD"];
                this.columnDCOM_NCOMPROMISO = this.Columns["DCOM_NCOMPROMISO"];
                this.columnNCUOTA = this.Columns["NCUOTA"];
                this.columnCOMP_FDOCTO = this.Columns["COMP_FDOCTO"];
                this.columnDCOM_FCOMPROMISO = this.Columns["DCOM_FCOMPROMISO"];
                this.columnDCOM_MCOMPROMISO = this.Columns["DCOM_MCOMPROMISO"];
                this.columnTING_CCOD = this.Columns["TING_CCOD"];
                this.columnDING_NDOCTO = this.Columns["DING_NDOCTO"];
                this.columnABONOS = this.Columns["ABONOS"];
                this.columnSALDO = this.Columns["SALDO"];
                this.columnEDIN_CCOD = this.Columns["EDIN_CCOD"];
                this.columnEDIN_TDESC = this.Columns["EDIN_TDESC"];
                this.columnTCOM_TDESC = this.Columns["TCOM_TDESC"];
                this.columnTING_TDESC = this.Columns["TING_TDESC"];
                this.columnDOCUMENTADO = this.Columns["DOCUMENTADO"];
            }
            
            private void InitClass() {
                this.columnPERS_NCORR = new DataColumn("PERS_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NCORR);
                this.columnINST_CCOD = new DataColumn("INST_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINST_CCOD);
                this.columnCOMP_NDOCTO = new DataColumn("COMP_NDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMP_NDOCTO);
                this.columnTCOM_CCOD = new DataColumn("TCOM_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTCOM_CCOD);
                this.columnDCOM_NCOMPROMISO = new DataColumn("DCOM_NCOMPROMISO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDCOM_NCOMPROMISO);
                this.columnNCUOTA = new DataColumn("NCUOTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNCUOTA);
                this.columnCOMP_FDOCTO = new DataColumn("COMP_FDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMP_FDOCTO);
                this.columnDCOM_FCOMPROMISO = new DataColumn("DCOM_FCOMPROMISO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDCOM_FCOMPROMISO);
                this.columnDCOM_MCOMPROMISO = new DataColumn("DCOM_MCOMPROMISO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDCOM_MCOMPROMISO);
                this.columnTING_CCOD = new DataColumn("TING_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTING_CCOD);
                this.columnDING_NDOCTO = new DataColumn("DING_NDOCTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDING_NDOCTO);
                this.columnABONOS = new DataColumn("ABONOS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnABONOS);
                this.columnSALDO = new DataColumn("SALDO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSALDO);
                this.columnEDIN_CCOD = new DataColumn("EDIN_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEDIN_CCOD);
                this.columnEDIN_TDESC = new DataColumn("EDIN_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEDIN_TDESC);
                this.columnTCOM_TDESC = new DataColumn("TCOM_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTCOM_TDESC);
                this.columnTING_TDESC = new DataColumn("TING_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTING_TDESC);
                this.columnDOCUMENTADO = new DataColumn("DOCUMENTADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDOCUMENTADO);
                this.columnPERS_NCORR.ReadOnly = true;
                this.columnINST_CCOD.ReadOnly = true;
                this.columnCOMP_NDOCTO.ReadOnly = true;
                this.columnTCOM_CCOD.ReadOnly = true;
                this.columnDCOM_NCOMPROMISO.ReadOnly = true;
                this.columnNCUOTA.ReadOnly = true;
                this.columnCOMP_FDOCTO.ReadOnly = true;
                this.columnDCOM_FCOMPROMISO.ReadOnly = true;
                this.columnDCOM_MCOMPROMISO.ReadOnly = true;
                this.columnTING_CCOD.ReadOnly = true;
                this.columnDING_NDOCTO.ReadOnly = true;
                this.columnABONOS.ReadOnly = true;
                this.columnSALDO.ReadOnly = true;
                this.columnEDIN_CCOD.ReadOnly = true;
                this.columnEDIN_TDESC.ReadOnly = true;
                this.columnTCOM_TDESC.ReadOnly = true;
                this.columnTING_TDESC.ReadOnly = true;
                this.columnDOCUMENTADO.ReadOnly = true;
            }
            
            public T_detallesRow NewT_detallesRow() {
                return ((T_detallesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_detallesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_detallesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_detallesRowChanged != null)) {
                    this.T_detallesRowChanged(this, new T_detallesRowChangeEvent(((T_detallesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_detallesRowChanging != null)) {
                    this.T_detallesRowChanging(this, new T_detallesRowChangeEvent(((T_detallesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_detallesRowDeleted != null)) {
                    this.T_detallesRowDeleted(this, new T_detallesRowChangeEvent(((T_detallesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_detallesRowDeleting != null)) {
                    this.T_detallesRowDeleting(this, new T_detallesRowChangeEvent(((T_detallesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_detallesRow(T_detallesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_detallesRow : DataRow {
            
            private T_detallesDataTable tableT_detalles;
            
            internal T_detallesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_detalles = ((T_detallesDataTable)(this.Table));
            }
            
            public string PERS_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.PERS_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.PERS_NCORRColumn] = value;
                }
            }
            
            public string INST_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.INST_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.INST_CCODColumn] = value;
                }
            }
            
            public string COMP_NDOCTO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.COMP_NDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.COMP_NDOCTOColumn] = value;
                }
            }
            
            public string TCOM_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.TCOM_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.TCOM_CCODColumn] = value;
                }
            }
            
            public string DCOM_NCOMPROMISO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.DCOM_NCOMPROMISOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.DCOM_NCOMPROMISOColumn] = value;
                }
            }
            
            public string NCUOTA {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.NCUOTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.NCUOTAColumn] = value;
                }
            }
            
            public string COMP_FDOCTO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.COMP_FDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.COMP_FDOCTOColumn] = value;
                }
            }
            
            public string DCOM_FCOMPROMISO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.DCOM_FCOMPROMISOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.DCOM_FCOMPROMISOColumn] = value;
                }
            }
            
            public string DCOM_MCOMPROMISO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.DCOM_MCOMPROMISOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.DCOM_MCOMPROMISOColumn] = value;
                }
            }
            
            public string TING_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.TING_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.TING_CCODColumn] = value;
                }
            }
            
            public string DING_NDOCTO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.DING_NDOCTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.DING_NDOCTOColumn] = value;
                }
            }
            
            public string ABONOS {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.ABONOSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.ABONOSColumn] = value;
                }
            }
            
            public string SALDO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.SALDOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.SALDOColumn] = value;
                }
            }
            
            public string EDIN_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.EDIN_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.EDIN_CCODColumn] = value;
                }
            }
            
            public string EDIN_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.EDIN_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.EDIN_TDESCColumn] = value;
                }
            }
            
            public string TCOM_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.TCOM_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.TCOM_TDESCColumn] = value;
                }
            }
            
            public string TING_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.TING_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.TING_TDESCColumn] = value;
                }
            }
            
            public string DOCUMENTADO {
                get {
                    try {
                        return ((string)(this[this.tableT_detalles.DOCUMENTADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_detalles.DOCUMENTADOColumn] = value;
                }
            }
            
            public bool IsPERS_NCORRNull() {
                return this.IsNull(this.tableT_detalles.PERS_NCORRColumn);
            }
            
            public void SetPERS_NCORRNull() {
                this[this.tableT_detalles.PERS_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsINST_CCODNull() {
                return this.IsNull(this.tableT_detalles.INST_CCODColumn);
            }
            
            public void SetINST_CCODNull() {
                this[this.tableT_detalles.INST_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMP_NDOCTONull() {
                return this.IsNull(this.tableT_detalles.COMP_NDOCTOColumn);
            }
            
            public void SetCOMP_NDOCTONull() {
                this[this.tableT_detalles.COMP_NDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTCOM_CCODNull() {
                return this.IsNull(this.tableT_detalles.TCOM_CCODColumn);
            }
            
            public void SetTCOM_CCODNull() {
                this[this.tableT_detalles.TCOM_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsDCOM_NCOMPROMISONull() {
                return this.IsNull(this.tableT_detalles.DCOM_NCOMPROMISOColumn);
            }
            
            public void SetDCOM_NCOMPROMISONull() {
                this[this.tableT_detalles.DCOM_NCOMPROMISOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNCUOTANull() {
                return this.IsNull(this.tableT_detalles.NCUOTAColumn);
            }
            
            public void SetNCUOTANull() {
                this[this.tableT_detalles.NCUOTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMP_FDOCTONull() {
                return this.IsNull(this.tableT_detalles.COMP_FDOCTOColumn);
            }
            
            public void SetCOMP_FDOCTONull() {
                this[this.tableT_detalles.COMP_FDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDCOM_FCOMPROMISONull() {
                return this.IsNull(this.tableT_detalles.DCOM_FCOMPROMISOColumn);
            }
            
            public void SetDCOM_FCOMPROMISONull() {
                this[this.tableT_detalles.DCOM_FCOMPROMISOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDCOM_MCOMPROMISONull() {
                return this.IsNull(this.tableT_detalles.DCOM_MCOMPROMISOColumn);
            }
            
            public void SetDCOM_MCOMPROMISONull() {
                this[this.tableT_detalles.DCOM_MCOMPROMISOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTING_CCODNull() {
                return this.IsNull(this.tableT_detalles.TING_CCODColumn);
            }
            
            public void SetTING_CCODNull() {
                this[this.tableT_detalles.TING_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsDING_NDOCTONull() {
                return this.IsNull(this.tableT_detalles.DING_NDOCTOColumn);
            }
            
            public void SetDING_NDOCTONull() {
                this[this.tableT_detalles.DING_NDOCTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsABONOSNull() {
                return this.IsNull(this.tableT_detalles.ABONOSColumn);
            }
            
            public void SetABONOSNull() {
                this[this.tableT_detalles.ABONOSColumn] = System.Convert.DBNull;
            }
            
            public bool IsSALDONull() {
                return this.IsNull(this.tableT_detalles.SALDOColumn);
            }
            
            public void SetSALDONull() {
                this[this.tableT_detalles.SALDOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEDIN_CCODNull() {
                return this.IsNull(this.tableT_detalles.EDIN_CCODColumn);
            }
            
            public void SetEDIN_CCODNull() {
                this[this.tableT_detalles.EDIN_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsEDIN_TDESCNull() {
                return this.IsNull(this.tableT_detalles.EDIN_TDESCColumn);
            }
            
            public void SetEDIN_TDESCNull() {
                this[this.tableT_detalles.EDIN_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsTCOM_TDESCNull() {
                return this.IsNull(this.tableT_detalles.TCOM_TDESCColumn);
            }
            
            public void SetTCOM_TDESCNull() {
                this[this.tableT_detalles.TCOM_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsTING_TDESCNull() {
                return this.IsNull(this.tableT_detalles.TING_TDESCColumn);
            }
            
            public void SetTING_TDESCNull() {
                this[this.tableT_detalles.TING_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsDOCUMENTADONull() {
                return this.IsNull(this.tableT_detalles.DOCUMENTADOColumn);
            }
            
            public void SetDOCUMENTADONull() {
                this[this.tableT_detalles.DOCUMENTADOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_detallesRowChangeEvent : EventArgs {
            
            private T_detallesRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_detallesRowChangeEvent(T_detallesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_detallesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ComentariosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCOME_NCORR;
            
            private DataColumn columnCOME_TCOMENTARIO;
            
            private DataColumn columnCOME_FCOMENTARIO;
            
            private DataColumn columnTICO_TDESC;
            
            private DataColumn columnPERS_NCORR_AUTOR;
            
            internal ComentariosDataTable() : 
                    base("Comentarios") {
                this.InitClass();
            }
            
            internal ComentariosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn COME_NCORRColumn {
                get {
                    return this.columnCOME_NCORR;
                }
            }
            
            internal DataColumn COME_TCOMENTARIOColumn {
                get {
                    return this.columnCOME_TCOMENTARIO;
                }
            }
            
            internal DataColumn COME_FCOMENTARIOColumn {
                get {
                    return this.columnCOME_FCOMENTARIO;
                }
            }
            
            internal DataColumn TICO_TDESCColumn {
                get {
                    return this.columnTICO_TDESC;
                }
            }
            
            internal DataColumn PERS_NCORR_AUTORColumn {
                get {
                    return this.columnPERS_NCORR_AUTOR;
                }
            }
            
            public ComentariosRow this[int index] {
                get {
                    return ((ComentariosRow)(this.Rows[index]));
                }
            }
            
            public event ComentariosRowChangeEventHandler ComentariosRowChanged;
            
            public event ComentariosRowChangeEventHandler ComentariosRowChanging;
            
            public event ComentariosRowChangeEventHandler ComentariosRowDeleted;
            
            public event ComentariosRowChangeEventHandler ComentariosRowDeleting;
            
            public void AddComentariosRow(ComentariosRow row) {
                this.Rows.Add(row);
            }
            
            public ComentariosRow AddComentariosRow(string COME_NCORR, string COME_TCOMENTARIO, string COME_FCOMENTARIO, string TICO_TDESC, string PERS_NCORR_AUTOR) {
                ComentariosRow rowComentariosRow = ((ComentariosRow)(this.NewRow()));
                rowComentariosRow.ItemArray = new object[] {
                        COME_NCORR,
                        COME_TCOMENTARIO,
                        COME_FCOMENTARIO,
                        TICO_TDESC,
                        PERS_NCORR_AUTOR};
                this.Rows.Add(rowComentariosRow);
                return rowComentariosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ComentariosDataTable cln = ((ComentariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ComentariosDataTable();
            }
            
            internal void InitVars() {
                this.columnCOME_NCORR = this.Columns["COME_NCORR"];
                this.columnCOME_TCOMENTARIO = this.Columns["COME_TCOMENTARIO"];
                this.columnCOME_FCOMENTARIO = this.Columns["COME_FCOMENTARIO"];
                this.columnTICO_TDESC = this.Columns["TICO_TDESC"];
                this.columnPERS_NCORR_AUTOR = this.Columns["PERS_NCORR_AUTOR"];
            }
            
            private void InitClass() {
                this.columnCOME_NCORR = new DataColumn("COME_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOME_NCORR);
                this.columnCOME_TCOMENTARIO = new DataColumn("COME_TCOMENTARIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOME_TCOMENTARIO);
                this.columnCOME_FCOMENTARIO = new DataColumn("COME_FCOMENTARIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOME_FCOMENTARIO);
                this.columnTICO_TDESC = new DataColumn("TICO_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTICO_TDESC);
                this.columnPERS_NCORR_AUTOR = new DataColumn("PERS_NCORR_AUTOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NCORR_AUTOR);
                this.columnCOME_NCORR.ReadOnly = true;
                this.columnCOME_TCOMENTARIO.ReadOnly = true;
                this.columnCOME_FCOMENTARIO.ReadOnly = true;
                this.columnTICO_TDESC.ReadOnly = true;
                this.columnPERS_NCORR_AUTOR.ReadOnly = true;
            }
            
            public ComentariosRow NewComentariosRow() {
                return ((ComentariosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ComentariosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ComentariosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ComentariosRowChanged != null)) {
                    this.ComentariosRowChanged(this, new ComentariosRowChangeEvent(((ComentariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ComentariosRowChanging != null)) {
                    this.ComentariosRowChanging(this, new ComentariosRowChangeEvent(((ComentariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ComentariosRowDeleted != null)) {
                    this.ComentariosRowDeleted(this, new ComentariosRowChangeEvent(((ComentariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ComentariosRowDeleting != null)) {
                    this.ComentariosRowDeleting(this, new ComentariosRowChangeEvent(((ComentariosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveComentariosRow(ComentariosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ComentariosRow : DataRow {
            
            private ComentariosDataTable tableComentarios;
            
            internal ComentariosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableComentarios = ((ComentariosDataTable)(this.Table));
            }
            
            public string COME_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableComentarios.COME_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComentarios.COME_NCORRColumn] = value;
                }
            }
            
            public string COME_TCOMENTARIO {
                get {
                    try {
                        return ((string)(this[this.tableComentarios.COME_TCOMENTARIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComentarios.COME_TCOMENTARIOColumn] = value;
                }
            }
            
            public string COME_FCOMENTARIO {
                get {
                    try {
                        return ((string)(this[this.tableComentarios.COME_FCOMENTARIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComentarios.COME_FCOMENTARIOColumn] = value;
                }
            }
            
            public string TICO_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableComentarios.TICO_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComentarios.TICO_TDESCColumn] = value;
                }
            }
            
            public string PERS_NCORR_AUTOR {
                get {
                    try {
                        return ((string)(this[this.tableComentarios.PERS_NCORR_AUTORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComentarios.PERS_NCORR_AUTORColumn] = value;
                }
            }
            
            public bool IsCOME_NCORRNull() {
                return this.IsNull(this.tableComentarios.COME_NCORRColumn);
            }
            
            public void SetCOME_NCORRNull() {
                this[this.tableComentarios.COME_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOME_TCOMENTARIONull() {
                return this.IsNull(this.tableComentarios.COME_TCOMENTARIOColumn);
            }
            
            public void SetCOME_TCOMENTARIONull() {
                this[this.tableComentarios.COME_TCOMENTARIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOME_FCOMENTARIONull() {
                return this.IsNull(this.tableComentarios.COME_FCOMENTARIOColumn);
            }
            
            public void SetCOME_FCOMENTARIONull() {
                this[this.tableComentarios.COME_FCOMENTARIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsTICO_TDESCNull() {
                return this.IsNull(this.tableComentarios.TICO_TDESCColumn);
            }
            
            public void SetTICO_TDESCNull() {
                this[this.tableComentarios.TICO_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERS_NCORR_AUTORNull() {
                return this.IsNull(this.tableComentarios.PERS_NCORR_AUTORColumn);
            }
            
            public void SetPERS_NCORR_AUTORNull() {
                this[this.tableComentarios.PERS_NCORR_AUTORColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ComentariosRowChangeEvent : EventArgs {
            
            private ComentariosRow eventRow;
            
            private DataRowAction eventAction;
            
            public ComentariosRowChangeEvent(ComentariosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ComentariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_AlumnoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnPERS_NCORR;
            
            private DataColumn columnRUT;
            
            private DataColumn columnNOMBRE;
            
            private DataColumn columnCARR_TDESC;
            
            private DataColumn columnSEDE_TDESC;
            
            private DataColumn columnANO_INGRESO;
            
            private DataColumn columnESTADO_MATRICULA;
            
            private DataColumn columnESTADO_ALUMNO;
            
            private DataColumn columningreso_u;
            
            private DataColumn columnPERI_TDESC;
            
            internal T_AlumnoDataTable() : 
                    base("T_Alumno") {
                this.InitClass();
            }
            
            internal T_AlumnoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn PERS_NCORRColumn {
                get {
                    return this.columnPERS_NCORR;
                }
            }
            
            internal DataColumn RUTColumn {
                get {
                    return this.columnRUT;
                }
            }
            
            internal DataColumn NOMBREColumn {
                get {
                    return this.columnNOMBRE;
                }
            }
            
            internal DataColumn CARR_TDESCColumn {
                get {
                    return this.columnCARR_TDESC;
                }
            }
            
            internal DataColumn SEDE_TDESCColumn {
                get {
                    return this.columnSEDE_TDESC;
                }
            }
            
            internal DataColumn ANO_INGRESOColumn {
                get {
                    return this.columnANO_INGRESO;
                }
            }
            
            internal DataColumn ESTADO_MATRICULAColumn {
                get {
                    return this.columnESTADO_MATRICULA;
                }
            }
            
            internal DataColumn ESTADO_ALUMNOColumn {
                get {
                    return this.columnESTADO_ALUMNO;
                }
            }
            
            internal DataColumn ingreso_uColumn {
                get {
                    return this.columningreso_u;
                }
            }
            
            internal DataColumn PERI_TDESCColumn {
                get {
                    return this.columnPERI_TDESC;
                }
            }
            
            public T_AlumnoRow this[int index] {
                get {
                    return ((T_AlumnoRow)(this.Rows[index]));
                }
            }
            
            public event T_AlumnoRowChangeEventHandler T_AlumnoRowChanged;
            
            public event T_AlumnoRowChangeEventHandler T_AlumnoRowChanging;
            
            public event T_AlumnoRowChangeEventHandler T_AlumnoRowDeleted;
            
            public event T_AlumnoRowChangeEventHandler T_AlumnoRowDeleting;
            
            public void AddT_AlumnoRow(T_AlumnoRow row) {
                this.Rows.Add(row);
            }
            
            public T_AlumnoRow AddT_AlumnoRow(string PERS_NCORR, string RUT, string NOMBRE, string CARR_TDESC, string SEDE_TDESC, string ANO_INGRESO, string ESTADO_MATRICULA, string ESTADO_ALUMNO, string ingreso_u, string PERI_TDESC) {
                T_AlumnoRow rowT_AlumnoRow = ((T_AlumnoRow)(this.NewRow()));
                rowT_AlumnoRow.ItemArray = new object[] {
                        PERS_NCORR,
                        RUT,
                        NOMBRE,
                        CARR_TDESC,
                        SEDE_TDESC,
                        ANO_INGRESO,
                        ESTADO_MATRICULA,
                        ESTADO_ALUMNO,
                        ingreso_u,
                        PERI_TDESC};
                this.Rows.Add(rowT_AlumnoRow);
                return rowT_AlumnoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_AlumnoDataTable cln = ((T_AlumnoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_AlumnoDataTable();
            }
            
            internal void InitVars() {
                this.columnPERS_NCORR = this.Columns["PERS_NCORR"];
                this.columnRUT = this.Columns["RUT"];
                this.columnNOMBRE = this.Columns["NOMBRE"];
                this.columnCARR_TDESC = this.Columns["CARR_TDESC"];
                this.columnSEDE_TDESC = this.Columns["SEDE_TDESC"];
                this.columnANO_INGRESO = this.Columns["ANO_INGRESO"];
                this.columnESTADO_MATRICULA = this.Columns["ESTADO_MATRICULA"];
                this.columnESTADO_ALUMNO = this.Columns["ESTADO_ALUMNO"];
                this.columningreso_u = this.Columns["ingreso_u"];
                this.columnPERI_TDESC = this.Columns["PERI_TDESC"];
            }
            
            private void InitClass() {
                this.columnPERS_NCORR = new DataColumn("PERS_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERS_NCORR);
                this.columnRUT = new DataColumn("RUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT);
                this.columnNOMBRE = new DataColumn("NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE);
                this.columnCARR_TDESC = new DataColumn("CARR_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARR_TDESC);
                this.columnSEDE_TDESC = new DataColumn("SEDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TDESC);
                this.columnANO_INGRESO = new DataColumn("ANO_INGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_INGRESO);
                this.columnESTADO_MATRICULA = new DataColumn("ESTADO_MATRICULA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESTADO_MATRICULA);
                this.columnESTADO_ALUMNO = new DataColumn("ESTADO_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESTADO_ALUMNO);
                this.columningreso_u = new DataColumn("ingreso_u", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columningreso_u);
                this.columnPERI_TDESC = new DataColumn("PERI_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERI_TDESC);
                this.columnPERS_NCORR.ReadOnly = true;
                this.columnRUT.ReadOnly = true;
                this.columnNOMBRE.ReadOnly = true;
                this.columnCARR_TDESC.ReadOnly = true;
                this.columnSEDE_TDESC.ReadOnly = true;
                this.columnANO_INGRESO.ReadOnly = true;
                this.columnESTADO_MATRICULA.ReadOnly = true;
                this.columnESTADO_ALUMNO.ReadOnly = true;
                this.columningreso_u.ReadOnly = true;
                this.columnPERI_TDESC.ReadOnly = true;
            }
            
            public T_AlumnoRow NewT_AlumnoRow() {
                return ((T_AlumnoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_AlumnoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_AlumnoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_AlumnoRowChanged != null)) {
                    this.T_AlumnoRowChanged(this, new T_AlumnoRowChangeEvent(((T_AlumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_AlumnoRowChanging != null)) {
                    this.T_AlumnoRowChanging(this, new T_AlumnoRowChangeEvent(((T_AlumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_AlumnoRowDeleted != null)) {
                    this.T_AlumnoRowDeleted(this, new T_AlumnoRowChangeEvent(((T_AlumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_AlumnoRowDeleting != null)) {
                    this.T_AlumnoRowDeleting(this, new T_AlumnoRowChangeEvent(((T_AlumnoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_AlumnoRow(T_AlumnoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_AlumnoRow : DataRow {
            
            private T_AlumnoDataTable tableT_Alumno;
            
            internal T_AlumnoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Alumno = ((T_AlumnoDataTable)(this.Table));
            }
            
            public string PERS_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.PERS_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.PERS_NCORRColumn] = value;
                }
            }
            
            public string RUT {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.RUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.RUTColumn] = value;
                }
            }
            
            public string NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.NOMBREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.NOMBREColumn] = value;
                }
            }
            
            public string CARR_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.CARR_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.CARR_TDESCColumn] = value;
                }
            }
            
            public string SEDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.SEDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.SEDE_TDESCColumn] = value;
                }
            }
            
            public string ANO_INGRESO {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.ANO_INGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.ANO_INGRESOColumn] = value;
                }
            }
            
            public string ESTADO_MATRICULA {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.ESTADO_MATRICULAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.ESTADO_MATRICULAColumn] = value;
                }
            }
            
            public string ESTADO_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.ESTADO_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.ESTADO_ALUMNOColumn] = value;
                }
            }
            
            public string ingreso_u {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.ingreso_uColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.ingreso_uColumn] = value;
                }
            }
            
            public string PERI_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Alumno.PERI_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Alumno.PERI_TDESCColumn] = value;
                }
            }
            
            public bool IsPERS_NCORRNull() {
                return this.IsNull(this.tableT_Alumno.PERS_NCORRColumn);
            }
            
            public void SetPERS_NCORRNull() {
                this[this.tableT_Alumno.PERS_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUTNull() {
                return this.IsNull(this.tableT_Alumno.RUTColumn);
            }
            
            public void SetRUTNull() {
                this[this.tableT_Alumno.RUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRENull() {
                return this.IsNull(this.tableT_Alumno.NOMBREColumn);
            }
            
            public void SetNOMBRENull() {
                this[this.tableT_Alumno.NOMBREColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARR_TDESCNull() {
                return this.IsNull(this.tableT_Alumno.CARR_TDESCColumn);
            }
            
            public void SetCARR_TDESCNull() {
                this[this.tableT_Alumno.CARR_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_TDESCNull() {
                return this.IsNull(this.tableT_Alumno.SEDE_TDESCColumn);
            }
            
            public void SetSEDE_TDESCNull() {
                this[this.tableT_Alumno.SEDE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_INGRESONull() {
                return this.IsNull(this.tableT_Alumno.ANO_INGRESOColumn);
            }
            
            public void SetANO_INGRESONull() {
                this[this.tableT_Alumno.ANO_INGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsESTADO_MATRICULANull() {
                return this.IsNull(this.tableT_Alumno.ESTADO_MATRICULAColumn);
            }
            
            public void SetESTADO_MATRICULANull() {
                this[this.tableT_Alumno.ESTADO_MATRICULAColumn] = System.Convert.DBNull;
            }
            
            public bool IsESTADO_ALUMNONull() {
                return this.IsNull(this.tableT_Alumno.ESTADO_ALUMNOColumn);
            }
            
            public void SetESTADO_ALUMNONull() {
                this[this.tableT_Alumno.ESTADO_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool Isingreso_uNull() {
                return this.IsNull(this.tableT_Alumno.ingreso_uColumn);
            }
            
            public void Setingreso_uNull() {
                this[this.tableT_Alumno.ingreso_uColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERI_TDESCNull() {
                return this.IsNull(this.tableT_Alumno.PERI_TDESCColumn);
            }
            
            public void SetPERI_TDESCNull() {
                this[this.tableT_Alumno.PERI_TDESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_AlumnoRowChangeEvent : EventArgs {
            
            private T_AlumnoRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_AlumnoRowChangeEvent(T_AlumnoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_AlumnoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CreditosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columncontrato;
            
            private DataColumn columnCONT_NCORR;
            
            private DataColumn columnSTDE_CCOD;
            
            private DataColumn columnSTDE_TDESC;
            
            private DataColumn columnBENE_MMONTO;
            
            private DataColumn columnMONE_CCOD;
            
            private DataColumn columnBENE_NPORCENTAJE_MATRICULA;
            
            private DataColumn columnBENE_NPORCENTAJE_COLEGIATURA;
            
            private DataColumn columnTBEN_CCOD;
            
            private DataColumn columnBENE_FBENEFICIO;
            
            internal T_CreditosDataTable() : 
                    base("T_Creditos") {
                this.InitClass();
            }
            
            internal T_CreditosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn contratoColumn {
                get {
                    return this.columncontrato;
                }
            }
            
            internal DataColumn CONT_NCORRColumn {
                get {
                    return this.columnCONT_NCORR;
                }
            }
            
            internal DataColumn STDE_CCODColumn {
                get {
                    return this.columnSTDE_CCOD;
                }
            }
            
            internal DataColumn STDE_TDESCColumn {
                get {
                    return this.columnSTDE_TDESC;
                }
            }
            
            internal DataColumn BENE_MMONTOColumn {
                get {
                    return this.columnBENE_MMONTO;
                }
            }
            
            internal DataColumn MONE_CCODColumn {
                get {
                    return this.columnMONE_CCOD;
                }
            }
            
            internal DataColumn BENE_NPORCENTAJE_MATRICULAColumn {
                get {
                    return this.columnBENE_NPORCENTAJE_MATRICULA;
                }
            }
            
            internal DataColumn BENE_NPORCENTAJE_COLEGIATURAColumn {
                get {
                    return this.columnBENE_NPORCENTAJE_COLEGIATURA;
                }
            }
            
            internal DataColumn TBEN_CCODColumn {
                get {
                    return this.columnTBEN_CCOD;
                }
            }
            
            internal DataColumn BENE_FBENEFICIOColumn {
                get {
                    return this.columnBENE_FBENEFICIO;
                }
            }
            
            public T_CreditosRow this[int index] {
                get {
                    return ((T_CreditosRow)(this.Rows[index]));
                }
            }
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowChanged;
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowChanging;
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowDeleted;
            
            public event T_CreditosRowChangeEventHandler T_CreditosRowDeleting;
            
            public void AddT_CreditosRow(T_CreditosRow row) {
                this.Rows.Add(row);
            }
            
            public T_CreditosRow AddT_CreditosRow(string contrato, string CONT_NCORR, string STDE_CCOD, string STDE_TDESC, string BENE_MMONTO, string MONE_CCOD, string BENE_NPORCENTAJE_MATRICULA, string BENE_NPORCENTAJE_COLEGIATURA, string TBEN_CCOD, string BENE_FBENEFICIO) {
                T_CreditosRow rowT_CreditosRow = ((T_CreditosRow)(this.NewRow()));
                rowT_CreditosRow.ItemArray = new object[] {
                        contrato,
                        CONT_NCORR,
                        STDE_CCOD,
                        STDE_TDESC,
                        BENE_MMONTO,
                        MONE_CCOD,
                        BENE_NPORCENTAJE_MATRICULA,
                        BENE_NPORCENTAJE_COLEGIATURA,
                        TBEN_CCOD,
                        BENE_FBENEFICIO};
                this.Rows.Add(rowT_CreditosRow);
                return rowT_CreditosRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_CreditosDataTable cln = ((T_CreditosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_CreditosDataTable();
            }
            
            internal void InitVars() {
                this.columncontrato = this.Columns["contrato"];
                this.columnCONT_NCORR = this.Columns["CONT_NCORR"];
                this.columnSTDE_CCOD = this.Columns["STDE_CCOD"];
                this.columnSTDE_TDESC = this.Columns["STDE_TDESC"];
                this.columnBENE_MMONTO = this.Columns["BENE_MMONTO"];
                this.columnMONE_CCOD = this.Columns["MONE_CCOD"];
                this.columnBENE_NPORCENTAJE_MATRICULA = this.Columns["BENE_NPORCENTAJE_MATRICULA"];
                this.columnBENE_NPORCENTAJE_COLEGIATURA = this.Columns["BENE_NPORCENTAJE_COLEGIATURA"];
                this.columnTBEN_CCOD = this.Columns["TBEN_CCOD"];
                this.columnBENE_FBENEFICIO = this.Columns["BENE_FBENEFICIO"];
            }
            
            private void InitClass() {
                this.columncontrato = new DataColumn("contrato", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncontrato);
                this.columnCONT_NCORR = new DataColumn("CONT_NCORR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONT_NCORR);
                this.columnSTDE_CCOD = new DataColumn("STDE_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTDE_CCOD);
                this.columnSTDE_TDESC = new DataColumn("STDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTDE_TDESC);
                this.columnBENE_MMONTO = new DataColumn("BENE_MMONTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_MMONTO);
                this.columnMONE_CCOD = new DataColumn("MONE_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONE_CCOD);
                this.columnBENE_NPORCENTAJE_MATRICULA = new DataColumn("BENE_NPORCENTAJE_MATRICULA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_NPORCENTAJE_MATRICULA);
                this.columnBENE_NPORCENTAJE_COLEGIATURA = new DataColumn("BENE_NPORCENTAJE_COLEGIATURA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_NPORCENTAJE_COLEGIATURA);
                this.columnTBEN_CCOD = new DataColumn("TBEN_CCOD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTBEN_CCOD);
                this.columnBENE_FBENEFICIO = new DataColumn("BENE_FBENEFICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBENE_FBENEFICIO);
                this.columncontrato.ReadOnly = true;
                this.columnCONT_NCORR.ReadOnly = true;
                this.columnSTDE_CCOD.ReadOnly = true;
                this.columnSTDE_TDESC.ReadOnly = true;
                this.columnBENE_MMONTO.ReadOnly = true;
                this.columnMONE_CCOD.ReadOnly = true;
                this.columnBENE_NPORCENTAJE_MATRICULA.ReadOnly = true;
                this.columnBENE_NPORCENTAJE_COLEGIATURA.ReadOnly = true;
                this.columnTBEN_CCOD.ReadOnly = true;
                this.columnBENE_FBENEFICIO.ReadOnly = true;
            }
            
            public T_CreditosRow NewT_CreditosRow() {
                return ((T_CreditosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_CreditosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_CreditosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CreditosRowChanged != null)) {
                    this.T_CreditosRowChanged(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CreditosRowChanging != null)) {
                    this.T_CreditosRowChanging(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CreditosRowDeleted != null)) {
                    this.T_CreditosRowDeleted(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CreditosRowDeleting != null)) {
                    this.T_CreditosRowDeleting(this, new T_CreditosRowChangeEvent(((T_CreditosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_CreditosRow(T_CreditosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CreditosRow : DataRow {
            
            private T_CreditosDataTable tableT_Creditos;
            
            internal T_CreditosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Creditos = ((T_CreditosDataTable)(this.Table));
            }
            
            public string contrato {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.contratoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.contratoColumn] = value;
                }
            }
            
            public string CONT_NCORR {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.CONT_NCORRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.CONT_NCORRColumn] = value;
                }
            }
            
            public string STDE_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.STDE_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.STDE_CCODColumn] = value;
                }
            }
            
            public string STDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.STDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.STDE_TDESCColumn] = value;
                }
            }
            
            public string BENE_MMONTO {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_MMONTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_MMONTOColumn] = value;
                }
            }
            
            public string MONE_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.MONE_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.MONE_CCODColumn] = value;
                }
            }
            
            public string BENE_NPORCENTAJE_MATRICULA {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_NPORCENTAJE_MATRICULAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_NPORCENTAJE_MATRICULAColumn] = value;
                }
            }
            
            public string BENE_NPORCENTAJE_COLEGIATURA {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_NPORCENTAJE_COLEGIATURAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_NPORCENTAJE_COLEGIATURAColumn] = value;
                }
            }
            
            public string TBEN_CCOD {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.TBEN_CCODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.TBEN_CCODColumn] = value;
                }
            }
            
            public string BENE_FBENEFICIO {
                get {
                    try {
                        return ((string)(this[this.tableT_Creditos.BENE_FBENEFICIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Creditos.BENE_FBENEFICIOColumn] = value;
                }
            }
            
            public bool IscontratoNull() {
                return this.IsNull(this.tableT_Creditos.contratoColumn);
            }
            
            public void SetcontratoNull() {
                this[this.tableT_Creditos.contratoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONT_NCORRNull() {
                return this.IsNull(this.tableT_Creditos.CONT_NCORRColumn);
            }
            
            public void SetCONT_NCORRNull() {
                this[this.tableT_Creditos.CONT_NCORRColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTDE_CCODNull() {
                return this.IsNull(this.tableT_Creditos.STDE_CCODColumn);
            }
            
            public void SetSTDE_CCODNull() {
                this[this.tableT_Creditos.STDE_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTDE_TDESCNull() {
                return this.IsNull(this.tableT_Creditos.STDE_TDESCColumn);
            }
            
            public void SetSTDE_TDESCNull() {
                this[this.tableT_Creditos.STDE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_MMONTONull() {
                return this.IsNull(this.tableT_Creditos.BENE_MMONTOColumn);
            }
            
            public void SetBENE_MMONTONull() {
                this[this.tableT_Creditos.BENE_MMONTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONE_CCODNull() {
                return this.IsNull(this.tableT_Creditos.MONE_CCODColumn);
            }
            
            public void SetMONE_CCODNull() {
                this[this.tableT_Creditos.MONE_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_NPORCENTAJE_MATRICULANull() {
                return this.IsNull(this.tableT_Creditos.BENE_NPORCENTAJE_MATRICULAColumn);
            }
            
            public void SetBENE_NPORCENTAJE_MATRICULANull() {
                this[this.tableT_Creditos.BENE_NPORCENTAJE_MATRICULAColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_NPORCENTAJE_COLEGIATURANull() {
                return this.IsNull(this.tableT_Creditos.BENE_NPORCENTAJE_COLEGIATURAColumn);
            }
            
            public void SetBENE_NPORCENTAJE_COLEGIATURANull() {
                this[this.tableT_Creditos.BENE_NPORCENTAJE_COLEGIATURAColumn] = System.Convert.DBNull;
            }
            
            public bool IsTBEN_CCODNull() {
                return this.IsNull(this.tableT_Creditos.TBEN_CCODColumn);
            }
            
            public void SetTBEN_CCODNull() {
                this[this.tableT_Creditos.TBEN_CCODColumn] = System.Convert.DBNull;
            }
            
            public bool IsBENE_FBENEFICIONull() {
                return this.IsNull(this.tableT_Creditos.BENE_FBENEFICIOColumn);
            }
            
            public void SetBENE_FBENEFICIONull() {
                this[this.tableT_Creditos.BENE_FBENEFICIOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_CreditosRowChangeEvent : EventArgs {
            
            private T_CreditosRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_CreditosRowChangeEvent(T_CreditosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_CreditosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
