//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace certificado_alumno {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class datoAlumno : DataSet {
        
        private alumnoDataTable tablealumno;
        
        public datoAlumno() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected datoAlumno(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["alumno"] != null)) {
                    this.Tables.Add(new alumnoDataTable(ds.Tables["alumno"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public alumnoDataTable alumno {
            get {
                return this.tablealumno;
            }
        }
        
        public override DataSet Clone() {
            datoAlumno cln = ((datoAlumno)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["alumno"] != null)) {
                this.Tables.Add(new alumnoDataTable(ds.Tables["alumno"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablealumno = ((alumnoDataTable)(this.Tables["alumno"]));
            if ((this.tablealumno != null)) {
                this.tablealumno.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "datoAlumno";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/datoAlumno.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablealumno = new alumnoDataTable();
            this.Tables.Add(this.tablealumno);
        }
        
        private bool ShouldSerializealumno() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void alumnoRowChangeEventHandler(object sender, alumnoRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class alumnoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSEMESTRE;
            
            private DataColumn columnPERIODO;
            
            private DataColumn columnNOMBRE_ENC_C;
            
            private DataColumn columnSEC_GENERAL;
            
            private DataColumn columnCIUDAD_SEDE;
            
            private DataColumn columnCCOD_ALUMNO;
            
            private DataColumn columnNOMBRE_ALUMNO;
            
            private DataColumn columnRUT_POST;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnDIA;
            
            private DataColumn columnMES;
            
            private DataColumn columnANO;
            
            private DataColumn columnN_DIA;
            
            private DataColumn columnTIPO_CERTIFICADO;
            
            private DataColumn columnDUAS_TDESC;
            
            private DataColumn columnSEDE_SECRET;
            
            private DataColumn columnJORN_TDESC;
            
            private DataColumn columnTXT1;
            
            private DataColumn columnPARRAFO_ADICIONAL;
            
            private DataColumn columnESPE_TCERTIFIC;
            
            internal alumnoDataTable() : 
                    base("alumno") {
                this.InitClass();
            }
            
            internal alumnoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SEMESTREColumn {
                get {
                    return this.columnSEMESTRE;
                }
            }
            
            internal DataColumn PERIODOColumn {
                get {
                    return this.columnPERIODO;
                }
            }
            
            internal DataColumn NOMBRE_ENC_CColumn {
                get {
                    return this.columnNOMBRE_ENC_C;
                }
            }
            
            internal DataColumn SEC_GENERALColumn {
                get {
                    return this.columnSEC_GENERAL;
                }
            }
            
            internal DataColumn CIUDAD_SEDEColumn {
                get {
                    return this.columnCIUDAD_SEDE;
                }
            }
            
            internal DataColumn CCOD_ALUMNOColumn {
                get {
                    return this.columnCCOD_ALUMNO;
                }
            }
            
            internal DataColumn NOMBRE_ALUMNOColumn {
                get {
                    return this.columnNOMBRE_ALUMNO;
                }
            }
            
            internal DataColumn RUT_POSTColumn {
                get {
                    return this.columnRUT_POST;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn DIAColumn {
                get {
                    return this.columnDIA;
                }
            }
            
            internal DataColumn MESColumn {
                get {
                    return this.columnMES;
                }
            }
            
            internal DataColumn ANOColumn {
                get {
                    return this.columnANO;
                }
            }
            
            internal DataColumn N_DIAColumn {
                get {
                    return this.columnN_DIA;
                }
            }
            
            internal DataColumn TIPO_CERTIFICADOColumn {
                get {
                    return this.columnTIPO_CERTIFICADO;
                }
            }
            
            internal DataColumn DUAS_TDESCColumn {
                get {
                    return this.columnDUAS_TDESC;
                }
            }
            
            internal DataColumn SEDE_SECRETColumn {
                get {
                    return this.columnSEDE_SECRET;
                }
            }
            
            internal DataColumn JORN_TDESCColumn {
                get {
                    return this.columnJORN_TDESC;
                }
            }
            
            internal DataColumn TXT1Column {
                get {
                    return this.columnTXT1;
                }
            }
            
            internal DataColumn PARRAFO_ADICIONALColumn {
                get {
                    return this.columnPARRAFO_ADICIONAL;
                }
            }
            
            internal DataColumn ESPE_TCERTIFICColumn {
                get {
                    return this.columnESPE_TCERTIFIC;
                }
            }
            
            public alumnoRow this[int index] {
                get {
                    return ((alumnoRow)(this.Rows[index]));
                }
            }
            
            public event alumnoRowChangeEventHandler alumnoRowChanged;
            
            public event alumnoRowChangeEventHandler alumnoRowChanging;
            
            public event alumnoRowChangeEventHandler alumnoRowDeleted;
            
            public event alumnoRowChangeEventHandler alumnoRowDeleting;
            
            public void AddalumnoRow(alumnoRow row) {
                this.Rows.Add(row);
            }
            
            public alumnoRow AddalumnoRow(
                        string SEMESTRE, 
                        string PERIODO, 
                        string NOMBRE_ENC_C, 
                        string SEC_GENERAL, 
                        string CIUDAD_SEDE, 
                        string CCOD_ALUMNO, 
                        string NOMBRE_ALUMNO, 
                        string RUT_POST, 
                        string CARRERA, 
                        string DIA, 
                        string MES, 
                        string ANO, 
                        string N_DIA, 
                        string TIPO_CERTIFICADO, 
                        string DUAS_TDESC, 
                        string SEDE_SECRET, 
                        string JORN_TDESC, 
                        string TXT1, 
                        string PARRAFO_ADICIONAL, 
                        string ESPE_TCERTIFIC) {
                alumnoRow rowalumnoRow = ((alumnoRow)(this.NewRow()));
                rowalumnoRow.ItemArray = new object[] {
                        SEMESTRE,
                        PERIODO,
                        NOMBRE_ENC_C,
                        SEC_GENERAL,
                        CIUDAD_SEDE,
                        CCOD_ALUMNO,
                        NOMBRE_ALUMNO,
                        RUT_POST,
                        CARRERA,
                        DIA,
                        MES,
                        ANO,
                        N_DIA,
                        TIPO_CERTIFICADO,
                        DUAS_TDESC,
                        SEDE_SECRET,
                        JORN_TDESC,
                        TXT1,
                        PARRAFO_ADICIONAL,
                        ESPE_TCERTIFIC};
                this.Rows.Add(rowalumnoRow);
                return rowalumnoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                alumnoDataTable cln = ((alumnoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new alumnoDataTable();
            }
            
            internal void InitVars() {
                this.columnSEMESTRE = this.Columns["SEMESTRE"];
                this.columnPERIODO = this.Columns["PERIODO"];
                this.columnNOMBRE_ENC_C = this.Columns["NOMBRE_ENC_C"];
                this.columnSEC_GENERAL = this.Columns["SEC_GENERAL"];
                this.columnCIUDAD_SEDE = this.Columns["CIUDAD_SEDE"];
                this.columnCCOD_ALUMNO = this.Columns["CCOD_ALUMNO"];
                this.columnNOMBRE_ALUMNO = this.Columns["NOMBRE_ALUMNO"];
                this.columnRUT_POST = this.Columns["RUT_POST"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnDIA = this.Columns["DIA"];
                this.columnMES = this.Columns["MES"];
                this.columnANO = this.Columns["ANO"];
                this.columnN_DIA = this.Columns["N_DIA"];
                this.columnTIPO_CERTIFICADO = this.Columns["TIPO_CERTIFICADO"];
                this.columnDUAS_TDESC = this.Columns["DUAS_TDESC"];
                this.columnSEDE_SECRET = this.Columns["SEDE_SECRET"];
                this.columnJORN_TDESC = this.Columns["JORN_TDESC"];
                this.columnTXT1 = this.Columns["TXT1"];
                this.columnPARRAFO_ADICIONAL = this.Columns["PARRAFO_ADICIONAL"];
                this.columnESPE_TCERTIFIC = this.Columns["ESPE_TCERTIFIC"];
            }
            
            private void InitClass() {
                this.columnSEMESTRE = new DataColumn("SEMESTRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEMESTRE);
                this.columnPERIODO = new DataColumn("PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIODO);
                this.columnNOMBRE_ENC_C = new DataColumn("NOMBRE_ENC_C", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_ENC_C);
                this.columnSEC_GENERAL = new DataColumn("SEC_GENERAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEC_GENERAL);
                this.columnCIUDAD_SEDE = new DataColumn("CIUDAD_SEDE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCIUDAD_SEDE);
                this.columnCCOD_ALUMNO = new DataColumn("CCOD_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCCOD_ALUMNO);
                this.columnNOMBRE_ALUMNO = new DataColumn("NOMBRE_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMBRE_ALUMNO);
                this.columnRUT_POST = new DataColumn("RUT_POST", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_POST);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnDIA = new DataColumn("DIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIA);
                this.columnMES = new DataColumn("MES", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMES);
                this.columnANO = new DataColumn("ANO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO);
                this.columnN_DIA = new DataColumn("N_DIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnN_DIA);
                this.columnTIPO_CERTIFICADO = new DataColumn("TIPO_CERTIFICADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPO_CERTIFICADO);
                this.columnDUAS_TDESC = new DataColumn("DUAS_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDUAS_TDESC);
                this.columnSEDE_SECRET = new DataColumn("SEDE_SECRET", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_SECRET);
                this.columnJORN_TDESC = new DataColumn("JORN_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJORN_TDESC);
                this.columnTXT1 = new DataColumn("TXT1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTXT1);
                this.columnPARRAFO_ADICIONAL = new DataColumn("PARRAFO_ADICIONAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPARRAFO_ADICIONAL);
                this.columnESPE_TCERTIFIC = new DataColumn("ESPE_TCERTIFIC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnESPE_TCERTIFIC);
                this.columnSEMESTRE.ReadOnly = true;
                this.columnPERIODO.ReadOnly = true;
                this.columnNOMBRE_ENC_C.ReadOnly = true;
                this.columnSEC_GENERAL.ReadOnly = true;
                this.columnCIUDAD_SEDE.ReadOnly = true;
                this.columnCCOD_ALUMNO.ReadOnly = true;
                this.columnNOMBRE_ALUMNO.ReadOnly = true;
                this.columnRUT_POST.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnDIA.ReadOnly = true;
                this.columnMES.ReadOnly = true;
                this.columnANO.ReadOnly = true;
                this.columnN_DIA.ReadOnly = true;
                this.columnTIPO_CERTIFICADO.ReadOnly = true;
            }
            
            public alumnoRow NewalumnoRow() {
                return ((alumnoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new alumnoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(alumnoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.alumnoRowChanged != null)) {
                    this.alumnoRowChanged(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.alumnoRowChanging != null)) {
                    this.alumnoRowChanging(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.alumnoRowDeleted != null)) {
                    this.alumnoRowDeleted(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.alumnoRowDeleting != null)) {
                    this.alumnoRowDeleting(this, new alumnoRowChangeEvent(((alumnoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovealumnoRow(alumnoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class alumnoRow : DataRow {
            
            private alumnoDataTable tablealumno;
            
            internal alumnoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablealumno = ((alumnoDataTable)(this.Table));
            }
            
            public string SEMESTRE {
                get {
                    try {
                        return ((string)(this[this.tablealumno.SEMESTREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.SEMESTREColumn] = value;
                }
            }
            
            public string PERIODO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.PERIODOColumn] = value;
                }
            }
            
            public string NOMBRE_ENC_C {
                get {
                    try {
                        return ((string)(this[this.tablealumno.NOMBRE_ENC_CColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.NOMBRE_ENC_CColumn] = value;
                }
            }
            
            public string SEC_GENERAL {
                get {
                    try {
                        return ((string)(this[this.tablealumno.SEC_GENERALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.SEC_GENERALColumn] = value;
                }
            }
            
            public string CIUDAD_SEDE {
                get {
                    try {
                        return ((string)(this[this.tablealumno.CIUDAD_SEDEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.CIUDAD_SEDEColumn] = value;
                }
            }
            
            public string CCOD_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.CCOD_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.CCOD_ALUMNOColumn] = value;
                }
            }
            
            public string NOMBRE_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.NOMBRE_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.NOMBRE_ALUMNOColumn] = value;
                }
            }
            
            public string RUT_POST {
                get {
                    try {
                        return ((string)(this[this.tablealumno.RUT_POSTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.RUT_POSTColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.tablealumno.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.CARRERAColumn] = value;
                }
            }
            
            public string DIA {
                get {
                    try {
                        return ((string)(this[this.tablealumno.DIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.DIAColumn] = value;
                }
            }
            
            public string MES {
                get {
                    try {
                        return ((string)(this[this.tablealumno.MESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.MESColumn] = value;
                }
            }
            
            public string ANO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.ANOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.ANOColumn] = value;
                }
            }
            
            public string N_DIA {
                get {
                    try {
                        return ((string)(this[this.tablealumno.N_DIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.N_DIAColumn] = value;
                }
            }
            
            public string TIPO_CERTIFICADO {
                get {
                    try {
                        return ((string)(this[this.tablealumno.TIPO_CERTIFICADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.TIPO_CERTIFICADOColumn] = value;
                }
            }
            
            public string DUAS_TDESC {
                get {
                    try {
                        return ((string)(this[this.tablealumno.DUAS_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.DUAS_TDESCColumn] = value;
                }
            }
            
            public string SEDE_SECRET {
                get {
                    try {
                        return ((string)(this[this.tablealumno.SEDE_SECRETColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.SEDE_SECRETColumn] = value;
                }
            }
            
            public string JORN_TDESC {
                get {
                    try {
                        return ((string)(this[this.tablealumno.JORN_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.JORN_TDESCColumn] = value;
                }
            }
            
            public string TXT1 {
                get {
                    try {
                        return ((string)(this[this.tablealumno.TXT1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.TXT1Column] = value;
                }
            }
            
            public string PARRAFO_ADICIONAL {
                get {
                    try {
                        return ((string)(this[this.tablealumno.PARRAFO_ADICIONALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.PARRAFO_ADICIONALColumn] = value;
                }
            }
            
            public string ESPE_TCERTIFIC {
                get {
                    try {
                        return ((string)(this[this.tablealumno.ESPE_TCERTIFICColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablealumno.ESPE_TCERTIFICColumn] = value;
                }
            }
            
            public bool IsSEMESTRENull() {
                return this.IsNull(this.tablealumno.SEMESTREColumn);
            }
            
            public void SetSEMESTRENull() {
                this[this.tablealumno.SEMESTREColumn] = System.Convert.DBNull;
            }
            
            public bool IsPERIODONull() {
                return this.IsNull(this.tablealumno.PERIODOColumn);
            }
            
            public void SetPERIODONull() {
                this[this.tablealumno.PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_ENC_CNull() {
                return this.IsNull(this.tablealumno.NOMBRE_ENC_CColumn);
            }
            
            public void SetNOMBRE_ENC_CNull() {
                this[this.tablealumno.NOMBRE_ENC_CColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEC_GENERALNull() {
                return this.IsNull(this.tablealumno.SEC_GENERALColumn);
            }
            
            public void SetSEC_GENERALNull() {
                this[this.tablealumno.SEC_GENERALColumn] = System.Convert.DBNull;
            }
            
            public bool IsCIUDAD_SEDENull() {
                return this.IsNull(this.tablealumno.CIUDAD_SEDEColumn);
            }
            
            public void SetCIUDAD_SEDENull() {
                this[this.tablealumno.CIUDAD_SEDEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCCOD_ALUMNONull() {
                return this.IsNull(this.tablealumno.CCOD_ALUMNOColumn);
            }
            
            public void SetCCOD_ALUMNONull() {
                this[this.tablealumno.CCOD_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMBRE_ALUMNONull() {
                return this.IsNull(this.tablealumno.NOMBRE_ALUMNOColumn);
            }
            
            public void SetNOMBRE_ALUMNONull() {
                this[this.tablealumno.NOMBRE_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_POSTNull() {
                return this.IsNull(this.tablealumno.RUT_POSTColumn);
            }
            
            public void SetRUT_POSTNull() {
                this[this.tablealumno.RUT_POSTColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.tablealumno.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.tablealumno.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIANull() {
                return this.IsNull(this.tablealumno.DIAColumn);
            }
            
            public void SetDIANull() {
                this[this.tablealumno.DIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsMESNull() {
                return this.IsNull(this.tablealumno.MESColumn);
            }
            
            public void SetMESNull() {
                this[this.tablealumno.MESColumn] = System.Convert.DBNull;
            }
            
            public bool IsANONull() {
                return this.IsNull(this.tablealumno.ANOColumn);
            }
            
            public void SetANONull() {
                this[this.tablealumno.ANOColumn] = System.Convert.DBNull;
            }
            
            public bool IsN_DIANull() {
                return this.IsNull(this.tablealumno.N_DIAColumn);
            }
            
            public void SetN_DIANull() {
                this[this.tablealumno.N_DIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPO_CERTIFICADONull() {
                return this.IsNull(this.tablealumno.TIPO_CERTIFICADOColumn);
            }
            
            public void SetTIPO_CERTIFICADONull() {
                this[this.tablealumno.TIPO_CERTIFICADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDUAS_TDESCNull() {
                return this.IsNull(this.tablealumno.DUAS_TDESCColumn);
            }
            
            public void SetDUAS_TDESCNull() {
                this[this.tablealumno.DUAS_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_SECRETNull() {
                return this.IsNull(this.tablealumno.SEDE_SECRETColumn);
            }
            
            public void SetSEDE_SECRETNull() {
                this[this.tablealumno.SEDE_SECRETColumn] = System.Convert.DBNull;
            }
            
            public bool IsJORN_TDESCNull() {
                return this.IsNull(this.tablealumno.JORN_TDESCColumn);
            }
            
            public void SetJORN_TDESCNull() {
                this[this.tablealumno.JORN_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsTXT1Null() {
                return this.IsNull(this.tablealumno.TXT1Column);
            }
            
            public void SetTXT1Null() {
                this[this.tablealumno.TXT1Column] = System.Convert.DBNull;
            }
            
            public bool IsPARRAFO_ADICIONALNull() {
                return this.IsNull(this.tablealumno.PARRAFO_ADICIONALColumn);
            }
            
            public void SetPARRAFO_ADICIONALNull() {
                this[this.tablealumno.PARRAFO_ADICIONALColumn] = System.Convert.DBNull;
            }
            
            public bool IsESPE_TCERTIFICNull() {
                return this.IsNull(this.tablealumno.ESPE_TCERTIFICColumn);
            }
            
            public void SetESPE_TCERTIFICNull() {
                this[this.tablealumno.ESPE_TCERTIFICColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class alumnoRowChangeEvent : EventArgs {
            
            private alumnoRow eventRow;
            
            private DataRowAction eventAction;
            
            public alumnoRowChangeEvent(alumnoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public alumnoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
