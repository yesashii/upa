//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace pagare_detallado {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSetPagares : DataSet {
        
        private T_PagaresDataTable tableT_Pagares;
        
        public DataSetPagares() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSetPagares(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_Pagares"] != null)) {
                    this.Tables.Add(new T_PagaresDataTable(ds.Tables["T_Pagares"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PagaresDataTable T_Pagares {
            get {
                return this.tableT_Pagares;
            }
        }
        
        public override DataSet Clone() {
            DataSetPagares cln = ((DataSetPagares)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["T_Pagares"] != null)) {
                this.Tables.Add(new T_PagaresDataTable(ds.Tables["T_Pagares"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableT_Pagares = ((T_PagaresDataTable)(this.Tables["T_Pagares"]));
            if ((this.tableT_Pagares != null)) {
                this.tableT_Pagares.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSetPagares";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSetPagares.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-CL");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableT_Pagares = new T_PagaresDataTable();
            this.Tables.Add(this.tableT_Pagares);
        }
        
        private bool ShouldSerializeT_Pagares() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void T_PagaresRowChangeEventHandler(object sender, T_PagaresRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_PagaresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnANO_PERIODO;
            
            private DataColumn columnSEDE_TDESC;
            
            private DataColumn columnCARRERA;
            
            private DataColumn columnALUMNO;
            
            private DataColumn columnRUT_ALUMNO;
            
            private DataColumn columnAVAL;
            
            private DataColumn columnRUT_AVAL;
            
            private DataColumn columnUF_BENEFICIO_PERIODO;
            
            private DataColumn columnMONTO_PERIODO;
            
            private DataColumn columnUF_BENEFICIO_ANTERIOR;
            
            private DataColumn columnMONTO_ACUMULADO;
            
            private DataColumn columnEMAT_TDESC;
            
            private DataColumn columnANO_INGRESO;
            
            private DataColumn columnANO_EGRESO;
            
            internal T_PagaresDataTable() : 
                    base("T_Pagares") {
                this.InitClass();
            }
            
            internal T_PagaresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ANO_PERIODOColumn {
                get {
                    return this.columnANO_PERIODO;
                }
            }
            
            internal DataColumn SEDE_TDESCColumn {
                get {
                    return this.columnSEDE_TDESC;
                }
            }
            
            internal DataColumn CARRERAColumn {
                get {
                    return this.columnCARRERA;
                }
            }
            
            internal DataColumn ALUMNOColumn {
                get {
                    return this.columnALUMNO;
                }
            }
            
            internal DataColumn RUT_ALUMNOColumn {
                get {
                    return this.columnRUT_ALUMNO;
                }
            }
            
            internal DataColumn AVALColumn {
                get {
                    return this.columnAVAL;
                }
            }
            
            internal DataColumn RUT_AVALColumn {
                get {
                    return this.columnRUT_AVAL;
                }
            }
            
            internal DataColumn UF_BENEFICIO_PERIODOColumn {
                get {
                    return this.columnUF_BENEFICIO_PERIODO;
                }
            }
            
            internal DataColumn MONTO_PERIODOColumn {
                get {
                    return this.columnMONTO_PERIODO;
                }
            }
            
            internal DataColumn UF_BENEFICIO_ANTERIORColumn {
                get {
                    return this.columnUF_BENEFICIO_ANTERIOR;
                }
            }
            
            internal DataColumn MONTO_ACUMULADOColumn {
                get {
                    return this.columnMONTO_ACUMULADO;
                }
            }
            
            internal DataColumn EMAT_TDESCColumn {
                get {
                    return this.columnEMAT_TDESC;
                }
            }
            
            internal DataColumn ANO_INGRESOColumn {
                get {
                    return this.columnANO_INGRESO;
                }
            }
            
            internal DataColumn ANO_EGRESOColumn {
                get {
                    return this.columnANO_EGRESO;
                }
            }
            
            public T_PagaresRow this[int index] {
                get {
                    return ((T_PagaresRow)(this.Rows[index]));
                }
            }
            
            public event T_PagaresRowChangeEventHandler T_PagaresRowChanged;
            
            public event T_PagaresRowChangeEventHandler T_PagaresRowChanging;
            
            public event T_PagaresRowChangeEventHandler T_PagaresRowDeleted;
            
            public event T_PagaresRowChangeEventHandler T_PagaresRowDeleting;
            
            public void AddT_PagaresRow(T_PagaresRow row) {
                this.Rows.Add(row);
            }
            
            public T_PagaresRow AddT_PagaresRow(string ANO_PERIODO, string SEDE_TDESC, string CARRERA, string ALUMNO, string RUT_ALUMNO, string AVAL, string RUT_AVAL, string UF_BENEFICIO_PERIODO, string MONTO_PERIODO, string UF_BENEFICIO_ANTERIOR, string MONTO_ACUMULADO, string EMAT_TDESC, string ANO_INGRESO, string ANO_EGRESO) {
                T_PagaresRow rowT_PagaresRow = ((T_PagaresRow)(this.NewRow()));
                rowT_PagaresRow.ItemArray = new object[] {
                        ANO_PERIODO,
                        SEDE_TDESC,
                        CARRERA,
                        ALUMNO,
                        RUT_ALUMNO,
                        AVAL,
                        RUT_AVAL,
                        UF_BENEFICIO_PERIODO,
                        MONTO_PERIODO,
                        UF_BENEFICIO_ANTERIOR,
                        MONTO_ACUMULADO,
                        EMAT_TDESC,
                        ANO_INGRESO,
                        ANO_EGRESO};
                this.Rows.Add(rowT_PagaresRow);
                return rowT_PagaresRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                T_PagaresDataTable cln = ((T_PagaresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new T_PagaresDataTable();
            }
            
            internal void InitVars() {
                this.columnANO_PERIODO = this.Columns["ANO_PERIODO"];
                this.columnSEDE_TDESC = this.Columns["SEDE_TDESC"];
                this.columnCARRERA = this.Columns["CARRERA"];
                this.columnALUMNO = this.Columns["ALUMNO"];
                this.columnRUT_ALUMNO = this.Columns["RUT_ALUMNO"];
                this.columnAVAL = this.Columns["AVAL"];
                this.columnRUT_AVAL = this.Columns["RUT_AVAL"];
                this.columnUF_BENEFICIO_PERIODO = this.Columns["UF_BENEFICIO_PERIODO"];
                this.columnMONTO_PERIODO = this.Columns["MONTO_PERIODO"];
                this.columnUF_BENEFICIO_ANTERIOR = this.Columns["UF_BENEFICIO_ANTERIOR"];
                this.columnMONTO_ACUMULADO = this.Columns["MONTO_ACUMULADO"];
                this.columnEMAT_TDESC = this.Columns["EMAT_TDESC"];
                this.columnANO_INGRESO = this.Columns["ANO_INGRESO"];
                this.columnANO_EGRESO = this.Columns["ANO_EGRESO"];
            }
            
            private void InitClass() {
                this.columnANO_PERIODO = new DataColumn("ANO_PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_PERIODO);
                this.columnSEDE_TDESC = new DataColumn("SEDE_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEDE_TDESC);
                this.columnCARRERA = new DataColumn("CARRERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCARRERA);
                this.columnALUMNO = new DataColumn("ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnALUMNO);
                this.columnRUT_ALUMNO = new DataColumn("RUT_ALUMNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_ALUMNO);
                this.columnAVAL = new DataColumn("AVAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAVAL);
                this.columnRUT_AVAL = new DataColumn("RUT_AVAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRUT_AVAL);
                this.columnUF_BENEFICIO_PERIODO = new DataColumn("UF_BENEFICIO_PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUF_BENEFICIO_PERIODO);
                this.columnMONTO_PERIODO = new DataColumn("MONTO_PERIODO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO_PERIODO);
                this.columnUF_BENEFICIO_ANTERIOR = new DataColumn("UF_BENEFICIO_ANTERIOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUF_BENEFICIO_ANTERIOR);
                this.columnMONTO_ACUMULADO = new DataColumn("MONTO_ACUMULADO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTO_ACUMULADO);
                this.columnEMAT_TDESC = new DataColumn("EMAT_TDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEMAT_TDESC);
                this.columnANO_INGRESO = new DataColumn("ANO_INGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_INGRESO);
                this.columnANO_EGRESO = new DataColumn("ANO_EGRESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANO_EGRESO);
                this.columnANO_PERIODO.ReadOnly = true;
                this.columnSEDE_TDESC.ReadOnly = true;
                this.columnCARRERA.ReadOnly = true;
                this.columnALUMNO.ReadOnly = true;
                this.columnRUT_ALUMNO.ReadOnly = true;
                this.columnAVAL.ReadOnly = true;
                this.columnRUT_AVAL.ReadOnly = true;
                this.columnUF_BENEFICIO_PERIODO.ReadOnly = true;
                this.columnMONTO_PERIODO.ReadOnly = true;
                this.columnUF_BENEFICIO_ANTERIOR.ReadOnly = true;
                this.columnMONTO_ACUMULADO.ReadOnly = true;
                this.columnEMAT_TDESC.ReadOnly = true;
                this.columnANO_INGRESO.ReadOnly = true;
                this.columnANO_EGRESO.ReadOnly = true;
            }
            
            public T_PagaresRow NewT_PagaresRow() {
                return ((T_PagaresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new T_PagaresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(T_PagaresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PagaresRowChanged != null)) {
                    this.T_PagaresRowChanged(this, new T_PagaresRowChangeEvent(((T_PagaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PagaresRowChanging != null)) {
                    this.T_PagaresRowChanging(this, new T_PagaresRowChangeEvent(((T_PagaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PagaresRowDeleted != null)) {
                    this.T_PagaresRowDeleted(this, new T_PagaresRowChangeEvent(((T_PagaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PagaresRowDeleting != null)) {
                    this.T_PagaresRowDeleting(this, new T_PagaresRowChangeEvent(((T_PagaresRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveT_PagaresRow(T_PagaresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_PagaresRow : DataRow {
            
            private T_PagaresDataTable tableT_Pagares;
            
            internal T_PagaresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Pagares = ((T_PagaresDataTable)(this.Table));
            }
            
            public string ANO_PERIODO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.ANO_PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.ANO_PERIODOColumn] = value;
                }
            }
            
            public string SEDE_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.SEDE_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.SEDE_TDESCColumn] = value;
                }
            }
            
            public string CARRERA {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.CARRERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.CARRERAColumn] = value;
                }
            }
            
            public string ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.ALUMNOColumn] = value;
                }
            }
            
            public string RUT_ALUMNO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.RUT_ALUMNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.RUT_ALUMNOColumn] = value;
                }
            }
            
            public string AVAL {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.AVALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.AVALColumn] = value;
                }
            }
            
            public string RUT_AVAL {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.RUT_AVALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.RUT_AVALColumn] = value;
                }
            }
            
            public string UF_BENEFICIO_PERIODO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.UF_BENEFICIO_PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.UF_BENEFICIO_PERIODOColumn] = value;
                }
            }
            
            public string MONTO_PERIODO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.MONTO_PERIODOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.MONTO_PERIODOColumn] = value;
                }
            }
            
            public string UF_BENEFICIO_ANTERIOR {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.UF_BENEFICIO_ANTERIORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.UF_BENEFICIO_ANTERIORColumn] = value;
                }
            }
            
            public string MONTO_ACUMULADO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.MONTO_ACUMULADOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.MONTO_ACUMULADOColumn] = value;
                }
            }
            
            public string EMAT_TDESC {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.EMAT_TDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.EMAT_TDESCColumn] = value;
                }
            }
            
            public string ANO_INGRESO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.ANO_INGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.ANO_INGRESOColumn] = value;
                }
            }
            
            public string ANO_EGRESO {
                get {
                    try {
                        return ((string)(this[this.tableT_Pagares.ANO_EGRESOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_Pagares.ANO_EGRESOColumn] = value;
                }
            }
            
            public bool IsANO_PERIODONull() {
                return this.IsNull(this.tableT_Pagares.ANO_PERIODOColumn);
            }
            
            public void SetANO_PERIODONull() {
                this[this.tableT_Pagares.ANO_PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEDE_TDESCNull() {
                return this.IsNull(this.tableT_Pagares.SEDE_TDESCColumn);
            }
            
            public void SetSEDE_TDESCNull() {
                this[this.tableT_Pagares.SEDE_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsCARRERANull() {
                return this.IsNull(this.tableT_Pagares.CARRERAColumn);
            }
            
            public void SetCARRERANull() {
                this[this.tableT_Pagares.CARRERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsALUMNONull() {
                return this.IsNull(this.tableT_Pagares.ALUMNOColumn);
            }
            
            public void SetALUMNONull() {
                this[this.tableT_Pagares.ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_ALUMNONull() {
                return this.IsNull(this.tableT_Pagares.RUT_ALUMNOColumn);
            }
            
            public void SetRUT_ALUMNONull() {
                this[this.tableT_Pagares.RUT_ALUMNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsAVALNull() {
                return this.IsNull(this.tableT_Pagares.AVALColumn);
            }
            
            public void SetAVALNull() {
                this[this.tableT_Pagares.AVALColumn] = System.Convert.DBNull;
            }
            
            public bool IsRUT_AVALNull() {
                return this.IsNull(this.tableT_Pagares.RUT_AVALColumn);
            }
            
            public void SetRUT_AVALNull() {
                this[this.tableT_Pagares.RUT_AVALColumn] = System.Convert.DBNull;
            }
            
            public bool IsUF_BENEFICIO_PERIODONull() {
                return this.IsNull(this.tableT_Pagares.UF_BENEFICIO_PERIODOColumn);
            }
            
            public void SetUF_BENEFICIO_PERIODONull() {
                this[this.tableT_Pagares.UF_BENEFICIO_PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTO_PERIODONull() {
                return this.IsNull(this.tableT_Pagares.MONTO_PERIODOColumn);
            }
            
            public void SetMONTO_PERIODONull() {
                this[this.tableT_Pagares.MONTO_PERIODOColumn] = System.Convert.DBNull;
            }
            
            public bool IsUF_BENEFICIO_ANTERIORNull() {
                return this.IsNull(this.tableT_Pagares.UF_BENEFICIO_ANTERIORColumn);
            }
            
            public void SetUF_BENEFICIO_ANTERIORNull() {
                this[this.tableT_Pagares.UF_BENEFICIO_ANTERIORColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTO_ACUMULADONull() {
                return this.IsNull(this.tableT_Pagares.MONTO_ACUMULADOColumn);
            }
            
            public void SetMONTO_ACUMULADONull() {
                this[this.tableT_Pagares.MONTO_ACUMULADOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEMAT_TDESCNull() {
                return this.IsNull(this.tableT_Pagares.EMAT_TDESCColumn);
            }
            
            public void SetEMAT_TDESCNull() {
                this[this.tableT_Pagares.EMAT_TDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_INGRESONull() {
                return this.IsNull(this.tableT_Pagares.ANO_INGRESOColumn);
            }
            
            public void SetANO_INGRESONull() {
                this[this.tableT_Pagares.ANO_INGRESOColumn] = System.Convert.DBNull;
            }
            
            public bool IsANO_EGRESONull() {
                return this.IsNull(this.tableT_Pagares.ANO_EGRESOColumn);
            }
            
            public void SetANO_EGRESONull() {
                this[this.tableT_Pagares.ANO_EGRESOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class T_PagaresRowChangeEvent : EventArgs {
            
            private T_PagaresRow eventRow;
            
            private DataRowAction eventAction;
            
            public T_PagaresRowChangeEvent(T_PagaresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public T_PagaresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
